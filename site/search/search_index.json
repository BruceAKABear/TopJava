{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u4f7f\u7528TopJava\u6587\u6863 \u00b6 \u300aTopJava\u300b\u603b\u7ed3\u4e86\u4e2a\u4eba\u5728\u5e73\u65f6\u79ef\u7d2f\u7684\u5404\u79cd\u5404\u6837\u548cJava\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6574\u7406\u6587\u6863\u4e00\u662f\u65b9\u4fbf\u81ea\u5df1\u5e73\u65f6\u67e5\u9605\u4e8c\u662f\u65b9\u4fbf\u8df3\u69fd\u9762\u8bd5","title":"\u7b80\u4ecb"},{"location":"#topjava","text":"\u300aTopJava\u300b\u603b\u7ed3\u4e86\u4e2a\u4eba\u5728\u5e73\u65f6\u79ef\u7d2f\u7684\u5404\u79cd\u5404\u6837\u548cJava\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6574\u7406\u6587\u6863\u4e00\u662f\u65b9\u4fbf\u81ea\u5df1\u5e73\u65f6\u67e5\u9605\u4e8c\u662f\u65b9\u4fbf\u8df3\u69fd\u9762\u8bd5","title":"\u6b22\u8fce\u4f7f\u7528TopJava\u6587\u6863"},{"location":"base/classload/","text":"Java \u4e2d\u7c7b\u52a0\u8f7d\u673a\u5236 \u00b6 Java \u7c7b\u7684\u751f\u547d\u5468\u671f\uff1a\u52a0\u8f7d\u3001\u9a8c\u8bc1\u3001\u51c6\u5907\u3001\u89e3\u6790\u3001\u521d\u59cb\u5316\u3001\u4f7f\u7528\u3001\u5378\u8f7d \u4e03\u4e2a\u9636\u6bb5 \u52a0\u8f7d\uff1a\u901a\u8fc7\u5168\u9650\u5b9a\u540d\uff0c\u5b57\u8282\u7801\u52a0\u8f7d\u4ee5\u540e\u653e\u5728\u65b9\u6cd5\u533a \u6839\u52a0\u8f7d\u5668 bootstrap\uff0cc++\u8bed\u8a00\u5199\u7684\u3002\u7236\u7c7b\u52a0\u8f7d\u5668\u662f null\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u7236\u7c7b\u52a0\u8f7d\u5668\u3002\u52a0\u8f7d java_home/lib/\u4e0b\u7684 rt.jar\\resources.jar\\charsets.jar \u548c class \u7b49 \u6269\u5c55\u52a0\u8f7d\u5668 ExtClassLoader\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u662f bootstrap\u3002 %JRE_HOME/lib/ext \u76ee\u5f55\u4e0b\u7684 jar \u548c class \u7b49 \u7cfb\u7edf\u52a0\u8f7d\u5668 AppClassLoader\u3002Java \u7c7b,\u7ee7\u627f\u81ea URLClassLoader \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668,\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\u5e94\u7528\u7a0b\u5e8f classpath \u76ee\u5f55\u4e0b\u7684\u6240\u6709 jar \u548c class \u7b49 \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff0c\u7ee7\u627f classloader \u7c7b\uff0c\u91cd\u5199 findclass \u65b9\u6cd5 \u7c7b\u52a0\u8f7d\u5668\u7684\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236 \u00b6 \u7c7b\u52a0\u8f7d\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u8bf7\u6c42\u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d \u7236\u6982\u5ff5\u4e0d\u662f\u7ee7\u627f\uff0c\u800c\u662f\u590d\u7528\u7236\u52a0\u8f7d\u5668\u4e2d\u4ee3\u7801 \u907f\u514d\u91cd\u590d\u52a0\u8f7d \u5b89\u5168\u6027\u56e0\u7d20 \u52a0\u8f7d\u65f6\u4f1a\u53bb\u67e5\u627e\u662f\u5426\u5df2\u7ecf\u52a0\u8f7d\u76f8\u540c\u7c7b\uff0c\u9632\u6b62\u52a0\u8f7d\u4f8b\u5982\u7b2c\u4e09\u65b9 object \u7b49\u7c7b \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668 \u00b6 \u7ee7\u627f ClassLoader \u91cd\u65b0 findClass \u65b9\u6cd5","title":"Java\u4e2d\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"base/classload/#java","text":"Java \u7c7b\u7684\u751f\u547d\u5468\u671f\uff1a\u52a0\u8f7d\u3001\u9a8c\u8bc1\u3001\u51c6\u5907\u3001\u89e3\u6790\u3001\u521d\u59cb\u5316\u3001\u4f7f\u7528\u3001\u5378\u8f7d \u4e03\u4e2a\u9636\u6bb5 \u52a0\u8f7d\uff1a\u901a\u8fc7\u5168\u9650\u5b9a\u540d\uff0c\u5b57\u8282\u7801\u52a0\u8f7d\u4ee5\u540e\u653e\u5728\u65b9\u6cd5\u533a \u6839\u52a0\u8f7d\u5668 bootstrap\uff0cc++\u8bed\u8a00\u5199\u7684\u3002\u7236\u7c7b\u52a0\u8f7d\u5668\u662f null\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u7236\u7c7b\u52a0\u8f7d\u5668\u3002\u52a0\u8f7d java_home/lib/\u4e0b\u7684 rt.jar\\resources.jar\\charsets.jar \u548c class \u7b49 \u6269\u5c55\u52a0\u8f7d\u5668 ExtClassLoader\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u662f bootstrap\u3002 %JRE_HOME/lib/ext \u76ee\u5f55\u4e0b\u7684 jar \u548c class \u7b49 \u7cfb\u7edf\u52a0\u8f7d\u5668 AppClassLoader\u3002Java \u7c7b,\u7ee7\u627f\u81ea URLClassLoader \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668,\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\u5e94\u7528\u7a0b\u5e8f classpath \u76ee\u5f55\u4e0b\u7684\u6240\u6709 jar \u548c class \u7b49 \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff0c\u7ee7\u627f classloader \u7c7b\uff0c\u91cd\u5199 findclass \u65b9\u6cd5","title":"Java \u4e2d\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"base/classload/#_1","text":"\u7c7b\u52a0\u8f7d\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u8bf7\u6c42\u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d \u7236\u6982\u5ff5\u4e0d\u662f\u7ee7\u627f\uff0c\u800c\u662f\u590d\u7528\u7236\u52a0\u8f7d\u5668\u4e2d\u4ee3\u7801 \u907f\u514d\u91cd\u590d\u52a0\u8f7d \u5b89\u5168\u6027\u56e0\u7d20 \u52a0\u8f7d\u65f6\u4f1a\u53bb\u67e5\u627e\u662f\u5426\u5df2\u7ecf\u52a0\u8f7d\u76f8\u540c\u7c7b\uff0c\u9632\u6b62\u52a0\u8f7d\u4f8b\u5982\u7b2c\u4e09\u65b9 object \u7b49\u7c7b","title":"\u7c7b\u52a0\u8f7d\u5668\u7684\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236"},{"location":"base/classload/#_2","text":"\u7ee7\u627f ClassLoader \u91cd\u65b0 findClass \u65b9\u6cd5","title":"\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668"},{"location":"base/collections/","text":"\u96c6\u5408 \u00b6 List \u00b6 \u975e\u7ebf\u7a0b\u5b89\u5168arraylist\u5e76\u53d1\u4fee\u6539\u5f02\u5e38concurrentmodificationexception\u4ea7\u751f\u7684\u539f\u7406 arraylist\u7684add\u65b9\u6cd5\u4e2d\u4f7f\u7528size++ size++\u672c\u8eab\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684 \u5728\u6f14\u793a\u65f6\uff0c\u5176\u5b9e\u662f\u6570\u636e\u4e0d\u4e00\u81f4\u5f02\u5e38\uff0c\u56e0\u4e3a\u8f93\u51fa\u8bed\u53e5\u4f1a\u53bb\u904d\u5386\uff0c\u800c\u65b0\u589e\u53ef\u80fd\u8fd8\u5728\u65b0\u589e set \u00b6 map \u00b6","title":"\u96c6\u5408"},{"location":"base/collections/#_1","text":"","title":"\u96c6\u5408"},{"location":"base/collections/#list","text":"\u975e\u7ebf\u7a0b\u5b89\u5168arraylist\u5e76\u53d1\u4fee\u6539\u5f02\u5e38concurrentmodificationexception\u4ea7\u751f\u7684\u539f\u7406 arraylist\u7684add\u65b9\u6cd5\u4e2d\u4f7f\u7528size++ size++\u672c\u8eab\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684 \u5728\u6f14\u793a\u65f6\uff0c\u5176\u5b9e\u662f\u6570\u636e\u4e0d\u4e00\u81f4\u5f02\u5e38\uff0c\u56e0\u4e3a\u8f93\u51fa\u8bed\u53e5\u4f1a\u53bb\u904d\u5386\uff0c\u800c\u65b0\u589e\u53ef\u80fd\u8fd8\u5728\u65b0\u589e","title":"List"},{"location":"base/collections/#set","text":"","title":"set"},{"location":"base/collections/#map","text":"","title":"map"},{"location":"base/datatype/","text":"java \u4e2d\u7684\u6570\u636e\u7c7b\u578b \u00b6 1. Java \u4e2d\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u7c7b\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b \u00b6 java\u4e2d\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u79cd\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u5f15\u7528\u6570\u636e\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u503c\u4f20\u9012\uff0c\u5728\u65b9\u6cd5\u4e2d\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u503c\u3002 \u5f15\u7528\u6570\u636e\u7c7b\u578b\u662f\u8fdb\u884c\u5f15\u7528\u4f20\u9012\uff0c\u5728\u65b9\u6cd5\u4e2d\u4fee\u6539\u5c5e\u6027\u662f\u4f1a\u5f71\u54cd\u539f\u59cb\u503c\u3002\u4f46\u662f\u4f5c\u4e3a\u7279\u6b8a\u7684\u5f15\u7528\u6570\u636e\u7c7b\u578bstring\u5f88\u7279\u6b8a\u3002 2. \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u5206\u4e3a 8 \u79cd \u6570\u636e\u7c7b\u578b \u5927\u5c0f byte 1 \u5b57\u8282 short 2 \u5b57\u8282 int 4 \u5b57\u8282 long 8 \u5b57\u8282 char 2 \u5b57\u8282 float 4 \u5b57\u8282 double 8 \u5b57\u8282 boolean \u6ca1\u8bf4\u5927\u5c0f","title":"Java\u4e2d\u7684\u6570\u636e\u7c7b\u578b"},{"location":"base/datatype/#java","text":"","title":"java \u4e2d\u7684\u6570\u636e\u7c7b\u578b"},{"location":"base/datatype/#1-java","text":"java\u4e2d\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u79cd\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u5f15\u7528\u6570\u636e\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u503c\u4f20\u9012\uff0c\u5728\u65b9\u6cd5\u4e2d\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u503c\u3002 \u5f15\u7528\u6570\u636e\u7c7b\u578b\u662f\u8fdb\u884c\u5f15\u7528\u4f20\u9012\uff0c\u5728\u65b9\u6cd5\u4e2d\u4fee\u6539\u5c5e\u6027\u662f\u4f1a\u5f71\u54cd\u539f\u59cb\u503c\u3002\u4f46\u662f\u4f5c\u4e3a\u7279\u6b8a\u7684\u5f15\u7528\u6570\u636e\u7c7b\u578bstring\u5f88\u7279\u6b8a\u3002","title":"1. Java \u4e2d\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u7c7b\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b"},{"location":"base/datatype/#2","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5206\u4e3a 8 \u79cd \u6570\u636e\u7c7b\u578b \u5927\u5c0f byte 1 \u5b57\u8282 short 2 \u5b57\u8282 int 4 \u5b57\u8282 long 8 \u5b57\u8282 char 2 \u5b57\u8282 float 4 \u5b57\u8282 double 8 \u5b57\u8282 boolean \u6ca1\u8bf4\u5927\u5c0f","title":"2. \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"base/list/","text":"list \u5bb9\u5668 \u00b6 ArrayList \u548c LinkedList \u00b6 ArrayList \u5e95\u5c42\u57fa\u4e8e\u6570\u7ec4\uff0c\u521d\u59cb\u5316\u5927\u5c0f\u4e3a 10\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002\u5f53\u9700\u8981\u7684\u5927\u5c0f\u5927\u4e8e\u5b9e\u9645\u7684\u5927\u5c0f\u7684\u65f6\u5019\u5c31\u4f1a\u8fdb\u884c\u6269\u5bb9\uff0c\u6269\u5bb9\u5927\u5c0f\u4e3a\u539f\u5927\u5c0f\u7684 1.5 \u500d\uff0c\u7136\u540e\u8c03\u7528 Array.copyOf()\u65b9\u6cd5\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u590d\u5236\u5230\u65b0\u6570\u7ec4\u3002LinkedList \u5e95\u5c42\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u589e\u5220\u5757\uff0c\u67e5\u627e\u6162\u3002","title":"list\u5bb9\u5668"},{"location":"base/list/#list","text":"","title":"list \u5bb9\u5668"},{"location":"base/list/#arraylist-linkedlist","text":"ArrayList \u5e95\u5c42\u57fa\u4e8e\u6570\u7ec4\uff0c\u521d\u59cb\u5316\u5927\u5c0f\u4e3a 10\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002\u5f53\u9700\u8981\u7684\u5927\u5c0f\u5927\u4e8e\u5b9e\u9645\u7684\u5927\u5c0f\u7684\u65f6\u5019\u5c31\u4f1a\u8fdb\u884c\u6269\u5bb9\uff0c\u6269\u5bb9\u5927\u5c0f\u4e3a\u539f\u5927\u5c0f\u7684 1.5 \u500d\uff0c\u7136\u540e\u8c03\u7528 Array.copyOf()\u65b9\u6cd5\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u590d\u5236\u5230\u65b0\u6570\u7ec4\u3002LinkedList \u5e95\u5c42\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u589e\u5220\u5757\uff0c\u67e5\u627e\u6162\u3002","title":"ArrayList \u548c LinkedList"},{"location":"base/map/","text":"map \u96c6\u5408 \u00b6 map \u662f\u4ee5 key-value \u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784 hashmap \u00b6 \u9ed8\u8ba4\u5927\u5c0f 16\uff0c2 \u7684 4 \u6b21\u65b9\u3002\u6700\u5927\u5927\u5c0f 2 \u7684 30 \u6b21\u65b9\uff0c\u5927\u6982\u5728 10 \u4ebf 7 \u5343\u4e07\u591a \u8d1f\u8f7d\u56e0\u5b50 0.75 \u5b58\u50a8\u6570\u636e\u65f6\uff0c\u5c06 hash \u503c\uff0ckey\uff0cvalue \u7b49\u5c01\u88c5\u6210\u4e00\u4e2a\u5bf9\u8c61 \u521d\u59cb\u5316\u5927\u5c0f\u4e3a\u4ec0\u4e48\u65f6 2 \u7684\u6b21\u5e42\uff1f \u00b6 \u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u80fd\u52a0\u5feb hash \u503c\u5f97\u8ba1\u7b97 \u4e3a\u4ec0\u4e48\u52a0\u8f7d\u56e0\u5b50\u8981\u8bbe\u7f6e\u6210 0.75\uff1f \u00b6 \u8fc7\u5c0f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u8fc7\u5927\u54c8\u5e0c\u78b0\u649e\u6982\u7387\u5927 \u4ec0\u4e48\u662f hash \u51b2\u7a81\uff0chashmap \u662f\u600e\u4e48\u5904\u7406\u7684\uff1f \u00b6 \u5f53\uff0c\u6211\u4eec\u5bf9\u5b58\u5165\u7684 key \u8fdb\u884c hash \u8ba1\u7b97\u4ee5\u540e\uff0c\u5f97\u5230\u7684 hash \u6876\u7684\u4f4d\u7f6e\u548c\u5176\u4ed6\u7684 key \u8ba1\u7b97\u51fa\u6765\u7684 hash \u6876\u7684\u4f4d\u7f6e\u76f8\u540c\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u662f hash \u51b2\u7a81\uff08\u54c8\u5e0c\u78b0\u649e\uff09\u3002\u5b58\u5728\u94fe\u8868\u4e0a hash \u8868\u91c7\u7528\u4ec0\u4e48\u7b97\u6cd5\u8ba1\u7b97\u51fa hash \u503c?\u8fd8\u6709\u4ec0\u4e48\u7b97\u6cd5\u53ef\u4ee5\u8ba1\u7b97\u51fa hash \u503c\uff1f \u00b6 \u91c7\u7528 key \u7684 hashcode \u503c\uff0c\u6309\u4f4d\u5f02\u6216 key \u7684\u54c8\u5e0c\u503c\u7ed3\u5408\u6570\u7ec4\u7684\u957f\u5ea6\u8fdb\u884c\u65e0\u7b26\u53f7\u7684\u53f3\u79fb(>>>)\uff0c\u4e5f\u5c31\u662f key \u7684\u54c8\u5e0c\u503c\u65e0\u7b26\u53f7\u53f3\u79fb 16 \u4f4d\u3002 \u53ef\u4ee5\u8ba1\u7b97\u54c8\u5e0c\u503c\u7684\u7b97\u6cd5\u6709\uff1a \u53d6\u4f59 \u5e73\u65b9\u53d6\u4e2d \u4f2a\u968f\u673a\u6570\u6cd5 \u5176\u4ed6\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u5c24\u5176\u662f\u53d6\u4f59\u5e95\u5c42\u662f\u4e00\u76f4\u51cf\u3002\u91c7\u7528\u5f02\u6216\u901f\u5ea6\u662f\u975e\u5e38\u5feb\u7684\u3002 1.7 \u4e2d\u7684 HashMap \u00b6 \u5e95\u5c42\u539f\u7406\u6811\u6570\u7ec4\u52a0\u94fe\u8868\uff0c\u6570\u7ec4\u4e3a entry \u6570\u7ec4\uff0c\u5b9e\u73b0\u4e86 mep.entry hashmap \u7684\u6b7b\u9501\u95ee\u9898\uff1f \u00b6 1.8 \u4e2d\u7684 HashMap \u00b6 \u94fe\u8868\u8f6c\u6811\u7684\u9608\u503c\u4e3a 8 \u6811\u8f6c\u94fe\u8868\u7684\u9608\u503c\u4e3a 6 \u6811\u8f6c\u6362\u6570\u7ec4\u5927\u5c0f\u9608\u503c 64 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u662f\u6570\u7ec4\u52a0\u94fe\u8868\u52a0\u7ea2\u9ed1\u6811,\u6570\u7ec4\u4e3a node \u6570\u7ec4\uff0c\u4e5f\u5b9e\u73b0\u4e86 map.entry \u4e3a\u4ec0\u4e48\u94fe\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e 7 \u65f6\uff0c\u5c31\u8981\u8f6c\u6210\u7ea2\u9ed1\u6811\uff1f \u00b6 \u9996\u5148\uff0c\u4e0d\u662f\u8bf4\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e 8 \u5c31\u8fdb\u884c\u6811\u7684\u8f6c\u6362\u3002\u6e90\u7801\u91cc\u9762\u5199\u4e86\u53ea\u6709\u5f53\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8e 64\uff0c\u540c\u65f6\uff0c\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e 8\uff0c\u90a3\u4e48\u624d\u8fdb\u884c\u6811\u7684\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u5462\uff1f \u7ea2\u9ed1\u6811\u5728\u63d2\u5165\u6570\u636e\u5f97\u65f6\u5019\u4f1a\u8fdb\u884c\u5de6\u65cb\u53f3\u65cb\u5f97\u64cd\u4f5c\uff0c\u5bfc\u81f4\u63d2\u5165\u6bd4\u8f83\u6162\uff0c\u867d\u7136\u67e5\u8be2\u5feb\uff0c\u4f46\u662f\u5176\u5b9e\u6027\u80fd\u662f\u6709\u7f3a\u9677\u7684\u3002\u6240\u4ee5\u6ca1\u6709\u4e0a\u6765\u5c31\u4f7f\u7528\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u6e90\u7801\u91cc\u9762\u5728\u6570\u7ec4\u6ca1\u6709\u5927\u4e8e 64 \u7684\u65f6\u5019\uff0c\u5982\u679c\u94fe\u8868\u957f\u5ea6\u5927\u4e8e 8 \u5176\u5b9e\u662f\u8fdb\u884c\u4e86\u6570\u7ec4\u7684\u6269\u5bb9\u3002\u53ea\u6709\u5f53\u6570\u7ec4\u957f\u5ea6\u5927\u4e8e 64 \u4e14\u94fe\u8868\u957f\u5ea6\u5927\u4e8e 8 \u4ee5\u540e\uff0c\u624d\u8fdb\u884c\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811\u3002 1.7 \u6e90\u7801\u5206\u6790 \u00b6 1. 1.7 \u4e2d put \u65b9\u6cd5 \u00b6 public V put(K key, V value) { //\u5982\u679c\u54c8\u5e0c\u8868\u4e3a\u7a7a\uff0c\u5219\u521d\u59cb\u5316entry\u6570\u7ec4 if (table == EMPTY_TABLE) { inflateTable(threshold); } //\u5982\u679ckey\u662fnull\u503c\uff0c\u76f4\u63a5\u8c03\u7528putnull\u65b9\u6cd5 if (key == null) { return putForNullKey(value); } //\u8ba1\u7b97key\u7684\u54c8\u5e0c\u503c int hash = hash(key); //\u8ba1\u7b97key\u5728hash\u6876\u4e2d\u7684\u4f4d\u7f6e int i = indexFor(hash, table.length); //\u6839\u636e\u6876\u7684\u4f4d\u7f6e\uff0c\u83b7\u53d6\u539f\u6709\u503c\u3002\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u904d\u5386\u6240\u6709\u7684\u94fe\u8868 for (Entry<K,V> e = table[i]; e != null; e = e.next) { Object k; //\u5982\u679c\u94fe\u8868\u4e2dhash\u76f8\u540c\u540c\u65f6key\u76f8\u540c\uff0c\u5219\u66ff\u6362\u539f\u6709\u503c if (e.hash == hash && ((k = e.key) == key || key.equals(k))) { V oldValue = e.value; e.value = value; e.recordAccess(this); return oldValue; } } modCount++; //\u5982\u679c\u539f\u6709\u503c\u4e3a\u7a7a\uff0c\u90a3\u4e48\u76f4\u63a5\u6dfb\u52a0 addEntry(hash, key, value, i); return null; } 2. 1.7 \u6e90\u7801\u4e2d\uff0c\u5e76\u4e0d\u4ec5\u4ec5\u662f\u6570\u7ec4\u8fbe\u5230\u9608\u503c 12 \u5c31\u8fdb\u884c\u6269\u5bb9\uff0c\u8fd8\u8981\u5224\u65ad\u8981\u5b58\u50a8\u7684\u4f4d\u7f6e\u662f\u5426\u4e3a null \u00b6 \u6e90\u7801\uff1a //\u6dfb\u52a0entry\u5bf9\u8c61\u65b9\u6cd5 void addEntry(int hash, K key, V value, int bucketIndex) { //\u5224\u65ad\u9608\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\uff0c\u540c\u65f6\u54c8\u5e0c\u8868\u4e0a\u4e0d\u4e3anull if ((size >= threshold) && (null != table[bucketIndex])) { resize(2 * table.length); hash = (null != key) ? hash(key) : 0; bucketIndex = indexFor(hash, table.length); } createEntry(hash, key, value, bucketIndex); } 3. 1.7 \u4e2d\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u62c9\u94fe\u6cd5\u8fdb\u884c\u5b58\u50a8 \u00b6 //\u6dfb\u52a0\u5bf9\u8c61\u65b9\u6cd5 void createEntry(int hash, K key, V value, int bucketIndex) { //\u9996\u5148\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u7684\u5bf9\u8c61 Entry<K,V> e = table[bucketIndex]; //\u7136\u540e\u6dfb\u52a0\u5bf9\u8c61\uff0c\u6dfb\u52a0\u5bf9\u8c61\u5728\u5934\u90e8 table[bucketIndex] = new Entry<>(hash, key, value, e); size++; } 4. 1.7 \u6269\u5bb9\u65b9\u6cd5 \u00b6 //resize\u65b9\u6cd5\u30021.\u4ea7\u751f\u65b0\u7684\u6570\u7ec4\uff0c2.\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u5bf9\u8c61\u91cd\u65b0\u8fdb\u884chash\u653e\u7f6e\u4e8e\u82af\u6570\u7ec4\u4e2d void resize(int newCapacity) { Entry[] oldTable = table; int oldCapacity = oldTable.length; if (oldCapacity == MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; return; } Entry[] newTable = new Entry[newCapacity]; //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a7\u5236\u662f\u5426\u9700\u8981rehash transfer(newTable, initHashSeedAsNeeded(newCapacity)); table = newTable; threshold = (int)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + 1); } transfer \u65b9\u6cd5\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u503c\u91cd\u65b0\u8ba1\u7b97 hash \u8d4b\u503c\u5230\u65b0\u6570\u7ec4\u4e2d void transfer(Entry[] newTable, boolean rehash) { int newCapacity = newTable.length; //\u904d\u5386\u8001\u6570\u7ec4 for (Entry<K,V> e : table) { while(null != e) { Entry<K,V> next = e.next; if (rehash) { e.hash = null == e.key ? 0 : hash(e.key); } int i = indexFor(e.hash, newCapacity); e.next = newTable[i]; newTable[i] = e; e = next; } } } 5. 1.7 \u4e2d\u7684 get \u65b9\u6cd5 \u00b6 public V get(Object key) { if (key == null) return getForNullKey(); Entry<K,V> entry = getEntry(key); return null == entry ? null : entry.getValue(); } final Entry<K,V> getEntry(Object key) { if (size == 0) { return null; } int hash = (key == null) ? 0 : hash(key); for (Entry<K,V> e = table[indexFor(hash, table.length)]; e != null; e = e.next) { Object k; if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) return e; } return null; } 1.8 \u6e90\u7801\u5206\u6790 \u00b6 1. 1.8 \u4e2d\u7684 put \u65b9\u6cd5 \u00b6 public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) { Node<K,V>[] tab; Node<K,V> p; int n, i; //\u5224\u65ad\u6709\u65e0\u521d\u59cb\u5316\uff0c\u7136\u540e\u521d\u59cb\u5316 if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; //\u8ba1\u7b97index\uff0c\u5982\u679c\u83b7\u5f97index\u7684\u6570\u7ec4\u4e3anull\u90a3\u4e48\u76f4\u63a5\u5c06node\u5bf9\u8c61\u653e\u5728\u6570\u7ec4\u4e0a if ((p = tab[i = (n - 1) & hash]) == null) tab[i] = newNode(hash, key, value, null); else { Node<K,V> e; K k; //\u5982\u679c\u4e0d\u4e3anull,\u5224\u65adhash\u662f\u5426\u76f8\u540c\uff0c\u5224\u65adkey\u5982\u679c\u76f8\u540c\u7136\u540e\u5c06\u65b0\u503c\u66ff\u6362\u65e7\u503c if (p.hash == hash && ((k = p.key) == key || (key != null && key.equals(k)))) e = p; //\u5982\u679c\u662f\u6811\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u6811\u6dfb\u52a0\u65b9\u6cd5 else if (p instanceof TreeNode) e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value); //\u904d\u5386\u94fe\u8868\uff0c\u5c06\u65b0node\u5bf9\u8c61\u653e\u7f6e\u5728\u672b\u5c3e else { for (int binCount = 0; ; ++binCount) { if ((e = p.next) == null) { p.next = newNode(hash, key, value, null); //\u5982\u679c\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e8\u90a3\u4e48\u5c31\u8fdb\u884c\u6811\u8f6c\u6362 if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; } if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) break; p = e; } } if (e != null) { // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); return oldValue; } } ++modCount; if (++size > threshold) resize(); afterNodeInsertion(evict); return null; } ConcurrentHashMap \u00b6 1.7 \u4e2d\u7684 ConcurrentHashMap \u00b6 \u5206\u6bb5\u9501\u52a0 cas \u5f53\u6211\u4eec put \u7684\u65f6\u5019\uff0c\u6839\u636e key \u7684 hash \u503c\uff0c\u5148\u53bb\u83b7\u53d6 segment \u6570\u7ec4\u4e0b\u6807\uff0c\u83b7\u53d6\u5230 segment \u5bf9\u8c61,\u5982\u679csegment\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31new\u4e00\u4e2asegement\u5bf9\u8c61\uff0c\u76f8\u5173\u7684\u6570\u636e\u4ece0\u76f8\u5173\u7684\u5c5e\u6027\uff0csegment \u5bf9\u8c61\u5185\u90e8\u6709\u4e00\u4e2a\u5c0f\u7684 hashentry \u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5c0f\u7684 hahsmap.\u7136\u540e\u6839\u636e hash \u8ba1\u7b97\u51fa\u54c8\u5e0c\u6876\u7684\u4f4d\u7f6e\uff0c\u53bb put \u6570\u636e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5462\u4f1a\u4f7f\u7528\u975e\u516c\u5e73\u9501 unfairLock. 1.8 \u4e2d\u7684 ConcurrentHashMap \u00b6 \u5e95\u5c42\u4f7f\u7528 synchronized \u548c cas \u548chashmap\u5f88\u50cf\uff0c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u4e86cas,\u5728\u6dfb\u52a0\u65f6\u4f7f\u7528\u4e86sync","title":"map\u96c6\u5408"},{"location":"base/map/#map","text":"map \u662f\u4ee5 key-value \u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u7ec4\u7684\u6570\u636e\u7ed3\u6784","title":"map \u96c6\u5408"},{"location":"base/map/#hashmap","text":"\u9ed8\u8ba4\u5927\u5c0f 16\uff0c2 \u7684 4 \u6b21\u65b9\u3002\u6700\u5927\u5927\u5c0f 2 \u7684 30 \u6b21\u65b9\uff0c\u5927\u6982\u5728 10 \u4ebf 7 \u5343\u4e07\u591a \u8d1f\u8f7d\u56e0\u5b50 0.75 \u5b58\u50a8\u6570\u636e\u65f6\uff0c\u5c06 hash \u503c\uff0ckey\uff0cvalue \u7b49\u5c01\u88c5\u6210\u4e00\u4e2a\u5bf9\u8c61","title":"hashmap"},{"location":"base/map/#2","text":"\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u80fd\u52a0\u5feb hash \u503c\u5f97\u8ba1\u7b97","title":"\u521d\u59cb\u5316\u5927\u5c0f\u4e3a\u4ec0\u4e48\u65f6 2 \u7684\u6b21\u5e42\uff1f"},{"location":"base/map/#075","text":"\u8fc7\u5c0f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u8fc7\u5927\u54c8\u5e0c\u78b0\u649e\u6982\u7387\u5927","title":"\u4e3a\u4ec0\u4e48\u52a0\u8f7d\u56e0\u5b50\u8981\u8bbe\u7f6e\u6210 0.75\uff1f"},{"location":"base/map/#hash-hashmap","text":"\u5f53\uff0c\u6211\u4eec\u5bf9\u5b58\u5165\u7684 key \u8fdb\u884c hash \u8ba1\u7b97\u4ee5\u540e\uff0c\u5f97\u5230\u7684 hash \u6876\u7684\u4f4d\u7f6e\u548c\u5176\u4ed6\u7684 key \u8ba1\u7b97\u51fa\u6765\u7684 hash \u6876\u7684\u4f4d\u7f6e\u76f8\u540c\u7684\u65f6\u5019\uff0c\u8fd9\u5c31\u662f hash \u51b2\u7a81\uff08\u54c8\u5e0c\u78b0\u649e\uff09\u3002\u5b58\u5728\u94fe\u8868\u4e0a","title":"\u4ec0\u4e48\u662f hash \u51b2\u7a81\uff0chashmap \u662f\u600e\u4e48\u5904\u7406\u7684\uff1f"},{"location":"base/map/#hash-hash-hash","text":"\u91c7\u7528 key \u7684 hashcode \u503c\uff0c\u6309\u4f4d\u5f02\u6216 key \u7684\u54c8\u5e0c\u503c\u7ed3\u5408\u6570\u7ec4\u7684\u957f\u5ea6\u8fdb\u884c\u65e0\u7b26\u53f7\u7684\u53f3\u79fb(>>>)\uff0c\u4e5f\u5c31\u662f key \u7684\u54c8\u5e0c\u503c\u65e0\u7b26\u53f7\u53f3\u79fb 16 \u4f4d\u3002 \u53ef\u4ee5\u8ba1\u7b97\u54c8\u5e0c\u503c\u7684\u7b97\u6cd5\u6709\uff1a \u53d6\u4f59 \u5e73\u65b9\u53d6\u4e2d \u4f2a\u968f\u673a\u6570\u6cd5 \u5176\u4ed6\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u5c24\u5176\u662f\u53d6\u4f59\u5e95\u5c42\u662f\u4e00\u76f4\u51cf\u3002\u91c7\u7528\u5f02\u6216\u901f\u5ea6\u662f\u975e\u5e38\u5feb\u7684\u3002","title":"hash \u8868\u91c7\u7528\u4ec0\u4e48\u7b97\u6cd5\u8ba1\u7b97\u51fa hash \u503c?\u8fd8\u6709\u4ec0\u4e48\u7b97\u6cd5\u53ef\u4ee5\u8ba1\u7b97\u51fa hash \u503c\uff1f"},{"location":"base/map/#17-hashmap","text":"\u5e95\u5c42\u539f\u7406\u6811\u6570\u7ec4\u52a0\u94fe\u8868\uff0c\u6570\u7ec4\u4e3a entry \u6570\u7ec4\uff0c\u5b9e\u73b0\u4e86 mep.entry","title":"1.7 \u4e2d\u7684 HashMap"},{"location":"base/map/#hashmap_1","text":"","title":"hashmap \u7684\u6b7b\u9501\u95ee\u9898\uff1f"},{"location":"base/map/#18-hashmap","text":"\u94fe\u8868\u8f6c\u6811\u7684\u9608\u503c\u4e3a 8 \u6811\u8f6c\u94fe\u8868\u7684\u9608\u503c\u4e3a 6 \u6811\u8f6c\u6362\u6570\u7ec4\u5927\u5c0f\u9608\u503c 64 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u662f\u6570\u7ec4\u52a0\u94fe\u8868\u52a0\u7ea2\u9ed1\u6811,\u6570\u7ec4\u4e3a node \u6570\u7ec4\uff0c\u4e5f\u5b9e\u73b0\u4e86 map.entry","title":"1.8 \u4e2d\u7684 HashMap"},{"location":"base/map/#7","text":"\u9996\u5148\uff0c\u4e0d\u662f\u8bf4\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e 8 \u5c31\u8fdb\u884c\u6811\u7684\u8f6c\u6362\u3002\u6e90\u7801\u91cc\u9762\u5199\u4e86\u53ea\u6709\u5f53\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8e 64\uff0c\u540c\u65f6\uff0c\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e 8\uff0c\u90a3\u4e48\u624d\u8fdb\u884c\u6811\u7684\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u5462\uff1f \u7ea2\u9ed1\u6811\u5728\u63d2\u5165\u6570\u636e\u5f97\u65f6\u5019\u4f1a\u8fdb\u884c\u5de6\u65cb\u53f3\u65cb\u5f97\u64cd\u4f5c\uff0c\u5bfc\u81f4\u63d2\u5165\u6bd4\u8f83\u6162\uff0c\u867d\u7136\u67e5\u8be2\u5feb\uff0c\u4f46\u662f\u5176\u5b9e\u6027\u80fd\u662f\u6709\u7f3a\u9677\u7684\u3002\u6240\u4ee5\u6ca1\u6709\u4e0a\u6765\u5c31\u4f7f\u7528\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u6e90\u7801\u91cc\u9762\u5728\u6570\u7ec4\u6ca1\u6709\u5927\u4e8e 64 \u7684\u65f6\u5019\uff0c\u5982\u679c\u94fe\u8868\u957f\u5ea6\u5927\u4e8e 8 \u5176\u5b9e\u662f\u8fdb\u884c\u4e86\u6570\u7ec4\u7684\u6269\u5bb9\u3002\u53ea\u6709\u5f53\u6570\u7ec4\u957f\u5ea6\u5927\u4e8e 64 \u4e14\u94fe\u8868\u957f\u5ea6\u5927\u4e8e 8 \u4ee5\u540e\uff0c\u624d\u8fdb\u884c\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811\u3002","title":"\u4e3a\u4ec0\u4e48\u94fe\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e 7 \u65f6\uff0c\u5c31\u8981\u8f6c\u6210\u7ea2\u9ed1\u6811\uff1f"},{"location":"base/map/#17","text":"","title":"1.7 \u6e90\u7801\u5206\u6790"},{"location":"base/map/#1-17-put","text":"public V put(K key, V value) { //\u5982\u679c\u54c8\u5e0c\u8868\u4e3a\u7a7a\uff0c\u5219\u521d\u59cb\u5316entry\u6570\u7ec4 if (table == EMPTY_TABLE) { inflateTable(threshold); } //\u5982\u679ckey\u662fnull\u503c\uff0c\u76f4\u63a5\u8c03\u7528putnull\u65b9\u6cd5 if (key == null) { return putForNullKey(value); } //\u8ba1\u7b97key\u7684\u54c8\u5e0c\u503c int hash = hash(key); //\u8ba1\u7b97key\u5728hash\u6876\u4e2d\u7684\u4f4d\u7f6e int i = indexFor(hash, table.length); //\u6839\u636e\u6876\u7684\u4f4d\u7f6e\uff0c\u83b7\u53d6\u539f\u6709\u503c\u3002\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u904d\u5386\u6240\u6709\u7684\u94fe\u8868 for (Entry<K,V> e = table[i]; e != null; e = e.next) { Object k; //\u5982\u679c\u94fe\u8868\u4e2dhash\u76f8\u540c\u540c\u65f6key\u76f8\u540c\uff0c\u5219\u66ff\u6362\u539f\u6709\u503c if (e.hash == hash && ((k = e.key) == key || key.equals(k))) { V oldValue = e.value; e.value = value; e.recordAccess(this); return oldValue; } } modCount++; //\u5982\u679c\u539f\u6709\u503c\u4e3a\u7a7a\uff0c\u90a3\u4e48\u76f4\u63a5\u6dfb\u52a0 addEntry(hash, key, value, i); return null; }","title":"1. 1.7 \u4e2d put \u65b9\u6cd5"},{"location":"base/map/#2-17-12-null","text":"\u6e90\u7801\uff1a //\u6dfb\u52a0entry\u5bf9\u8c61\u65b9\u6cd5 void addEntry(int hash, K key, V value, int bucketIndex) { //\u5224\u65ad\u9608\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\uff0c\u540c\u65f6\u54c8\u5e0c\u8868\u4e0a\u4e0d\u4e3anull if ((size >= threshold) && (null != table[bucketIndex])) { resize(2 * table.length); hash = (null != key) ? hash(key) : 0; bucketIndex = indexFor(hash, table.length); } createEntry(hash, key, value, bucketIndex); }","title":"2. 1.7 \u6e90\u7801\u4e2d\uff0c\u5e76\u4e0d\u4ec5\u4ec5\u662f\u6570\u7ec4\u8fbe\u5230\u9608\u503c 12 \u5c31\u8fdb\u884c\u6269\u5bb9\uff0c\u8fd8\u8981\u5224\u65ad\u8981\u5b58\u50a8\u7684\u4f4d\u7f6e\u662f\u5426\u4e3a null"},{"location":"base/map/#3-17","text":"//\u6dfb\u52a0\u5bf9\u8c61\u65b9\u6cd5 void createEntry(int hash, K key, V value, int bucketIndex) { //\u9996\u5148\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u7684\u5bf9\u8c61 Entry<K,V> e = table[bucketIndex]; //\u7136\u540e\u6dfb\u52a0\u5bf9\u8c61\uff0c\u6dfb\u52a0\u5bf9\u8c61\u5728\u5934\u90e8 table[bucketIndex] = new Entry<>(hash, key, value, e); size++; }","title":"3. 1.7 \u4e2d\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u62c9\u94fe\u6cd5\u8fdb\u884c\u5b58\u50a8"},{"location":"base/map/#4-17","text":"//resize\u65b9\u6cd5\u30021.\u4ea7\u751f\u65b0\u7684\u6570\u7ec4\uff0c2.\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u5bf9\u8c61\u91cd\u65b0\u8fdb\u884chash\u653e\u7f6e\u4e8e\u82af\u6570\u7ec4\u4e2d void resize(int newCapacity) { Entry[] oldTable = table; int oldCapacity = oldTable.length; if (oldCapacity == MAXIMUM_CAPACITY) { threshold = Integer.MAX_VALUE; return; } Entry[] newTable = new Entry[newCapacity]; //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a7\u5236\u662f\u5426\u9700\u8981rehash transfer(newTable, initHashSeedAsNeeded(newCapacity)); table = newTable; threshold = (int)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + 1); } transfer \u65b9\u6cd5\u5c06\u8001\u6570\u7ec4\u4e2d\u7684\u503c\u91cd\u65b0\u8ba1\u7b97 hash \u8d4b\u503c\u5230\u65b0\u6570\u7ec4\u4e2d void transfer(Entry[] newTable, boolean rehash) { int newCapacity = newTable.length; //\u904d\u5386\u8001\u6570\u7ec4 for (Entry<K,V> e : table) { while(null != e) { Entry<K,V> next = e.next; if (rehash) { e.hash = null == e.key ? 0 : hash(e.key); } int i = indexFor(e.hash, newCapacity); e.next = newTable[i]; newTable[i] = e; e = next; } } }","title":"4. 1.7 \u6269\u5bb9\u65b9\u6cd5"},{"location":"base/map/#5-17-get","text":"public V get(Object key) { if (key == null) return getForNullKey(); Entry<K,V> entry = getEntry(key); return null == entry ? null : entry.getValue(); } final Entry<K,V> getEntry(Object key) { if (size == 0) { return null; } int hash = (key == null) ? 0 : hash(key); for (Entry<K,V> e = table[indexFor(hash, table.length)]; e != null; e = e.next) { Object k; if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) return e; } return null; }","title":"5. 1.7 \u4e2d\u7684 get \u65b9\u6cd5"},{"location":"base/map/#18","text":"","title":"1.8 \u6e90\u7801\u5206\u6790"},{"location":"base/map/#1-18-put","text":"public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) { Node<K,V>[] tab; Node<K,V> p; int n, i; //\u5224\u65ad\u6709\u65e0\u521d\u59cb\u5316\uff0c\u7136\u540e\u521d\u59cb\u5316 if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; //\u8ba1\u7b97index\uff0c\u5982\u679c\u83b7\u5f97index\u7684\u6570\u7ec4\u4e3anull\u90a3\u4e48\u76f4\u63a5\u5c06node\u5bf9\u8c61\u653e\u5728\u6570\u7ec4\u4e0a if ((p = tab[i = (n - 1) & hash]) == null) tab[i] = newNode(hash, key, value, null); else { Node<K,V> e; K k; //\u5982\u679c\u4e0d\u4e3anull,\u5224\u65adhash\u662f\u5426\u76f8\u540c\uff0c\u5224\u65adkey\u5982\u679c\u76f8\u540c\u7136\u540e\u5c06\u65b0\u503c\u66ff\u6362\u65e7\u503c if (p.hash == hash && ((k = p.key) == key || (key != null && key.equals(k)))) e = p; //\u5982\u679c\u662f\u6811\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u6811\u6dfb\u52a0\u65b9\u6cd5 else if (p instanceof TreeNode) e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value); //\u904d\u5386\u94fe\u8868\uff0c\u5c06\u65b0node\u5bf9\u8c61\u653e\u7f6e\u5728\u672b\u5c3e else { for (int binCount = 0; ; ++binCount) { if ((e = p.next) == null) { p.next = newNode(hash, key, value, null); //\u5982\u679c\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e8\u90a3\u4e48\u5c31\u8fdb\u884c\u6811\u8f6c\u6362 if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; } if (e.hash == hash && ((k = e.key) == key || (key != null && key.equals(k)))) break; p = e; } } if (e != null) { // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); return oldValue; } } ++modCount; if (++size > threshold) resize(); afterNodeInsertion(evict); return null; }","title":"1. 1.8 \u4e2d\u7684 put \u65b9\u6cd5"},{"location":"base/map/#concurrenthashmap","text":"","title":"ConcurrentHashMap"},{"location":"base/map/#17-concurrenthashmap","text":"\u5206\u6bb5\u9501\u52a0 cas \u5f53\u6211\u4eec put \u7684\u65f6\u5019\uff0c\u6839\u636e key \u7684 hash \u503c\uff0c\u5148\u53bb\u83b7\u53d6 segment \u6570\u7ec4\u4e0b\u6807\uff0c\u83b7\u53d6\u5230 segment \u5bf9\u8c61,\u5982\u679csegment\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31new\u4e00\u4e2asegement\u5bf9\u8c61\uff0c\u76f8\u5173\u7684\u6570\u636e\u4ece0\u76f8\u5173\u7684\u5c5e\u6027\uff0csegment \u5bf9\u8c61\u5185\u90e8\u6709\u4e00\u4e2a\u5c0f\u7684 hashentry \u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5c0f\u7684 hahsmap.\u7136\u540e\u6839\u636e hash \u8ba1\u7b97\u51fa\u54c8\u5e0c\u6876\u7684\u4f4d\u7f6e\uff0c\u53bb put \u6570\u636e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5462\u4f1a\u4f7f\u7528\u975e\u516c\u5e73\u9501 unfairLock.","title":"1.7 \u4e2d\u7684 ConcurrentHashMap"},{"location":"base/map/#18-concurrenthashmap","text":"\u5e95\u5c42\u4f7f\u7528 synchronized \u548c cas \u548chashmap\u5f88\u50cf\uff0c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u4e86cas,\u5728\u6dfb\u52a0\u65f6\u4f7f\u7528\u4e86sync","title":"1.8 \u4e2d\u7684 ConcurrentHashMap"},{"location":"base/string/","text":"String \u00b6 String \u662f final \u4fee\u9970\u7684\uff0c\u6240\u4ee5\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002string \u662f\u5e38\u91cf\uff0c\u5f53\u521b\u5efa\u4ee5\u540e\u5c31\u4e0d\u80fd\u4fee\u6539 StringBuilder \u548c StringBuffer \u00b6 StringBuffer \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6548\u7387\u4f4e\u3002StringBuilder \u662f\u7ebf\u7a0b\u975e\u5b89\u5168\u7684\u3002 \u6e90\u7801\u5206\u6790\uff1a //1. StringBuffer append\u65b9\u6cd5 @Override public synchronized StringBuffer append(Object obj) { toStringCache = null; super.append(String.valueOf(obj)); return this; } //2. StrngBuilder \u7684append\u65b9\u6cd5 @Override public StringBuilder append(Object obj) { return append(String.valueOf(obj)); }","title":"String\u5b57\u7b26\u4e32"},{"location":"base/string/#string","text":"String \u662f final \u4fee\u9970\u7684\uff0c\u6240\u4ee5\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002string \u662f\u5e38\u91cf\uff0c\u5f53\u521b\u5efa\u4ee5\u540e\u5c31\u4e0d\u80fd\u4fee\u6539","title":"String"},{"location":"base/string/#stringbuilder-stringbuffer","text":"StringBuffer \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6548\u7387\u4f4e\u3002StringBuilder \u662f\u7ebf\u7a0b\u975e\u5b89\u5168\u7684\u3002 \u6e90\u7801\u5206\u6790\uff1a //1. StringBuffer append\u65b9\u6cd5 @Override public synchronized StringBuffer append(Object obj) { toStringCache = null; super.append(String.valueOf(obj)); return this; } //2. StrngBuilder \u7684append\u65b9\u6cd5 @Override public StringBuilder append(Object obj) { return append(String.valueOf(obj)); }","title":"StringBuilder \u548c StringBuffer"},{"location":"base/valuetransfer/","text":"Java\u4e2d\u7684\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012 \u00b6 \u5bf9\u8c61\u5f15\u7528\u4f20\u9012 \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u503c\u4f20\u9012 \u00b6 String\u7684\u7279\u6b8a\u6027 \u00b6","title":"\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012"},{"location":"base/valuetransfer/#java","text":"","title":"Java\u4e2d\u7684\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012"},{"location":"base/valuetransfer/#_1","text":"","title":"\u5bf9\u8c61\u5f15\u7528\u4f20\u9012"},{"location":"base/valuetransfer/#_2","text":"","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u503c\u4f20\u9012"},{"location":"base/valuetransfer/#string","text":"","title":"String\u7684\u7279\u6b8a\u6027"},{"location":"concurrent/","text":"\u5e76\u53d1 \u00b6","title":"\u5e76\u53d1\u7684\u5b9a\u4e49"},{"location":"concurrent/#_1","text":"","title":"\u5e76\u53d1"},{"location":"concurrent/cas/","text":"CAS \u00b6 \u4ec0\u4e48\u662fCAS \u00b6 cas\u662f\u6bd4\u8f83\u5e76\u4ea4\u6362 compare and swap\u7684\u610f\u601d \u901a\u8fc7\u6bd4\u8f83 \u4e3b\u7269\u7406\u5185\u5b58 \u503c\u662f\u5426\u662f\u671f\u671b\u503c\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u4ea4\u6362 unsafe\u7684\u64cd\u4f5c\uff0c\u5728\u7cfb\u7edf\u5e95\u5c42\uff0c\u662fcpu\u6307\u4ee4\uff0c\u662f\u7edd\u5bf9\u539f\u5b50\u6027\u7684\u3002\u4e5f\u5c31\u662f\u7edd\u5bf9\u7ebf\u7a0b\u5b89\u5168\u7684 /** * Atomically sets the value to the given updated value * if the current value {@code ==} the expected value. * * @param expect the expected value * @param update the new value * @return {@code true} if successful. False return indicates that * the actual value was not equal to the expected value. */ public final boolean compareAndSet(int expect, int update) { return unsafe.compareAndSwapInt(this, valueOffset, expect, update); } \u5f88\u663e\u7136\u5e95\u5c42\u662f\u4f7f\u7528\u4e86unsafe\u7c7b \u4e3a\u4ec0\u4e48\u4f7f\u7528CAS\u4e0d\u9002\u7528synchronized \u00b6 cas\u5e95\u5c42\u81ea\u65cb\u9501\uff0c\u4e0d\u4e0a\u9501\uff0c\u6548\u7387\u80af\u5b9a\u9ad8 \u4ec0\u4e48\u662funsafe\u7c7b\uff1f \u00b6 unsafe\u7c7b\u4f7fJava\u80fd\u591f\u53bb\u64cd\u4f5c\u5b9e\u9645\u7684\u5185\u5b58\uff0c\u901a\u5e38\u8ba4\u4e3aJava\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u5b9e\u9645\u7684\u5185\u5b58\uff0c\u4f46\u662funsafe\u5176\u5b9e\u4e00\u76f4\u90fd\u53ef\u4ee5\u64cd\u4f5c \u5728\u4f7f\u7528unsafe\u4fdd\u8bc1\u539f\u5b50\u6027\u7684\u65f6\u5019\uff0c\u90fd\u662f\u8981\u914d\u5408volatile\u7684 \u6e90\u7801\uff1a private volatile int value; \u539f\u7406 \u00b6 unsafe\u7c7b\uff0c\u81ea\u65cb\u9501 valueOffset\uff1a\u5185\u5b58\u504f\u79fb\u91cf\u5c31\u662f\u5185\u5b58\u5730\u5740 unsafe\u7c7b\u5927\u90e8\u5206\u90fd\u662fnative\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u76f4\u63a5\u53bb\u64cd\u4f5c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58 \u5728unsafe\u5b9e\u73b0\u4e2d\uff0c\u662f\u4f7f\u7528\u4e86\u81ea\u65cb\u9501 \u81ea\u65cb\u9501\u5176\u5b9e\u5c31\u662fdo-while do{ //\u83b7\u53d6 this.getIntVolatile(xxx); //\u7136\u540e\u8bbe\u7f6e }while(compareAndSet()) \u7f3a\u70b9 \u00b6 \u6b63\u56e0\u4e3aunsafe\u7c7b\uff0c\u4f7f\u7528\u4e86\u81ea\u65cb\u9501\uff0c\u6709\u53ef\u80fd\u591a\u6b21\u83b7\u53d6\u4e0d\u5230\u671f\u671b\u503c\uff0c\u56e0\u6b64\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfcpu\u5360\u7528\u7387\u7a81\u7136\u5347\u9ad8 \u4e0d\u52a0\u9501\uff0c\u5faa\u73af\u6bd4\u8f83\u65f6\u95f4\u53ef\u80fd\u957f\uff0c\u5f00\u9500\u5927 \u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u5982\u679c\u662f\u591a\u4e2a\u53d8\u91cf\u9700\u8981\u4fdd\u8bc1\u539f\u5b50\u6027\u90a3\u5c31\u53ea\u80fd\u4e0a\u9501 \u5f15\u5165aba\u95ee\u9898 \u4ec0\u4e48\u662fABA\u95ee\u9898 \u00b6 \u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e3aA \u7a81\u7136\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e3aB,\u53c8\u6539\u4e3aA ABA\u95ee\u9898\u662fCAS\u5f15\u5165\u7684\u6700\u5927\u95ee\u9898 \u5982\u679c\u8981\u6c42\u4e25\u683c\uff0c\u90a3\u4e48\u53ef\u4ee5\u539f\u5b50\u5f15\u7528\u52a0\u7248\u672c\u53f7 \u4f7f\u7528\u7c7b AtomicStampedReference<T>","title":"CAS"},{"location":"concurrent/cas/#cas","text":"","title":"CAS"},{"location":"concurrent/cas/#cas_1","text":"cas\u662f\u6bd4\u8f83\u5e76\u4ea4\u6362 compare and swap\u7684\u610f\u601d \u901a\u8fc7\u6bd4\u8f83 \u4e3b\u7269\u7406\u5185\u5b58 \u503c\u662f\u5426\u662f\u671f\u671b\u503c\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u4ea4\u6362 unsafe\u7684\u64cd\u4f5c\uff0c\u5728\u7cfb\u7edf\u5e95\u5c42\uff0c\u662fcpu\u6307\u4ee4\uff0c\u662f\u7edd\u5bf9\u539f\u5b50\u6027\u7684\u3002\u4e5f\u5c31\u662f\u7edd\u5bf9\u7ebf\u7a0b\u5b89\u5168\u7684 /** * Atomically sets the value to the given updated value * if the current value {@code ==} the expected value. * * @param expect the expected value * @param update the new value * @return {@code true} if successful. False return indicates that * the actual value was not equal to the expected value. */ public final boolean compareAndSet(int expect, int update) { return unsafe.compareAndSwapInt(this, valueOffset, expect, update); } \u5f88\u663e\u7136\u5e95\u5c42\u662f\u4f7f\u7528\u4e86unsafe\u7c7b","title":"\u4ec0\u4e48\u662fCAS"},{"location":"concurrent/cas/#cassynchronized","text":"cas\u5e95\u5c42\u81ea\u65cb\u9501\uff0c\u4e0d\u4e0a\u9501\uff0c\u6548\u7387\u80af\u5b9a\u9ad8","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528CAS\u4e0d\u9002\u7528synchronized"},{"location":"concurrent/cas/#unsafe","text":"unsafe\u7c7b\u4f7fJava\u80fd\u591f\u53bb\u64cd\u4f5c\u5b9e\u9645\u7684\u5185\u5b58\uff0c\u901a\u5e38\u8ba4\u4e3aJava\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u5b9e\u9645\u7684\u5185\u5b58\uff0c\u4f46\u662funsafe\u5176\u5b9e\u4e00\u76f4\u90fd\u53ef\u4ee5\u64cd\u4f5c \u5728\u4f7f\u7528unsafe\u4fdd\u8bc1\u539f\u5b50\u6027\u7684\u65f6\u5019\uff0c\u90fd\u662f\u8981\u914d\u5408volatile\u7684 \u6e90\u7801\uff1a private volatile int value;","title":"\u4ec0\u4e48\u662funsafe\u7c7b\uff1f"},{"location":"concurrent/cas/#_1","text":"unsafe\u7c7b\uff0c\u81ea\u65cb\u9501 valueOffset\uff1a\u5185\u5b58\u504f\u79fb\u91cf\u5c31\u662f\u5185\u5b58\u5730\u5740 unsafe\u7c7b\u5927\u90e8\u5206\u90fd\u662fnative\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u76f4\u63a5\u53bb\u64cd\u4f5c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58 \u5728unsafe\u5b9e\u73b0\u4e2d\uff0c\u662f\u4f7f\u7528\u4e86\u81ea\u65cb\u9501 \u81ea\u65cb\u9501\u5176\u5b9e\u5c31\u662fdo-while do{ //\u83b7\u53d6 this.getIntVolatile(xxx); //\u7136\u540e\u8bbe\u7f6e }while(compareAndSet())","title":"\u539f\u7406"},{"location":"concurrent/cas/#_2","text":"\u6b63\u56e0\u4e3aunsafe\u7c7b\uff0c\u4f7f\u7528\u4e86\u81ea\u65cb\u9501\uff0c\u6709\u53ef\u80fd\u591a\u6b21\u83b7\u53d6\u4e0d\u5230\u671f\u671b\u503c\uff0c\u56e0\u6b64\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfcpu\u5360\u7528\u7387\u7a81\u7136\u5347\u9ad8 \u4e0d\u52a0\u9501\uff0c\u5faa\u73af\u6bd4\u8f83\u65f6\u95f4\u53ef\u80fd\u957f\uff0c\u5f00\u9500\u5927 \u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u5982\u679c\u662f\u591a\u4e2a\u53d8\u91cf\u9700\u8981\u4fdd\u8bc1\u539f\u5b50\u6027\u90a3\u5c31\u53ea\u80fd\u4e0a\u9501 \u5f15\u5165aba\u95ee\u9898","title":"\u7f3a\u70b9"},{"location":"concurrent/cas/#aba","text":"\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e3aA \u7a81\u7136\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e3aB,\u53c8\u6539\u4e3aA ABA\u95ee\u9898\u662fCAS\u5f15\u5165\u7684\u6700\u5927\u95ee\u9898 \u5982\u679c\u8981\u6c42\u4e25\u683c\uff0c\u90a3\u4e48\u53ef\u4ee5\u539f\u5b50\u5f15\u7528\u52a0\u7248\u672c\u53f7 \u4f7f\u7528\u7c7b AtomicStampedReference<T>","title":"\u4ec0\u4e48\u662fABA\u95ee\u9898"},{"location":"concurrent/lock/","text":"\u5206\u5e03\u5f0f\u9501 \u00b6 \u5f53\u670d\u52a1\u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\u65f6\uff0c\u56e0\u4e3a\u670d\u52a1\u4e0d\u5728\u540c\u4e00\u4e2ajvm\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528jvm\u4e2d\u7684\u9501\uff0c\u56e0\u6b64\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\u3002 \u5206\u5e03\u5f0f\u9501\u65b9\u6848 \u00b6 \u4f7f\u7528MySQL\u6570\u636e\u5e93\u7684\u4e50\u89c2\u9501 \u4f46\u662f\u7edd\u5bf9\u4e0d\u4f1a\u4f7f\u7528 \u4f7f\u7528redis \u4f7f\u7528\u539f\u751f\u4ee3\u7801\u5b9e\u73b0\uff0c\u6216\u8005\u4f7f\u7528redison\u5b9e\u73b0 \u4f7f\u7528zookeeper\u5b9e\u73b0 zookeeper\u7684znode\u8282\u70b9\uff0czookeeper create\u547d\u4ee4\u76f4\u63a5\u521b\u5efa\u7684\u65f6\u6301\u4e45\u8282\u70b9\uff0c\u7c97\u5206\u6301\u4e45\u96f6\u65f6\u4e24\u79cd\u3002 \u4f7f\u7528zookeeper\u6784\u5efa\u5206\u5e03\u5f0f\u9501 \u00b6 \u601d\u60f3\uff1a\u4f7f\u7528zookeeper\u521b\u5efa\u96f6\u65f6\u8282\u70b9\uff0c\u8fde\u63a5\u65ad\u5f00\u65f6\uff0c\u96f6\u65f6\u8282\u70b9\u81ea\u52a8\u5220\u9664\uff0c\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u62a2\u5360\u3002\u5982\u679c\u521b\u5efa\u6210\u529f\u8bf4\u660e\u83b7\u5f97\u9501\uff0c\u5982\u679c\u521b\u5efa\u5931\u8d25\uff0c\u8bf4\u660e\u672a\u83b7\u5f97\u9501\uff0czookeeper\u4e2d\u53ea\u80fd\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u540d\u8282\u70b9\u521b\u5efa\u4f1a\u5931\u8d25\u3002 \u65b9\u6848\u5b9e\u73b0\u6b65\u9aa4 \u00b6 \u4ec0\u4e48\u662f\u9501\uff1f \u00b6 \u516c\u5e73\u9501\u4e0e\u975e\u516c\u5e73\u9501 \u00b6 \u516c\u5e73\u4f53\u73b0\u5728\u83b7\u53d6\u9501\u7684\u6982\u7387\u662f\u5426\u76f8\u540c\uff0c\u975e\u516c\u5e73\u9501\u53ef\u4ee5\u4e89\u62a2\uff0c\u516c\u5e73\u9501\u6309\u7167\u987a\u5e8f \u975e\u516c\u5e73\u9501\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u4f18\u5148\u7ea7\u53cd\u8f6c\u6216\u9965\u997f \u975e\u516c\u5e73\u9501\u541e\u5410\u91cf\u5927\uff0c\u9ed8\u8ba4\u60c5\u51b5ReentrantLock\u65f6\u975e\u516c\u5e73\u9501\uff0csynchronized\u4e5f\u662f\u975e\u516c\u5e73\u9501 \u53ef\u91cd\u5165\u9501\u548c\u9012\u5f52\u9501 \u00b6 \u53ef\u91cd\u5165\u9501\u5c31\u662f\u9012\u5f52\u9501 \u540c\u4e00\u7ebf\u7a0b\u5185\uff0c\u5916\u5c42\u51fd\u6570\u6216\u4ee3\u7801\u5757\u83b7\u5f97\u9501\u4ee5\u540e\uff0c\u5185\u5c42\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4f1a\u81ea\u52a8\u83b7\u5f97\u9501 ReentrantLock/synchronized\u53ef\u91cd\u5165\u9501 \u4f5c\u7528\u53ef\u4ee5\u9632\u6b62\u6b7b\u9501 \u5bf9\u4e8elock.lock(); \u53ea\u8981\u6210\u5bf9\u51fa\u73b0\uff0c\u5d4c\u5957\u591a\u5c11\u4e2a\u90fd\u884c\u3002\u52a0\u9501\u51e0\u6b21\u5c31\u8981\u89e3\u9501\u51e0\u6b21 \u81ea\u65cb\u9501 \u00b6 \u83b7\u53d6\u9501\u8fc7\u7a0b\u4e0d\u963b\u585e\uff0c\u5229\u7528do...while\u5faa\u73af\u83b7\u53d6\u3002\u4e0d\u4f1a\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f46\u662f\u5faa\u73af\u4f1a\u6d88\u8017cpu \u72ec\u5360\u9501\uff08\u5199\u9501\uff09\u3001\u5171\u4eab\u9501\uff08\u8bfb\u9501\uff09/\u4e5f\u53eb\u4e92\u65a5\u9501 \u00b6 \u72ec\u5360\u9501\u53ea\u80fd\u88ab\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u4f7f\u7528 \u5171\u4eab\u9501\u80fd\u88ab\u6240\u6709\u7ebf\u7a0b\u4f7f\u7528 ReentrantLock/synchronized\u662f\u72ec\u5360\u9501 \u624b\u5199\u81ea\u65cb\u9501 \u00b6 countdownlatch/cyclicbarrier/semaphore \u00b6","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"concurrent/lock/#_1","text":"\u5f53\u670d\u52a1\u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\u65f6\uff0c\u56e0\u4e3a\u670d\u52a1\u4e0d\u5728\u540c\u4e00\u4e2ajvm\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528jvm\u4e2d\u7684\u9501\uff0c\u56e0\u6b64\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\u3002","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"concurrent/lock/#_2","text":"\u4f7f\u7528MySQL\u6570\u636e\u5e93\u7684\u4e50\u89c2\u9501 \u4f46\u662f\u7edd\u5bf9\u4e0d\u4f1a\u4f7f\u7528 \u4f7f\u7528redis \u4f7f\u7528\u539f\u751f\u4ee3\u7801\u5b9e\u73b0\uff0c\u6216\u8005\u4f7f\u7528redison\u5b9e\u73b0 \u4f7f\u7528zookeeper\u5b9e\u73b0 zookeeper\u7684znode\u8282\u70b9\uff0czookeeper create\u547d\u4ee4\u76f4\u63a5\u521b\u5efa\u7684\u65f6\u6301\u4e45\u8282\u70b9\uff0c\u7c97\u5206\u6301\u4e45\u96f6\u65f6\u4e24\u79cd\u3002","title":"\u5206\u5e03\u5f0f\u9501\u65b9\u6848"},{"location":"concurrent/lock/#zookeeper","text":"\u601d\u60f3\uff1a\u4f7f\u7528zookeeper\u521b\u5efa\u96f6\u65f6\u8282\u70b9\uff0c\u8fde\u63a5\u65ad\u5f00\u65f6\uff0c\u96f6\u65f6\u8282\u70b9\u81ea\u52a8\u5220\u9664\uff0c\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u62a2\u5360\u3002\u5982\u679c\u521b\u5efa\u6210\u529f\u8bf4\u660e\u83b7\u5f97\u9501\uff0c\u5982\u679c\u521b\u5efa\u5931\u8d25\uff0c\u8bf4\u660e\u672a\u83b7\u5f97\u9501\uff0czookeeper\u4e2d\u53ea\u80fd\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u540d\u8282\u70b9\u521b\u5efa\u4f1a\u5931\u8d25\u3002","title":"\u4f7f\u7528zookeeper\u6784\u5efa\u5206\u5e03\u5f0f\u9501"},{"location":"concurrent/lock/#_3","text":"","title":"\u65b9\u6848\u5b9e\u73b0\u6b65\u9aa4"},{"location":"concurrent/lock/#_4","text":"","title":"\u4ec0\u4e48\u662f\u9501\uff1f"},{"location":"concurrent/lock/#_5","text":"\u516c\u5e73\u4f53\u73b0\u5728\u83b7\u53d6\u9501\u7684\u6982\u7387\u662f\u5426\u76f8\u540c\uff0c\u975e\u516c\u5e73\u9501\u53ef\u4ee5\u4e89\u62a2\uff0c\u516c\u5e73\u9501\u6309\u7167\u987a\u5e8f \u975e\u516c\u5e73\u9501\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u4f18\u5148\u7ea7\u53cd\u8f6c\u6216\u9965\u997f \u975e\u516c\u5e73\u9501\u541e\u5410\u91cf\u5927\uff0c\u9ed8\u8ba4\u60c5\u51b5ReentrantLock\u65f6\u975e\u516c\u5e73\u9501\uff0csynchronized\u4e5f\u662f\u975e\u516c\u5e73\u9501","title":"\u516c\u5e73\u9501\u4e0e\u975e\u516c\u5e73\u9501"},{"location":"concurrent/lock/#_6","text":"\u53ef\u91cd\u5165\u9501\u5c31\u662f\u9012\u5f52\u9501 \u540c\u4e00\u7ebf\u7a0b\u5185\uff0c\u5916\u5c42\u51fd\u6570\u6216\u4ee3\u7801\u5757\u83b7\u5f97\u9501\u4ee5\u540e\uff0c\u5185\u5c42\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4f1a\u81ea\u52a8\u83b7\u5f97\u9501 ReentrantLock/synchronized\u53ef\u91cd\u5165\u9501 \u4f5c\u7528\u53ef\u4ee5\u9632\u6b62\u6b7b\u9501 \u5bf9\u4e8elock.lock(); \u53ea\u8981\u6210\u5bf9\u51fa\u73b0\uff0c\u5d4c\u5957\u591a\u5c11\u4e2a\u90fd\u884c\u3002\u52a0\u9501\u51e0\u6b21\u5c31\u8981\u89e3\u9501\u51e0\u6b21","title":"\u53ef\u91cd\u5165\u9501\u548c\u9012\u5f52\u9501"},{"location":"concurrent/lock/#_7","text":"\u83b7\u53d6\u9501\u8fc7\u7a0b\u4e0d\u963b\u585e\uff0c\u5229\u7528do...while\u5faa\u73af\u83b7\u53d6\u3002\u4e0d\u4f1a\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f46\u662f\u5faa\u73af\u4f1a\u6d88\u8017cpu","title":"\u81ea\u65cb\u9501"},{"location":"concurrent/lock/#_8","text":"\u72ec\u5360\u9501\u53ea\u80fd\u88ab\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u4f7f\u7528 \u5171\u4eab\u9501\u80fd\u88ab\u6240\u6709\u7ebf\u7a0b\u4f7f\u7528 ReentrantLock/synchronized\u662f\u72ec\u5360\u9501","title":"\u72ec\u5360\u9501\uff08\u5199\u9501\uff09\u3001\u5171\u4eab\u9501\uff08\u8bfb\u9501\uff09/\u4e5f\u53eb\u4e92\u65a5\u9501"},{"location":"concurrent/lock/#_9","text":"","title":"\u624b\u5199\u81ea\u65cb\u9501"},{"location":"concurrent/lock/#countdownlatchcyclicbarriersemaphore","text":"","title":"countdownlatch/cyclicbarrier/semaphore"},{"location":"concurrent/queue/","text":"\u963b\u585e\u961f\u5217 \u00b6","title":"\u963b\u585e\u961f\u5217"},{"location":"concurrent/queue/#_1","text":"","title":"\u963b\u585e\u961f\u5217"},{"location":"concurrent/singleton/","text":"\u5355\u4f8b\u6a21\u5f0f \u00b6 dcl\u6a21\u5f0f\u5b58\u5728\u7684\u9690\u60a3\uff0c\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0bcpu\u53ef\u80fd\u5b58\u5728\u6307\u4ee4\u91cd\u6392","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"concurrent/singleton/#_1","text":"dcl\u6a21\u5f0f\u5b58\u5728\u7684\u9690\u60a3\uff0c\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0bcpu\u53ef\u80fd\u5b58\u5728\u6307\u4ee4\u91cd\u6392","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"jvm/","text":"jvm Java \u865a\u62df\u673a \u00b6 \u6808\u7ba1\u8fd0\u884c\uff0c\u5806\u7ba1\u5b58\u50a8\u3002 \u7c7b\u52a0\u8f7d\u5668 \u00b6 \u5b57\u8282\u7801\u52a0\u8f7d\u4ee5\u540e\u653e\u5728\u65b9\u6cd5\u533a\u3002\u7c7b\u52a0\u8f7d\u5668\u53ea\u8d1f\u8d23 class \u6587\u4ef6\u7684\u52a0\u8f7d\uff0c\u662f\u5426\u53ef\u8fd0\u884c\u7531\u6267\u884c\u5f15\u64ce\u51b3\u5b9a\u3002 \u542f\u52a8\u7c7b\u52a0\u8f7d\u5668 Bootstrap \u4f7f\u7528 c++\u8bed\u8a00\u5199\u7684\u3002\u5176\u4ed6\u90fd\u662f Java \u5199\u7684\uff0cbootstrap \u8d1f\u8d23\u52a0\u8f7d jre/lib/rt.jar,\u6253\u5370\u7684\u8bdd\u4e3a null. \u6269\u5c55\u7c7b\u52a0\u8f7d\u5668 ExtClassLoader,\u8d1f\u8d23\u52a0\u8f7d jre/lib/ext/.jar.\u5176\u7236\u7c7b\u52a0\u8f7d\u5668\u4e5f\u662f null \u5e94\u7528\u52a0\u8f7d\u5668 AppClassLoader ClassLoaderDemo object = new ClassLoaderDemo(); System.out.println(object.getClass().getClassLoader()); System.out.println(object.getClass().getClassLoader().getParent()); System.out.println(object.getClass().getClassLoader().getParent().getParent()); //\u8f93\u51fa\u4e3a sun.misc.Launcher$AppClassLoader@18b4aac2 sun.misc.Launcher$ExtClassLoader@7c53a9eb null \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u548c\u6c99\u7bb1\u5b89\u5168 \u00b6 \u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u59d4\u6258\u7236\u7c7b\u52a0\u8f7d,\u5982\u679c\u7236\u7c7b\u5df2\u7ecf\u52a0\u8f7d\u90a3\u4e48\u5c31\u4e0d\u5728\u52a0\u8f7d\uff0c\u4fdd\u8bc1\u4e0d\u6c61\u67d3\u81ea\u5e26\u7c7b\u7684\u4e5f\u53eb\u6c99\u7bb1\u673a\u5236\u3002 \u5982\u679c\u81ea\u5b9a\u4e49\u4e00\u4e2a java.lang.String \u7c7b\u7684\u8bdd\u8fd0\u884c\u4f1a\u62a5\u5b89\u5168\u6027\u5f02\u5e38 package java.lang; public class String { public static void main(String[] args) { System.out.println(\"hello\"); } } //\u7ed3\u679c \u9519\u8bef: \u5728\u7c7b java.lang.String \u4e2d\u627e\u4e0d\u5230 main \u65b9\u6cd5, \u8bf7\u5c06 main \u65b9\u6cd5\u5b9a\u4e49\u4e3a: public static void main(String[] args) \u5426\u5219 JavaFX \u5e94\u7528\u7a0b\u5e8f\u7c7b\u5fc5\u987b\u6269\u5c55javafx.application.Application Disconnected from the target VM, address: '127.0.0.1:8616', transport: 'socket' [ERROR] Command execution failed. org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) //\u5982\u679c\u4e0d\u5728\u81ea\u5b9a\u4e49\u7684\u7c7b\u4e2d\u8c03\u7528\uff0c\u81ea\u5df1\u5199\u7684string\u7c7b\u6839\u672c\u5c31\u4e0d\u4f1a\u52a0\u8f7d \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668 \u00b6 \u7ee7\u627f ClassLoader \u91cd\u5199 findClass \u65b9\u6cd5\u3002findClass \u65b9\u6cd5\u548c loadClass \u65b9\u6cd5\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\u7684\uff1f\u5982\u679c\u4e0d\u60f3\u6253\u7834\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\uff0c\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528\u91cd\u5199 findClass \u65b9\u6cd5\uff0cloadClass \u65b9\u6cd5\u53ef\u4ee5\u4e0d\u53cc\u4eb2\u59d4\u6d3e\u76f4\u63a5\u52a0\u8f7d\u7c7b\uff0c\u4f7f\u7528 loadClass \u65b9\u6cd5\u7684\u8bdd\u53ef\u4ee5\u5b9e\u73b0\u70ed\u90e8\u7f72 \u6267\u884c\u5f15\u64ce Execution Engine \u00b6 native \u65b9\u6cd5 \u00b6 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u662f native\uff0c\u6ca1\u6709\u5783\u573e\u56de\u6536\uff0c\u5f88\u5c0f\u53ea\u6709 10 \u6765 KB\uff0c\u6bd4\u5982 thread \u7c7b\u4e2d\u7684 start0()\u65b9\u6cd5 \u7a0b\u5e8f\u8ba1\u6570\u5668 \u00b6 cpu \u4e2d\u7684\u5bc4\u5b58\u5668\uff0c\u662f\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\u5b57\u8282\u7801\u7684\u884c\u53f7\u6307\u793a\u5668\u3002\u5982\u679c native \u65b9\u6cd5\uff0c\u8ba1\u6570\u5668\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a native \u65b9\u6cd5\u4e0d\u662f Java \u7684\u3002\u7528\u6765\u5b8c\u6210\u5206\u652f\u5faa\u73af\u8df3\u8f6c\u5f02\u5e38\u5904\u7406\u7b49\u7b49\u3002 \u65b9\u6cd5\u533a \u00b6 \u5f88\u5c11\u5783\u573e\u56de\u6536\uff0c\u7ebf\u7a0b\u5171\u4eab\u3002\u662f\u5b58\u653e\u7c7b\u7684\u7ed3\u6784\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u6a21\u677f\u3002\u5982\u5e38\u91cf\u6c60\u5b57\u6bb5\u65b9\u6cd5\u6570\u636e\u6784\u9020\u51fd\u6570\u666e\u901a\u65b9\u6cd5\u7b49\u5b57\u8282\u7801\u5185\u5bb9\uff0c \u65b9\u6cd5\u533a\u662f\u89c4\u8303\uff0c\u4e0d\u540c\u865a\u62df\u673a\u5b9e\u73b0\u4e0d\u540c\u3002\u5982\u6c38\u4e45\u4ee3\u548c\u539f\u7a7a\u95f4 \u5b58\u50a8\uff1a\u7c7b\u7ed3\u6784\u4fe1\u606f\u3001\u666e\u901a\u5e38\u91cf\u3001\u9759\u6001\u5e38\u91cf\u3001\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u7b49\u3002\u4e5f\u53eb\u975e\u5806\u5185\u5b58\uff0c1.7 \u4e4b\u524d\u7684\u6c38\u4e45\u4ee3\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u4e2a\u5b9e\u73b0\u800c\u5df2\u3002 \u865a\u62df\u673a\u6808 \u00b6 \u6ca1\u6709 gc\uff0c\u6808\u6ea2\u51fa\u662f\u9519\u8bef\u4e0d\u662f\u5f02\u5e38 \u4fdd\u5b58\u4ec0\u4e48\uff1f \u00b6 8 \u4e2d\u57fa\u672c\u7c7b\u578b\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5b9e\u4f8b\u65b9\u6cd5\u7684\u90fd\u662f\u5728\u6808\u4e2d\u5206\u914d\u3002Java \u4e2d\u65b9\u6cd5\u53eb\u505a\u6808\u5e27 \u5806 \u00b6 \u89c4\u8303\u4e0a\u5206\u4e3a\u4e09\u4ee3\uff0c\u5b9e\u9645\u4e0a\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\u662f\u7269\u7406\u8fde\u7eed\u7684\uff0c\u5143\u7a7a\u95f4\u4e0d\u5728\u5806\u4e0a \u65b0\u751f\u4ee3 1/3 eden \u533a 8 s0(from) 1 s1(to) 1 \u8001\u5e74\u4ee3 2/3 15 \u6b21\u5783\u573e\u56de\u6536\u4ee5\u540e\u8fdb\u5165 \u6c38\u4e45\u4ee3 1.8 \u4e4b\u540e\u6c38\u4e45\u4ee3\u4e0d\u5728 jvm \u5185\u5b58\u4e2d\uff0c\u4e8c\u662f\u76f4\u63a5\u4f7f\u7528\u7269\u7406\u5185\u5b58\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/4 Heap PSYoungGen total 153088K, used 7895K [0x0000000715800000, 0x0000000720280000, 0x00000007c0000000) eden space 131584K, 6% used [0x0000000715800000,0x0000000715fb5dc8,0x000000071d880000) from space 21504K, 0% used [0x000000071ed80000,0x000000071ed80000,0x0000000720280000) to space 21504K, 0% used [0x000000071d880000,0x000000071d880000,0x000000071ed80000) ParOldGen total 349696K, used 0K [0x00000005c0800000, 0x00000005d5d80000, 0x0000000715800000) object space 349696K, 0% used [0x00000005c0800000,0x00000005c0800000,0x00000005d5d80000) Metaspace used 3028K, capacity 4556K, committed 4864K, reserved 1056768K class space used 319K, capacity 392K, committed 512K, reserved 1048576K JVM \u5185\u5b58\u5212\u5206 \u00b6 \u5806\u6808\u65b9\u6cd5\u533a\u7a0b\u5e8f\u8ba1\u6570\u5668 \u6808\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7ebf\u7a0b\u79c1\u6709 \u5806\u3001\u65b9\u6cd5\u533a\u7ebf\u7a0b\u5171\u4eab\uff0c\u5b58\u5728\u5783\u573e\u56de\u6536 \u5806\u5185\u5b58\u5212\u5206 \u00b6 \u65b0\u751f\u4ee3\u3001\u8001\u5e74\u4ee3\u3001\u6301\u4e45\u4ee3\uff081.8 \u6ca1\u6709\u8001\u5e74\u4ee3\uff09 \u65b0\u751f\u4ee3\uff1aEden \u533a\u548c servivor\uff0cservivor \u533a\u4f7f\u7528\u590d\u5236\u7b97\u6cd5\uff0c\u6bcf\u6b21\u53ea\u80fd\u4f7f\u7528\u4e00\u822c\u7684\u5185\u5b58 GC ROOTS \u5bf9\u8c61 \u00b6 \u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u9759\u6001\u7c7b\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 4 \u5927\u5783\u573e\u56de\u6536\u7b97\u6cd5\u4e03\u5927\u5783\u573e\u56de\u6536\u5668 \u00b6 jvm \u91c7\u7528\u5206\u4ee3\u56de\u6536\u7b97\u6cd5\u30021. \u5728\u6b21\u6570\u4e0a young \u533a\u6536\u96c6\u6bd4\u8f83\u9891\u7e41\uff0c2.old \u533a\u6536\u96c6\u6bd4\u8f83\u5c11\uff0c3.\u57fa\u672c\u4e0a\u4e0d\u52a8\u5143\u7a7a\u95f4 \u9ed8\u8ba4 15 \u6b21 GC \u5b58\u5728\u8001\u5e74\u4ee3\uff0cjdk8 \u5b9a\u6b7b\u4e86 15\u3002gc \u4e0d\u662f\u4e09\u5757\u533a\u57df\u4e00\u8d77\u56de\u6536\uff0c\u4e3b\u8981\u53d1\u751f\u5728 young \u533a \u5783\u573e\u56de\u6536\u7b97\u6cd5 \u00b6 \u5f15\u7528\u8ba1\u6570\u7b97\u6cd5 \u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\uff1a\u8001\u5e74\u4ee3\u4f7f\u7528\uff0c\u6700\u5927\u7684\u95ee\u9898\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c\u4e24\u6b21\u626b\u63cf\u8017\u65f6\uff0c\u6709 stw \uff0c\u6807\u8bb0\u8981\u6e05\u9664\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u7edf\u4e00\u8fdb\u884c\u56de\u6536 \u6807\u8bb0\u6574\u7406\u7b97\u6cd5\uff1a\u8001\u5e74\u4ee3\u4f7f\u7528\uff0c\u548c\u6807\u8bb0\u6e05\u9664\u6df7\u5408\u4f7f\u7528\u3002\u4e24\u6b21\u626b\u63cf\uff0c\u79fb\u52a8\u5bf9\u8c61\u9700\u8981\u8017\u65f6\uff0c\u6548\u7387\u4f4e\u4e8e\u590d\u5236\u7b97\u6cd5\u3002\u5de5\u7a0b\u4e0a\u662f\u4f7f\u7528\u6807\u8bb0\u6e05\u9664\uff0c\u5230\u8fbe\u4e00\u5b9a\u6761\u4ef6\u540e\u8fdb\u884c\u6574\u7406\u4e5f\u53eb\u6807\u8bb0\u6e05\u9664\u6574\u7406\u7b97\u6cd5 \u590d\u5236\u7b97\u6cd5\uff1ayoung \u533a\u4f7f\u7528\u590d\u5236\u7b97\u6cd5\uff0cminorgc \u4f1a\u628a eden \u533a\u4e2d\u5bf9\u8c61\u79fb\u5230 survivor \u533a\u4e2d\uff0c\u5982\u679c survivor \u533a\u653e\u4e0d\u4e0b\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u6d3b\u7684\u5bf9\u8c61\u5c31\u4f1a\u88ab\u5f02\u52a8\u5230 old \u533a\uff0c\u4e00\u65e6\u6536\u96c6\u5b8c\u6210 eden \u533a\u5c31\u4f1a\u53d8\u6210\u7a7a\u3002\u4f18\u70b9\u4e0d\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c \u7f3a\u70b9\u8017\u7a7a\u95f4 \u5783\u573e\u6536\u96c6\u5668 \u00b6 jvm \u8c03\u4f18 \u00b6 \u524d\u63d0\u77e5\u8bc6 \u00b6 Java \u5c06\u5185\u5b58\u62bd\u8c61\u4e3a Runtime \u5bf9\u8c61,\u901a\u8fc7 Runtime.getRuntime()\u83b7\u53d6 java \u865a\u62df\u673a\u53c2\u6570\u5206\u4e3a \u6807\u51c6\u53c2\u6570\u5982(-) -version \u975e\u6807\u51c6\u53c2\u6570(-XX) \u5e03\u5c14\u578b\uff0c\u7528\u52a0\u53f7\u6807\u8bc6\u5f00\u542f\u51cf\u53f7\u6807\u8bc6\u5173\u95ed\uff1a -XX:+PrintGCDetails \u5f00\u542f\u6253\u5370 gc \u65e5\u5fd7 -XX:+PrintCommandLineFlags \u6253\u5370\u542f\u52a8\u914d\u7f6e\u4fe1\u606f -XX:NewRatio=2 \u8bbe\u7f6e\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\u7684\u6bd4\u4f8b\uff0c\u503c\u76f4\u63a5\u4ee3\u8868\u8001\u5e74\u4ee3\u5360\u6bd4\uff0c\u5269\u4e0b\u7684 1 \u5c31\u662f\u65b0\u751f\u4ee3\u7684\u3002 -XX:ServivorRatio=8 \u8bbe\u7f6e endn \u548c servivor \u7684\u6bd4\u4f8b\uff0c8:1:1 -XX:MaxTenuringThreshold=15 \u8bbe\u7f6e\u5783\u573e\u65b0\u751f\u4ee3\u5230\u8001\u5e74\u4ee3\u8981\u7ecf\u8fc7\u7684 gc \u6b21\u6570\uff0c\u9ed8\u8ba4\u662f 15 \u6b21\u3002\u5982\u679c\u8bbe\u7f6e 0 \u5219\u4e0d\u7ecf\u8fc7 servivor \u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3\u3002\u5fc5\u987b\u8bbe\u7f6e\u5728 0-15 \u4e4b\u95f4 key-vlue \u952e\u503c\u578b-XX:InnitialHeapSize=1m -Xms \u5806\u6700\u5c0f\u503c -Xmx \u5806\u6700\u5927\u503c -Xss \u5355\u4e2a\u7ebf\u7a0b\u6808\u5927\u5c0f\uff0c\u4e00\u822c 512k-1024k\u3002\u521d\u59cb\u503c\u67e5\u8be2\u51fa\u6765\u7684\u8bdd\u662f 0\uff0c\u6240\u4ee5\u5982\u679c\u67e5\u8be2\u51fa\u6765 0 \u5c31\u4ee3\u8868\u662f\u521d\u59cb\u503c\u3002linux \u9ed8\u8ba4\u662f 1024k -Xmn \u8bbe\u7f6e\u65b0\u751f\u4ee3\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e0d\u7528\u8c03\u8bd5\u7528\u9ed8\u8ba4\u503c -XX:MetaspaceSize=1024m,\u5143\u7a7a\u95f4\u8bd5\u7528\u64cd\u4f5c\u7cfb\u7edf\u7269\u7406\u5185\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5 jdk \u53ea\u5206\u914d\u4e86 21MB public static void main(String[] args) { //\u5269\u4f59\u5806\u5185\u5b58 System.out.println(Runtime.getRuntime().freeMemory()); //\u5904\u7406\u5668\u4e2a\u6570 System.out.println(Runtime.getRuntime().availableProcessors()); //\u6700\u5927\u5185\u5b58\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u76841/4 System.out.println(Runtime.getRuntime().maxMemory()); //\u6700\u5c0f\u5806\u5185\u5b58\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u5185\u5b58\u76841/64 System.out.println(Runtime.getRuntime().totalMemory()); } \u5b9e\u9645\u7ebf\u4e0a\u5fc5\u987b\u5c06\u6700\u5c0f\u5185\u5b58\u548c\u6700\u5927\u5185\u5b58\u8bbe\u7f6e\u4e3a\u4e00\u6837,\u907f\u514d gc \u548c\u5e94\u7528\u4e89\u62a2\u5185\u5b58\u6d6a\u8d39\u6027\u80fd \u5e38\u7528\u53c2\u6570 \u00b6 -XX:+PrintCommandLineFlags \u6253\u5370 jvm \u7684\u542f\u52a8\u53c2\u6570 -Xms \u7b49\u4ef7\u4e8e-XX:InitialHeadSize \u8bbe\u7f6e\u5806\u6700\u5c0f\u5185\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/64 -Xmx \u7b49\u4ef7\u4e8e-XX:MaxHeapSize \u8bbe\u7f6e\u5806\u5185\u5b58\u7684\u6700\u5927\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/4 -XX:+PrintGcDetails \u6253\u5370 gc \u65e5\u5fd7 jinfo \u67e5\u8be2\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u53c2\u6570 \u53ef\u4ee5\u4f7f\u7528 jinfo pid \u4e5f\u53ef\u4ee5\u4f7f\u7528 jinfo flag(s) pid gc \u65e5\u5fd7 \u00b6 eden \u533a minor gc old \u533a\u53d1\u751f major gc \u4e5f\u53eb full gc\uff0cfullgc \u6162 8-10 \u500d\uff0c\u4e3a\u4ec0\u4e48\u6162\uff1f\u56e0\u4e3a full gc \u626b\u63cf\u7a7a\u95f4\u6bd4\u8f83\u5927 [GC (Allocation Failure) [PSYoungGen: 1000K->488K(1024K)] 1016K->576K(1536K), 0.0006887 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [Full GC (Ergonomics) [PSYoungGen: 649K->137K(1024K)] [ParOldGen: 408K->408K(512K)] 1058K->545K(1536K), [Metaspace: 3020K->3020K(1056768K)], 0.0041367 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \u6b7b\u9501\u5b9a\u4f4d \u00b6 java \u6a21\u62df public class DeadLockDemo { public static void main(String[] args) { String lockA = \"lockA\"; String lockB = \"lockB\"; new Thread(new res(lockA, lockB), \"aaaaaaaaaaaa\").start(); new Thread(new res(lockB, lockA), \"bbbbbbbbbbbb\").start(); } } class res extends Thread { private String lockA; private String lockB; public res(String lockA, String lockB) { this.lockA = lockA; this.lockB = lockB; } @Override public void run() { synchronized (lockA) { System.out.println(\"\u83b7\u5f97\u9501\" + lockA + \"\u5c1d\u8bd5\u83b7\u53d6\" + lockB); try { TimeUnit.SECONDS.sleep(3); synchronized (lockB) { System.out.println(\"\u83b7\u5f97\u9501\" + lockB); } } catch (InterruptedException e) { e.printStackTrace(); } } } \u5b9e\u64cd\u8fc7\u7a0b\uff1a \u4f7f\u7528 jps \u67e5\u770b\u8fdb\u7a0b\u7f16\u53f7(linux \u548c windows \u901a\u7528) jps -l //\u6253\u5370\u4fe1\u606f PS C:\\Users\\bear\\IdeaProjects\\jvmdemo> jps -l 11920 org.jetbrains.jps.cmdline.Launcher 12448 org.jetbrains.idea.maven.server.RemoteMavenServer36 9424 11044 15736 org.codehaus.classworlds.Launcher 5788 pro.dengyi.DeadLockDemo 6940 sun.tools.jps.Jps 7548 org/netbeans/Main \u6839\u636e\u81ea\u5df1\u9879\u76ee\u7684\u5305\u540d\u4f7f\u7528 jstack \u547d\u4ee4\u67e5\u770b\u6808\u4fe1\u606f PS C:\\Users\\bear\\IdeaProjects\\jvmdemo> jstack 5788 //\u6253\u5370\u4fe1\u606f 2020-06-25 22:49:12 Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.241-b07 mixed mode): \"DestroyJavaVM\" #17 prio=5 os_prio=0 tid=0x0000000003652800 nid=0x838 waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"bbbbbbbbbbbb\" #16 prio=5 os_prio=0 tid=0x00000000277ae800 nid=0x1de4 waiting for monitor entry [0x000000002866e000] java.lang.Thread.State: BLOCKED (on object monitor) at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a77d0> (a java.lang.String) - locked <0x00000007159a7808> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"aaaaaaaaaaaa\" #14 prio=5 os_prio=0 tid=0x00000000277ab000 nid=0xf60 waiting for monitor entry [0x000000002856e000] java.lang.Thread.State: BLOCKED (on object monitor) at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a7808> (a java.lang.String) - locked <0x00000007159a77d0> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"Service Thread\" #12 daemon prio=9 os_prio=0 tid=0x0000000027779800 nid=0x33cc runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C1 CompilerThread2\" #11 daemon prio=9 os_prio=2 tid=0x00000000276f3000 nid=0xc8c waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C2 CompilerThread1\" #10 daemon prio=9 os_prio=2 tid=0x00000000276ea000 nid=0x2cf8 waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C2 CompilerThread0\" #9 daemon prio=9 os_prio=2 tid=0x00000000276e9000 nid=0x90c waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Command Reader\" #8 daemon prio=10 os_prio=0 tid=0x0000000027690800 nid=0x6ec runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Event Helper Thread\" #7 daemon prio=10 os_prio=0 tid=0x000000002768d000 nid=0x14f4 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Transport Listener: dt_socket\" #6 daemon prio=10 os_prio=0 tid=0x000000002767e800 nid=0x2a60 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Attach Listener\" #5 daemon prio=5 os_prio=2 tid=0x0000000027678800 nid=0x1dac waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Signal Dispatcher\" #4 daemon prio=9 os_prio=2 tid=0x0000000026330000 nid=0x2444 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Finalizer\" #3 daemon prio=8 os_prio=1 tid=0x000000000374c800 nid=0x2920 in Object.wait() [0x000000002766e000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on <0x0000000715808ee0> (a java.lang.ref.ReferenceQueue$Lock) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144) - locked <0x0000000715808ee0> (a java.lang.ref.ReferenceQueue$Lock) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165) at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216) \"Reference Handler\" #2 daemon prio=10 os_prio=2 tid=0x000000002630a800 nid=0x10d8 in Object.wait() [0x000000002756f000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on <0x0000000715806c00> (a java.lang.ref.Reference$Lock) at java.lang.Object.wait(Object.java:502) at java.lang.ref.Reference.tryHandlePending(Reference.java:191) - locked <0x0000000715806c00> (a java.lang.ref.Reference$Lock) at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153) \"VM Thread\" os_prio=2 tid=0x00000000262e8000 nid=0x14e8 runnable \"GC task thread#0 (ParallelGC)\" os_prio=0 tid=0x0000000003668000 nid=0xf30 runnable \"GC task thread#1 (ParallelGC)\" os_prio=0 tid=0x0000000003669800 nid=0x85c runnable \"GC task thread#2 (ParallelGC)\" os_prio=0 tid=0x000000000366b800 nid=0xd84 runnable \"GC task thread#3 (ParallelGC)\" os_prio=0 tid=0x000000000366e000 nid=0x3280 runnable \"VM Periodic Task Thread\" os_prio=2 tid=0x00000000277a5000 nid=0x3734 waiting on condition JNI global references: 1499 Found one Java-level deadlock: ============================= \"bbbbbbbbbbbb\": waiting to lock monitor 0x00000000037494f8 (object 0x00000007159a77d0, a java.lang.String), which is held by \"aaaaaaaaaaaa\" \"aaaaaaaaaaaa\": waiting to lock monitor 0x000000000374bd88 (object 0x00000007159a7808, a java.lang.String), which is held by \"bbbbbbbbbbbb\" Java stack information for the threads listed above: =================================================== \"bbbbbbbbbbbb\": at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a77d0> (a java.lang.String) - locked <0x00000007159a7808> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"aaaaaaaaaaaa\": at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a7808> (a java.lang.String) - locked <0x00000007159a77d0> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) Found 1 deadlock. JMM java \u5185\u5b58\u6a21\u578b \u00b6 Java \u52a0\u8f7d\u6267\u884c\u987a\u5e8f \u00b6 new \u5bf9\u8c61\u65f6\u7684\u52a0\u8f7d\u987a\u5e8f \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u6267\u884c\uff0c\u52a0\u8f7d\u4e00\u6b21 \u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u5176\u4ed6 \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u5b50\u7c7b\u4f1a\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528 \u4ee3\u7801\u7814\u7a76\uff1a public class LoadFatcher { static { System.out.println(\"\u7236\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757\"); } //\u666e\u901a\u4ee3\u7801\u5757\u53c8\u53eb\u505a\u6784\u9020\u5757 { System.out.println(\"\u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c\"); } public LoadFatcher() { System.out.println(\"\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c\"); } } class LoadSon extends LoadFatcher { static { System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757\"); } { System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c\"); } public LoadSon() { System.out.println(\"\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c\"); } public static void main(String[] args) { LoadSon loadSon = new LoadSon(); System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u65b9\u6cd5\u6267\u884c---------------\"); LoadSon loadSon1 = new LoadSon(); } } //\u8f93\u51fa \u7236\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757 \u5b50\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757 \u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u65b9\u6cd5\u6267\u884c--------------- \u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c","title":"jvm\u57fa\u7840\u77e5\u8bc6"},{"location":"jvm/#jvm-java","text":"\u6808\u7ba1\u8fd0\u884c\uff0c\u5806\u7ba1\u5b58\u50a8\u3002","title":"jvm Java \u865a\u62df\u673a"},{"location":"jvm/#_1","text":"\u5b57\u8282\u7801\u52a0\u8f7d\u4ee5\u540e\u653e\u5728\u65b9\u6cd5\u533a\u3002\u7c7b\u52a0\u8f7d\u5668\u53ea\u8d1f\u8d23 class \u6587\u4ef6\u7684\u52a0\u8f7d\uff0c\u662f\u5426\u53ef\u8fd0\u884c\u7531\u6267\u884c\u5f15\u64ce\u51b3\u5b9a\u3002 \u542f\u52a8\u7c7b\u52a0\u8f7d\u5668 Bootstrap \u4f7f\u7528 c++\u8bed\u8a00\u5199\u7684\u3002\u5176\u4ed6\u90fd\u662f Java \u5199\u7684\uff0cbootstrap \u8d1f\u8d23\u52a0\u8f7d jre/lib/rt.jar,\u6253\u5370\u7684\u8bdd\u4e3a null. \u6269\u5c55\u7c7b\u52a0\u8f7d\u5668 ExtClassLoader,\u8d1f\u8d23\u52a0\u8f7d jre/lib/ext/.jar.\u5176\u7236\u7c7b\u52a0\u8f7d\u5668\u4e5f\u662f null \u5e94\u7528\u52a0\u8f7d\u5668 AppClassLoader ClassLoaderDemo object = new ClassLoaderDemo(); System.out.println(object.getClass().getClassLoader()); System.out.println(object.getClass().getClassLoader().getParent()); System.out.println(object.getClass().getClassLoader().getParent().getParent()); //\u8f93\u51fa\u4e3a sun.misc.Launcher$AppClassLoader@18b4aac2 sun.misc.Launcher$ExtClassLoader@7c53a9eb null","title":"\u7c7b\u52a0\u8f7d\u5668"},{"location":"jvm/#_2","text":"\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u59d4\u6258\u7236\u7c7b\u52a0\u8f7d,\u5982\u679c\u7236\u7c7b\u5df2\u7ecf\u52a0\u8f7d\u90a3\u4e48\u5c31\u4e0d\u5728\u52a0\u8f7d\uff0c\u4fdd\u8bc1\u4e0d\u6c61\u67d3\u81ea\u5e26\u7c7b\u7684\u4e5f\u53eb\u6c99\u7bb1\u673a\u5236\u3002 \u5982\u679c\u81ea\u5b9a\u4e49\u4e00\u4e2a java.lang.String \u7c7b\u7684\u8bdd\u8fd0\u884c\u4f1a\u62a5\u5b89\u5168\u6027\u5f02\u5e38 package java.lang; public class String { public static void main(String[] args) { System.out.println(\"hello\"); } } //\u7ed3\u679c \u9519\u8bef: \u5728\u7c7b java.lang.String \u4e2d\u627e\u4e0d\u5230 main \u65b9\u6cd5, \u8bf7\u5c06 main \u65b9\u6cd5\u5b9a\u4e49\u4e3a: public static void main(String[] args) \u5426\u5219 JavaFX \u5e94\u7528\u7a0b\u5e8f\u7c7b\u5fc5\u987b\u6269\u5c55javafx.application.Application Disconnected from the target VM, address: '127.0.0.1:8616', transport: 'socket' [ERROR] Command execution failed. org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) //\u5982\u679c\u4e0d\u5728\u81ea\u5b9a\u4e49\u7684\u7c7b\u4e2d\u8c03\u7528\uff0c\u81ea\u5df1\u5199\u7684string\u7c7b\u6839\u672c\u5c31\u4e0d\u4f1a\u52a0\u8f7d","title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u548c\u6c99\u7bb1\u5b89\u5168"},{"location":"jvm/#_3","text":"\u7ee7\u627f ClassLoader \u91cd\u5199 findClass \u65b9\u6cd5\u3002findClass \u65b9\u6cd5\u548c loadClass \u65b9\u6cd5\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\u7684\uff1f\u5982\u679c\u4e0d\u60f3\u6253\u7834\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\uff0c\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528\u91cd\u5199 findClass \u65b9\u6cd5\uff0cloadClass \u65b9\u6cd5\u53ef\u4ee5\u4e0d\u53cc\u4eb2\u59d4\u6d3e\u76f4\u63a5\u52a0\u8f7d\u7c7b\uff0c\u4f7f\u7528 loadClass \u65b9\u6cd5\u7684\u8bdd\u53ef\u4ee5\u5b9e\u73b0\u70ed\u90e8\u7f72","title":"\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668"},{"location":"jvm/#execution-engine","text":"","title":"\u6267\u884c\u5f15\u64ce Execution Engine"},{"location":"jvm/#native","text":"\u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u662f native\uff0c\u6ca1\u6709\u5783\u573e\u56de\u6536\uff0c\u5f88\u5c0f\u53ea\u6709 10 \u6765 KB\uff0c\u6bd4\u5982 thread \u7c7b\u4e2d\u7684 start0()\u65b9\u6cd5","title":"native \u65b9\u6cd5"},{"location":"jvm/#_4","text":"cpu \u4e2d\u7684\u5bc4\u5b58\u5668\uff0c\u662f\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\u5b57\u8282\u7801\u7684\u884c\u53f7\u6307\u793a\u5668\u3002\u5982\u679c native \u65b9\u6cd5\uff0c\u8ba1\u6570\u5668\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a native \u65b9\u6cd5\u4e0d\u662f Java \u7684\u3002\u7528\u6765\u5b8c\u6210\u5206\u652f\u5faa\u73af\u8df3\u8f6c\u5f02\u5e38\u5904\u7406\u7b49\u7b49\u3002","title":"\u7a0b\u5e8f\u8ba1\u6570\u5668"},{"location":"jvm/#_5","text":"\u5f88\u5c11\u5783\u573e\u56de\u6536\uff0c\u7ebf\u7a0b\u5171\u4eab\u3002\u662f\u5b58\u653e\u7c7b\u7684\u7ed3\u6784\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u6a21\u677f\u3002\u5982\u5e38\u91cf\u6c60\u5b57\u6bb5\u65b9\u6cd5\u6570\u636e\u6784\u9020\u51fd\u6570\u666e\u901a\u65b9\u6cd5\u7b49\u5b57\u8282\u7801\u5185\u5bb9\uff0c \u65b9\u6cd5\u533a\u662f\u89c4\u8303\uff0c\u4e0d\u540c\u865a\u62df\u673a\u5b9e\u73b0\u4e0d\u540c\u3002\u5982\u6c38\u4e45\u4ee3\u548c\u539f\u7a7a\u95f4 \u5b58\u50a8\uff1a\u7c7b\u7ed3\u6784\u4fe1\u606f\u3001\u666e\u901a\u5e38\u91cf\u3001\u9759\u6001\u5e38\u91cf\u3001\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u7b49\u3002\u4e5f\u53eb\u975e\u5806\u5185\u5b58\uff0c1.7 \u4e4b\u524d\u7684\u6c38\u4e45\u4ee3\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u4e2a\u5b9e\u73b0\u800c\u5df2\u3002","title":"\u65b9\u6cd5\u533a"},{"location":"jvm/#_6","text":"\u6ca1\u6709 gc\uff0c\u6808\u6ea2\u51fa\u662f\u9519\u8bef\u4e0d\u662f\u5f02\u5e38","title":"\u865a\u62df\u673a\u6808"},{"location":"jvm/#_7","text":"8 \u4e2d\u57fa\u672c\u7c7b\u578b\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5b9e\u4f8b\u65b9\u6cd5\u7684\u90fd\u662f\u5728\u6808\u4e2d\u5206\u914d\u3002Java \u4e2d\u65b9\u6cd5\u53eb\u505a\u6808\u5e27","title":"\u4fdd\u5b58\u4ec0\u4e48\uff1f"},{"location":"jvm/#_8","text":"\u89c4\u8303\u4e0a\u5206\u4e3a\u4e09\u4ee3\uff0c\u5b9e\u9645\u4e0a\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\u662f\u7269\u7406\u8fde\u7eed\u7684\uff0c\u5143\u7a7a\u95f4\u4e0d\u5728\u5806\u4e0a \u65b0\u751f\u4ee3 1/3 eden \u533a 8 s0(from) 1 s1(to) 1 \u8001\u5e74\u4ee3 2/3 15 \u6b21\u5783\u573e\u56de\u6536\u4ee5\u540e\u8fdb\u5165 \u6c38\u4e45\u4ee3 1.8 \u4e4b\u540e\u6c38\u4e45\u4ee3\u4e0d\u5728 jvm \u5185\u5b58\u4e2d\uff0c\u4e8c\u662f\u76f4\u63a5\u4f7f\u7528\u7269\u7406\u5185\u5b58\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/4 Heap PSYoungGen total 153088K, used 7895K [0x0000000715800000, 0x0000000720280000, 0x00000007c0000000) eden space 131584K, 6% used [0x0000000715800000,0x0000000715fb5dc8,0x000000071d880000) from space 21504K, 0% used [0x000000071ed80000,0x000000071ed80000,0x0000000720280000) to space 21504K, 0% used [0x000000071d880000,0x000000071d880000,0x000000071ed80000) ParOldGen total 349696K, used 0K [0x00000005c0800000, 0x00000005d5d80000, 0x0000000715800000) object space 349696K, 0% used [0x00000005c0800000,0x00000005c0800000,0x00000005d5d80000) Metaspace used 3028K, capacity 4556K, committed 4864K, reserved 1056768K class space used 319K, capacity 392K, committed 512K, reserved 1048576K","title":"\u5806"},{"location":"jvm/#jvm","text":"\u5806\u6808\u65b9\u6cd5\u533a\u7a0b\u5e8f\u8ba1\u6570\u5668 \u6808\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7ebf\u7a0b\u79c1\u6709 \u5806\u3001\u65b9\u6cd5\u533a\u7ebf\u7a0b\u5171\u4eab\uff0c\u5b58\u5728\u5783\u573e\u56de\u6536","title":"JVM \u5185\u5b58\u5212\u5206"},{"location":"jvm/#_9","text":"\u65b0\u751f\u4ee3\u3001\u8001\u5e74\u4ee3\u3001\u6301\u4e45\u4ee3\uff081.8 \u6ca1\u6709\u8001\u5e74\u4ee3\uff09 \u65b0\u751f\u4ee3\uff1aEden \u533a\u548c servivor\uff0cservivor \u533a\u4f7f\u7528\u590d\u5236\u7b97\u6cd5\uff0c\u6bcf\u6b21\u53ea\u80fd\u4f7f\u7528\u4e00\u822c\u7684\u5185\u5b58","title":"\u5806\u5185\u5b58\u5212\u5206"},{"location":"jvm/#gc-roots","text":"\u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u9759\u6001\u7c7b\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61","title":"GC ROOTS \u5bf9\u8c61"},{"location":"jvm/#4","text":"jvm \u91c7\u7528\u5206\u4ee3\u56de\u6536\u7b97\u6cd5\u30021. \u5728\u6b21\u6570\u4e0a young \u533a\u6536\u96c6\u6bd4\u8f83\u9891\u7e41\uff0c2.old \u533a\u6536\u96c6\u6bd4\u8f83\u5c11\uff0c3.\u57fa\u672c\u4e0a\u4e0d\u52a8\u5143\u7a7a\u95f4 \u9ed8\u8ba4 15 \u6b21 GC \u5b58\u5728\u8001\u5e74\u4ee3\uff0cjdk8 \u5b9a\u6b7b\u4e86 15\u3002gc \u4e0d\u662f\u4e09\u5757\u533a\u57df\u4e00\u8d77\u56de\u6536\uff0c\u4e3b\u8981\u53d1\u751f\u5728 young \u533a","title":"4 \u5927\u5783\u573e\u56de\u6536\u7b97\u6cd5\u4e03\u5927\u5783\u573e\u56de\u6536\u5668"},{"location":"jvm/#_10","text":"\u5f15\u7528\u8ba1\u6570\u7b97\u6cd5 \u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\uff1a\u8001\u5e74\u4ee3\u4f7f\u7528\uff0c\u6700\u5927\u7684\u95ee\u9898\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c\u4e24\u6b21\u626b\u63cf\u8017\u65f6\uff0c\u6709 stw \uff0c\u6807\u8bb0\u8981\u6e05\u9664\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u7edf\u4e00\u8fdb\u884c\u56de\u6536 \u6807\u8bb0\u6574\u7406\u7b97\u6cd5\uff1a\u8001\u5e74\u4ee3\u4f7f\u7528\uff0c\u548c\u6807\u8bb0\u6e05\u9664\u6df7\u5408\u4f7f\u7528\u3002\u4e24\u6b21\u626b\u63cf\uff0c\u79fb\u52a8\u5bf9\u8c61\u9700\u8981\u8017\u65f6\uff0c\u6548\u7387\u4f4e\u4e8e\u590d\u5236\u7b97\u6cd5\u3002\u5de5\u7a0b\u4e0a\u662f\u4f7f\u7528\u6807\u8bb0\u6e05\u9664\uff0c\u5230\u8fbe\u4e00\u5b9a\u6761\u4ef6\u540e\u8fdb\u884c\u6574\u7406\u4e5f\u53eb\u6807\u8bb0\u6e05\u9664\u6574\u7406\u7b97\u6cd5 \u590d\u5236\u7b97\u6cd5\uff1ayoung \u533a\u4f7f\u7528\u590d\u5236\u7b97\u6cd5\uff0cminorgc \u4f1a\u628a eden \u533a\u4e2d\u5bf9\u8c61\u79fb\u5230 survivor \u533a\u4e2d\uff0c\u5982\u679c survivor \u533a\u653e\u4e0d\u4e0b\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u6d3b\u7684\u5bf9\u8c61\u5c31\u4f1a\u88ab\u5f02\u52a8\u5230 old \u533a\uff0c\u4e00\u65e6\u6536\u96c6\u5b8c\u6210 eden \u533a\u5c31\u4f1a\u53d8\u6210\u7a7a\u3002\u4f18\u70b9\u4e0d\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c \u7f3a\u70b9\u8017\u7a7a\u95f4","title":"\u5783\u573e\u56de\u6536\u7b97\u6cd5"},{"location":"jvm/#_11","text":"","title":"\u5783\u573e\u6536\u96c6\u5668"},{"location":"jvm/#jvm_1","text":"","title":"jvm \u8c03\u4f18"},{"location":"jvm/#_12","text":"Java \u5c06\u5185\u5b58\u62bd\u8c61\u4e3a Runtime \u5bf9\u8c61,\u901a\u8fc7 Runtime.getRuntime()\u83b7\u53d6 java \u865a\u62df\u673a\u53c2\u6570\u5206\u4e3a \u6807\u51c6\u53c2\u6570\u5982(-) -version \u975e\u6807\u51c6\u53c2\u6570(-XX) \u5e03\u5c14\u578b\uff0c\u7528\u52a0\u53f7\u6807\u8bc6\u5f00\u542f\u51cf\u53f7\u6807\u8bc6\u5173\u95ed\uff1a -XX:+PrintGCDetails \u5f00\u542f\u6253\u5370 gc \u65e5\u5fd7 -XX:+PrintCommandLineFlags \u6253\u5370\u542f\u52a8\u914d\u7f6e\u4fe1\u606f -XX:NewRatio=2 \u8bbe\u7f6e\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\u7684\u6bd4\u4f8b\uff0c\u503c\u76f4\u63a5\u4ee3\u8868\u8001\u5e74\u4ee3\u5360\u6bd4\uff0c\u5269\u4e0b\u7684 1 \u5c31\u662f\u65b0\u751f\u4ee3\u7684\u3002 -XX:ServivorRatio=8 \u8bbe\u7f6e endn \u548c servivor \u7684\u6bd4\u4f8b\uff0c8:1:1 -XX:MaxTenuringThreshold=15 \u8bbe\u7f6e\u5783\u573e\u65b0\u751f\u4ee3\u5230\u8001\u5e74\u4ee3\u8981\u7ecf\u8fc7\u7684 gc \u6b21\u6570\uff0c\u9ed8\u8ba4\u662f 15 \u6b21\u3002\u5982\u679c\u8bbe\u7f6e 0 \u5219\u4e0d\u7ecf\u8fc7 servivor \u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3\u3002\u5fc5\u987b\u8bbe\u7f6e\u5728 0-15 \u4e4b\u95f4 key-vlue \u952e\u503c\u578b-XX:InnitialHeapSize=1m -Xms \u5806\u6700\u5c0f\u503c -Xmx \u5806\u6700\u5927\u503c -Xss \u5355\u4e2a\u7ebf\u7a0b\u6808\u5927\u5c0f\uff0c\u4e00\u822c 512k-1024k\u3002\u521d\u59cb\u503c\u67e5\u8be2\u51fa\u6765\u7684\u8bdd\u662f 0\uff0c\u6240\u4ee5\u5982\u679c\u67e5\u8be2\u51fa\u6765 0 \u5c31\u4ee3\u8868\u662f\u521d\u59cb\u503c\u3002linux \u9ed8\u8ba4\u662f 1024k -Xmn \u8bbe\u7f6e\u65b0\u751f\u4ee3\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e0d\u7528\u8c03\u8bd5\u7528\u9ed8\u8ba4\u503c -XX:MetaspaceSize=1024m,\u5143\u7a7a\u95f4\u8bd5\u7528\u64cd\u4f5c\u7cfb\u7edf\u7269\u7406\u5185\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5 jdk \u53ea\u5206\u914d\u4e86 21MB public static void main(String[] args) { //\u5269\u4f59\u5806\u5185\u5b58 System.out.println(Runtime.getRuntime().freeMemory()); //\u5904\u7406\u5668\u4e2a\u6570 System.out.println(Runtime.getRuntime().availableProcessors()); //\u6700\u5927\u5185\u5b58\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u76841/4 System.out.println(Runtime.getRuntime().maxMemory()); //\u6700\u5c0f\u5806\u5185\u5b58\uff0c\u9ed8\u8ba4\u662f\u7cfb\u7edf\u5185\u5b58\u76841/64 System.out.println(Runtime.getRuntime().totalMemory()); } \u5b9e\u9645\u7ebf\u4e0a\u5fc5\u987b\u5c06\u6700\u5c0f\u5185\u5b58\u548c\u6700\u5927\u5185\u5b58\u8bbe\u7f6e\u4e3a\u4e00\u6837,\u907f\u514d gc \u548c\u5e94\u7528\u4e89\u62a2\u5185\u5b58\u6d6a\u8d39\u6027\u80fd","title":"\u524d\u63d0\u77e5\u8bc6"},{"location":"jvm/#_13","text":"-XX:+PrintCommandLineFlags \u6253\u5370 jvm \u7684\u542f\u52a8\u53c2\u6570 -Xms \u7b49\u4ef7\u4e8e-XX:InitialHeadSize \u8bbe\u7f6e\u5806\u6700\u5c0f\u5185\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/64 -Xmx \u7b49\u4ef7\u4e8e-XX:MaxHeapSize \u8bbe\u7f6e\u5806\u5185\u5b58\u7684\u6700\u5927\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u7269\u7406\u5185\u5b58\u7684 1/4 -XX:+PrintGcDetails \u6253\u5370 gc \u65e5\u5fd7 jinfo \u67e5\u8be2\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u53c2\u6570 \u53ef\u4ee5\u4f7f\u7528 jinfo pid \u4e5f\u53ef\u4ee5\u4f7f\u7528 jinfo flag(s) pid","title":"\u5e38\u7528\u53c2\u6570"},{"location":"jvm/#gc","text":"eden \u533a minor gc old \u533a\u53d1\u751f major gc \u4e5f\u53eb full gc\uff0cfullgc \u6162 8-10 \u500d\uff0c\u4e3a\u4ec0\u4e48\u6162\uff1f\u56e0\u4e3a full gc \u626b\u63cf\u7a7a\u95f4\u6bd4\u8f83\u5927 [GC (Allocation Failure) [PSYoungGen: 1000K->488K(1024K)] 1016K->576K(1536K), 0.0006887 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [Full GC (Ergonomics) [PSYoungGen: 649K->137K(1024K)] [ParOldGen: 408K->408K(512K)] 1058K->545K(1536K), [Metaspace: 3020K->3020K(1056768K)], 0.0041367 secs] [Times: user=0.00 sys=0.00, real=0.00 secs]","title":"gc \u65e5\u5fd7"},{"location":"jvm/#_14","text":"java \u6a21\u62df public class DeadLockDemo { public static void main(String[] args) { String lockA = \"lockA\"; String lockB = \"lockB\"; new Thread(new res(lockA, lockB), \"aaaaaaaaaaaa\").start(); new Thread(new res(lockB, lockA), \"bbbbbbbbbbbb\").start(); } } class res extends Thread { private String lockA; private String lockB; public res(String lockA, String lockB) { this.lockA = lockA; this.lockB = lockB; } @Override public void run() { synchronized (lockA) { System.out.println(\"\u83b7\u5f97\u9501\" + lockA + \"\u5c1d\u8bd5\u83b7\u53d6\" + lockB); try { TimeUnit.SECONDS.sleep(3); synchronized (lockB) { System.out.println(\"\u83b7\u5f97\u9501\" + lockB); } } catch (InterruptedException e) { e.printStackTrace(); } } } \u5b9e\u64cd\u8fc7\u7a0b\uff1a \u4f7f\u7528 jps \u67e5\u770b\u8fdb\u7a0b\u7f16\u53f7(linux \u548c windows \u901a\u7528) jps -l //\u6253\u5370\u4fe1\u606f PS C:\\Users\\bear\\IdeaProjects\\jvmdemo> jps -l 11920 org.jetbrains.jps.cmdline.Launcher 12448 org.jetbrains.idea.maven.server.RemoteMavenServer36 9424 11044 15736 org.codehaus.classworlds.Launcher 5788 pro.dengyi.DeadLockDemo 6940 sun.tools.jps.Jps 7548 org/netbeans/Main \u6839\u636e\u81ea\u5df1\u9879\u76ee\u7684\u5305\u540d\u4f7f\u7528 jstack \u547d\u4ee4\u67e5\u770b\u6808\u4fe1\u606f PS C:\\Users\\bear\\IdeaProjects\\jvmdemo> jstack 5788 //\u6253\u5370\u4fe1\u606f 2020-06-25 22:49:12 Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.241-b07 mixed mode): \"DestroyJavaVM\" #17 prio=5 os_prio=0 tid=0x0000000003652800 nid=0x838 waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"bbbbbbbbbbbb\" #16 prio=5 os_prio=0 tid=0x00000000277ae800 nid=0x1de4 waiting for monitor entry [0x000000002866e000] java.lang.Thread.State: BLOCKED (on object monitor) at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a77d0> (a java.lang.String) - locked <0x00000007159a7808> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"aaaaaaaaaaaa\" #14 prio=5 os_prio=0 tid=0x00000000277ab000 nid=0xf60 waiting for monitor entry [0x000000002856e000] java.lang.Thread.State: BLOCKED (on object monitor) at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a7808> (a java.lang.String) - locked <0x00000007159a77d0> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"Service Thread\" #12 daemon prio=9 os_prio=0 tid=0x0000000027779800 nid=0x33cc runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C1 CompilerThread2\" #11 daemon prio=9 os_prio=2 tid=0x00000000276f3000 nid=0xc8c waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C2 CompilerThread1\" #10 daemon prio=9 os_prio=2 tid=0x00000000276ea000 nid=0x2cf8 waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"C2 CompilerThread0\" #9 daemon prio=9 os_prio=2 tid=0x00000000276e9000 nid=0x90c waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Command Reader\" #8 daemon prio=10 os_prio=0 tid=0x0000000027690800 nid=0x6ec runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Event Helper Thread\" #7 daemon prio=10 os_prio=0 tid=0x000000002768d000 nid=0x14f4 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"JDWP Transport Listener: dt_socket\" #6 daemon prio=10 os_prio=0 tid=0x000000002767e800 nid=0x2a60 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Attach Listener\" #5 daemon prio=5 os_prio=2 tid=0x0000000027678800 nid=0x1dac waiting on condition [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Signal Dispatcher\" #4 daemon prio=9 os_prio=2 tid=0x0000000026330000 nid=0x2444 runnable [0x0000000000000000] java.lang.Thread.State: RUNNABLE \"Finalizer\" #3 daemon prio=8 os_prio=1 tid=0x000000000374c800 nid=0x2920 in Object.wait() [0x000000002766e000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on <0x0000000715808ee0> (a java.lang.ref.ReferenceQueue$Lock) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144) - locked <0x0000000715808ee0> (a java.lang.ref.ReferenceQueue$Lock) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165) at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216) \"Reference Handler\" #2 daemon prio=10 os_prio=2 tid=0x000000002630a800 nid=0x10d8 in Object.wait() [0x000000002756f000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on <0x0000000715806c00> (a java.lang.ref.Reference$Lock) at java.lang.Object.wait(Object.java:502) at java.lang.ref.Reference.tryHandlePending(Reference.java:191) - locked <0x0000000715806c00> (a java.lang.ref.Reference$Lock) at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153) \"VM Thread\" os_prio=2 tid=0x00000000262e8000 nid=0x14e8 runnable \"GC task thread#0 (ParallelGC)\" os_prio=0 tid=0x0000000003668000 nid=0xf30 runnable \"GC task thread#1 (ParallelGC)\" os_prio=0 tid=0x0000000003669800 nid=0x85c runnable \"GC task thread#2 (ParallelGC)\" os_prio=0 tid=0x000000000366b800 nid=0xd84 runnable \"GC task thread#3 (ParallelGC)\" os_prio=0 tid=0x000000000366e000 nid=0x3280 runnable \"VM Periodic Task Thread\" os_prio=2 tid=0x00000000277a5000 nid=0x3734 waiting on condition JNI global references: 1499 Found one Java-level deadlock: ============================= \"bbbbbbbbbbbb\": waiting to lock monitor 0x00000000037494f8 (object 0x00000007159a77d0, a java.lang.String), which is held by \"aaaaaaaaaaaa\" \"aaaaaaaaaaaa\": waiting to lock monitor 0x000000000374bd88 (object 0x00000007159a7808, a java.lang.String), which is held by \"bbbbbbbbbbbb\" Java stack information for the threads listed above: =================================================== \"bbbbbbbbbbbb\": at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a77d0> (a java.lang.String) - locked <0x00000007159a7808> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) \"aaaaaaaaaaaa\": at pro.dengyi.res.run(DeadLockDemo.java:29) - waiting to lock <0x00000007159a7808> (a java.lang.String) - locked <0x00000007159a77d0> (a java.lang.String) at java.lang.Thread.run(Thread.java:748) Found 1 deadlock.","title":"\u6b7b\u9501\u5b9a\u4f4d"},{"location":"jvm/#jmm-java","text":"","title":"JMM java \u5185\u5b58\u6a21\u578b"},{"location":"jvm/#java","text":"new \u5bf9\u8c61\u65f6\u7684\u52a0\u8f7d\u987a\u5e8f \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u6267\u884c\uff0c\u52a0\u8f7d\u4e00\u6b21 \u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u5176\u4ed6 \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u5b50\u7c7b\u4f1a\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528 \u4ee3\u7801\u7814\u7a76\uff1a public class LoadFatcher { static { System.out.println(\"\u7236\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757\"); } //\u666e\u901a\u4ee3\u7801\u5757\u53c8\u53eb\u505a\u6784\u9020\u5757 { System.out.println(\"\u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c\"); } public LoadFatcher() { System.out.println(\"\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c\"); } } class LoadSon extends LoadFatcher { static { System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757\"); } { System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c\"); } public LoadSon() { System.out.println(\"\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c\"); } public static void main(String[] args) { LoadSon loadSon = new LoadSon(); System.out.println(\"\u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u65b9\u6cd5\u6267\u884c---------------\"); LoadSon loadSon1 = new LoadSon(); } } //\u8f93\u51fa \u7236\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757 \u5b50\u7c7b\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757 \u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u65b9\u6cd5\u6267\u884c--------------- \u7236\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u7236\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c \u5b50\u7c7b\u4e2d\u7684\u666e\u901a\u4ee3\u7801\u5757\u6267\u884c \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u6267\u884c","title":"Java \u52a0\u8f7d\u6267\u884c\u987a\u5e8f"},{"location":"jvm/interview/","text":"jvm \u9762\u8bd5\u9898 \u00b6 \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u3001\u6c99\u7bb1\u673a\u5236 \u00b6 1. \u4f60\u77e5\u9053\u600e\u4e48\u8ba1\u7b97\u5bf9\u8c61\u5927\u5c0f\u5417\uff1f \u00b6 Java \u4e2d\u662f 8 \u5b57\u8282\u5bf9\u9f50\u3002 \u5bf9\u8c61\u5185\u5b58\u7ed3\u6784\uff1a\u5bf9\u8c61\u5934\u533a\u57df\u3001\u5b9e\u4f8b\u6570\u636e\u533a\u57df\u3001\u5bf9\u9f50\u586b\u5145\u533a\u57df 2. \u7a7a\u5bf9\u8c61\u5360\u7528\u591a\u5c11\u4e2a\u5b57\u8282\uff1f \u00b6 \u7a7a\u5bf9\u8c61\uff1a\u6ca1\u6709\u666e\u901a\u5c5e\u6027\u7684\u5bf9\u8c61 \u5f00\u542f\u6307\u9488\u538b\u7f29\u5360\u7528 16 \u5b57\u8282 -XX:+UseCompressedOops//\u5f00\u542f\u6307\u9488\u538b\u7f29 \u672a\u5f00\u542f\u6307\u9488\u538b\u7f29\u6682\u7528 16 \u4e2a\u5b57\u8282 2. \u6307\u9488\u538b\u7f29\uff1f \u00b6 64 \u4f4d\u673a\u5668\u7ebf\u6027\u5730\u5740\u662f 8 \u5b57\u8282\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u662f 48 \u4f4d\uff0c16 \u4f4d\u4fdd\u7559\u3002\u6240\u4ee5\uff0c\u6700\u5927\u652f\u6301 256T \u5185\u5b58\u3002\u5f00\u542f\u6307\u9488\u538b\u7f29\u4ee5\u540e\u4f7f\u7528 1. jvm \u5783\u573e\u56de\u6536\u65f6\u5982\u4f55\u786e\u5b9a\u5783\u573e\uff1f\u662f\u5426\u77e5\u9053\u4ec0\u4e48\u662f GC Roots? \u00b6 \u5bf9\u8c61\u6ca1\u6709\u88ab\u5f15\u7528\u6307\u5411\u65f6\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5185\u5b58\u4e2d\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\u7684\u7a7a\u95f4\u5c31\u662f\u5783\u573e\u3002 \u786e\u5b9a\u5783\u573e\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u5f15\u7528\u8ba1\u6570\u6cd5\u548c\u53ef\u8fbe\u6027\u5206\u6790\u7b97\u6cd5 \u5f15\u7528\u8ba1\u6570\u6cd5\u4e0d\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a jvm \u5783\u573e\u56de\u6536\u662f\u4f7f\u7528\u6839\u641c\u7d22\u7b97\u6cd5\u6765\u786e\u5b9a\u5783\u573e\u3002 \u901a\u8fc7 gc roots \u5bf9\u8c61\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5411\u4e0b\u641c\u7d22\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5230 gc roots \u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u94fe\u8fde\u63a5\u65f6\uff0c\u5219\u8bf4\u660e\u5bf9\u8c61\u4e0d\u53ef\u7528\uff0c\u53ef\u4ee5\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002 gc roots \u5bf9\u8c61\u4e00\u5171\u53ef\u4ee5\u5206\u4e3a 4 \u79cd\uff1a \u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u9759\u6001\u7c7b\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 2. \u4f60\u8bf4\u4f60\u505a\u8fc7 jvm \u8c03\u4f18\uff0c\u90a3\u4e48\u8bf7\u95ee\u5982\u4f55\u76d8\u70b9\u67e5\u770b jvm \u7cfb\u7edf\u9ed8\u8ba4\u53c2\u6570\uff1f \u00b6 \u4f7f\u7528\u547d\u4ee4\uff1a-XX:+PrintCommandLineFlags -XX:InitialHeapSize=536223744 -XX:MaxHeapSize=8579579904 -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC 3. \u4f60\u5e73\u65f6\u5de5\u4f5c\u7528\u7684 jvm \u5e38\u7528\u57fa\u672c\u914d\u7f6e\u53c2\u6570\u6709\u54ea\u4e9b\uff1f \u00b6 \u6700\u5c0f\u5806\u5927\u5c0f: -Xms1024m \u6700\u5927\u5806\u5927\u5c0f: -Xmx1024m \u9009\u62e9\u5783\u573e\u6536\u96c6\u5668:-XX:+UseG1GC 4. \u56db\u5927\u5f15\u7528\u5206\u522b\u662f\u4ec0\u4e48\uff1f \u00b6 \u5f3a\u8f6f\u5f31\u865a\u56db\u5927\u5f15\u7528 \u5f3a\u5f15\u7528\u4e0d\u7ba1\u5185\u5b58\u662f\u5426\u5145\u8db3\u90fd\u4e0d\u4f1a\u8fdb\u884c\u5783\u573e\u56de\u6536 \u8f6f\u5f15\u7528\u5185\u5b58\u5145\u8db3\u4e0d\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u5185\u5b58\u4e0d\u8db3\u4f1a\u8fdb\u884c\u5783\u573e\u56de\u6536 \u56fe\u7247\u7684\u7f13\u5b58\uff0c\u5185\u5b58\u4e0d\u8db3\u65f6\u5783\u573e\u56de\u6536\u4e0d\u4f1a OOM \u5f31\u5f15\u7528\u4e0d\u7ba1\u5185\u5b58\u90fd\u4f1a\u88ab\u5783\u573e\u56de\u6536 WeakHashMap,entry \u5bf9\u8c61\u7ee7\u627f\u4e86 WeakReference \uff0c\u5f53\u8fdb\u884c gc \u540e\u4f1a\u88ab\u6e05\u7a7a \u865a\u5f15\u7528 get \u8fd4\u56de null,\u5fc5\u987b\u914d\u5408\u5f15\u7528\u961f\u5217\uff0cReferenceQueue<>,\u88ab\u56de\u6536\u7684\u65f6\u5019\u653e\u5165\u5f15\u7528\u961f\u5217\u4fdd\u5b58\u4e00\u4e0b 5. \u8c08\u8c08\u5bf9 oom \u7684\u8ba4\u8bc6\uff1f \u00b6 6. gc \u5783\u573e\u56de\u6536\u7b97\u6cd5\u548c\u5783\u573e\u6536\u96c6\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\u5206\u522b\u662f\u4ec0\u4e48\u8bf7\u4f60\u8c08\u8c08\uff1f \u00b6 \u56db\u79cd\u4e3b\u8981\u7684\u5783\u573e\u6536\u96c6\u5668\u4e3a\uff1a serial \u4e32\u884c\u5783\u573e\u6536\u96c6\u5668\uff0c\u53ea\u6709\u4e00\u4e2a\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\uff0cstw \u957f\uff0c\u4e0d\u4f7f\u7528 parallel \u5e76\u884c\u5783\u573e\u6536\u96c6\u5668\uff0c\u591a\u4e2a\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\u4e00\u8d77\u5de5\u4f5c\uff0c\u4e5f\u5b58\u5728 stw\uff0c\u9002\u7528\u4e8e\u8ba1\u7b97\u3001\u5927\u6570\u636e\u7b49\u5f31\u4ea4\u4e92 cms \u5e76\u53d1\u6807\u8bb0\u6e05\u9664\u6536\u96c6\u5668\uff0c\u7528\u6237\u7ebf\u7a0b\u548c\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\u540c\u65f6\u6267\u884c G1 \u6536\u96c6\u5668 \u53ef\u914d\u7f6e\u7684 GC \u6709: UseSerialGC \u5f00\u542f\u4ee5\u540e\u65b0\u751f\u4ee3\u65f6\u5019 serial,\u8001\u5e74\u4ee3\u4f7f\u7528 serial old UseParallelGC \u9ed8\u8ba4 \u65b0\u751f\u4ee3\u4f7f\u7528 parallel scavenge \u541e\u5410\u91cf\uff0c \u8001\u5e74\u4ee3\u4f7f\u7528 parallel old\uff081.6 \u4e4b\u524d\u4f7f\u7528 serial old\uff09\uff0c\u53ef\u4ee5\u4e92\u76f8\u6fc0\u6d3b\u3002-XX:ParallelGCThreads=n cpu>8 n=5/8,cpu<8 n=\u6838\u5fc3\u6570 UseConcMarkSweepGC \u4f7f\u7528\u6765\u8001\u5e74\u4ee3\u3002\u5f00\u542f\u4e4b\u540e\uff0c\u65b0\u751f\u4ee3\u9ed8\u8ba4\u5f00\u542f UseParNewGC\uff0cserial old \u4f5c\u4e3a\u540e\u5907\u3002\u5e76\u53d1\u6267\u884c\u538b\u529b\u5927\uff0c\u5fc5\u987b\u8981\u5728\u8001\u5e74\u4ee3\u5806\u5185\u5b58\u7528\u5c3d\u524d\u5b8c\u6210\u56de\u6536\uff0c\u5426\u5219\u5783\u573e\u56de\u6536\u5931\u8d25\uff0c\u4f1a\u4ea7\u751f\u788e\u7247\uff0c\u914d\u7f6e\u8fdb\u884c\u591a\u5c11\u6b21 fullgc \u540e\u8fdb\u884c\u538b\u7f29\u3002\u9ed8\u8ba4 0 \u6bcf\u6b21\u90fd\u8fdb\u884c\u5185\u5b58\u6574\u7406 \u521d\u59cb\u6807\u8bb0 stw\uff0c\u6807\u8bb0 gc root \u5173\u8054\u5bf9\u8c61 \u5e76\u53d1\u6807\u8bb0 \u91cd\u65b0\u6807\u8bb0 stw\uff0c\u4fee\u6b63\u7528\u6237\u7ebf\u7a0b\u5bfc\u81f4\u6807\u8bb0\u53d8\u52a8\uff0c\u4e8c\u6b21\u786e\u8ba4 \u5e76\u53d1\u6e05\u9664 UseParNewGC \u65b0\u751f\u4ee3\u4f7f\u7528 parallel \u8001\u5e74\u4ee3\u4f7f\u7528 serial old UseParallelOldGC UseG1GC 7. \u600e\u4e48\u67e5\u770b\u670d\u52a1\u5668\u9ed8\u8ba4\u7684\u5783\u573e\u6536\u96c6\u5668\u662f\u54ea\u4e00\u4e2a\uff1f\u751f\u4ea7\u4e0a\u5982\u4f55\u914d\u7f6e\u5783\u573e\u6536\u96c6\u5668\uff1f\u5bf9\u5783\u573e\u6536\u96c6\u5668\u7684\u7406\u89e3\uff1f \u00b6 \u4f7f\u7528 jinfo 8. \u8c08\u8c08 g1 \u5783\u573e\u6536\u96c6\u5668\uff1f \u00b6 9. \u751f\u4ea7\u73af\u5883\u670d\u52a1\u5668\u53d8\u6162\uff0c\u8c08\u8c08\u8bca\u65ad\u601d\u8def\u548c\u6027\u80fd\u8bc4\u4f30\uff1f \u00b6 10. \u751f\u4ea7\u73af\u5883\u51fa\u73b0 cpu \u5360\u7528\u8fc7\u9ad8\uff0c\u8c08\u8c08\u5206\u6790\u601d\u8def\u548c\u5b9a\u4f4d\uff1f \u00b6","title":"jvm\u9762\u8bd5\u9898"},{"location":"jvm/interview/#jvm","text":"","title":"jvm \u9762\u8bd5\u9898"},{"location":"jvm/interview/#_1","text":"","title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u3001\u6c99\u7bb1\u673a\u5236"},{"location":"jvm/interview/#1","text":"Java \u4e2d\u662f 8 \u5b57\u8282\u5bf9\u9f50\u3002 \u5bf9\u8c61\u5185\u5b58\u7ed3\u6784\uff1a\u5bf9\u8c61\u5934\u533a\u57df\u3001\u5b9e\u4f8b\u6570\u636e\u533a\u57df\u3001\u5bf9\u9f50\u586b\u5145\u533a\u57df","title":"1. \u4f60\u77e5\u9053\u600e\u4e48\u8ba1\u7b97\u5bf9\u8c61\u5927\u5c0f\u5417\uff1f"},{"location":"jvm/interview/#2","text":"\u7a7a\u5bf9\u8c61\uff1a\u6ca1\u6709\u666e\u901a\u5c5e\u6027\u7684\u5bf9\u8c61 \u5f00\u542f\u6307\u9488\u538b\u7f29\u5360\u7528 16 \u5b57\u8282 -XX:+UseCompressedOops//\u5f00\u542f\u6307\u9488\u538b\u7f29 \u672a\u5f00\u542f\u6307\u9488\u538b\u7f29\u6682\u7528 16 \u4e2a\u5b57\u8282","title":"2. \u7a7a\u5bf9\u8c61\u5360\u7528\u591a\u5c11\u4e2a\u5b57\u8282\uff1f"},{"location":"jvm/interview/#2_1","text":"64 \u4f4d\u673a\u5668\u7ebf\u6027\u5730\u5740\u662f 8 \u5b57\u8282\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u662f 48 \u4f4d\uff0c16 \u4f4d\u4fdd\u7559\u3002\u6240\u4ee5\uff0c\u6700\u5927\u652f\u6301 256T \u5185\u5b58\u3002\u5f00\u542f\u6307\u9488\u538b\u7f29\u4ee5\u540e\u4f7f\u7528","title":"2. \u6307\u9488\u538b\u7f29\uff1f"},{"location":"jvm/interview/#1-jvm-gc-roots","text":"\u5bf9\u8c61\u6ca1\u6709\u88ab\u5f15\u7528\u6307\u5411\u65f6\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5185\u5b58\u4e2d\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\u7684\u7a7a\u95f4\u5c31\u662f\u5783\u573e\u3002 \u786e\u5b9a\u5783\u573e\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u5f15\u7528\u8ba1\u6570\u6cd5\u548c\u53ef\u8fbe\u6027\u5206\u6790\u7b97\u6cd5 \u5f15\u7528\u8ba1\u6570\u6cd5\u4e0d\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a jvm \u5783\u573e\u56de\u6536\u662f\u4f7f\u7528\u6839\u641c\u7d22\u7b97\u6cd5\u6765\u786e\u5b9a\u5783\u573e\u3002 \u901a\u8fc7 gc roots \u5bf9\u8c61\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5411\u4e0b\u641c\u7d22\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5230 gc roots \u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u94fe\u8fde\u63a5\u65f6\uff0c\u5219\u8bf4\u660e\u5bf9\u8c61\u4e0d\u53ef\u7528\uff0c\u53ef\u4ee5\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002 gc roots \u5bf9\u8c61\u4e00\u5171\u53ef\u4ee5\u5206\u4e3a 4 \u79cd\uff1a \u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u9759\u6001\u7c7b\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61","title":"1. jvm \u5783\u573e\u56de\u6536\u65f6\u5982\u4f55\u786e\u5b9a\u5783\u573e\uff1f\u662f\u5426\u77e5\u9053\u4ec0\u4e48\u662f GC Roots?"},{"location":"jvm/interview/#2-jvm-jvm","text":"\u4f7f\u7528\u547d\u4ee4\uff1a-XX:+PrintCommandLineFlags -XX:InitialHeapSize=536223744 -XX:MaxHeapSize=8579579904 -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC","title":"2. \u4f60\u8bf4\u4f60\u505a\u8fc7 jvm \u8c03\u4f18\uff0c\u90a3\u4e48\u8bf7\u95ee\u5982\u4f55\u76d8\u70b9\u67e5\u770b jvm \u7cfb\u7edf\u9ed8\u8ba4\u53c2\u6570\uff1f"},{"location":"jvm/interview/#3-jvm","text":"\u6700\u5c0f\u5806\u5927\u5c0f: -Xms1024m \u6700\u5927\u5806\u5927\u5c0f: -Xmx1024m \u9009\u62e9\u5783\u573e\u6536\u96c6\u5668:-XX:+UseG1GC","title":"3. \u4f60\u5e73\u65f6\u5de5\u4f5c\u7528\u7684 jvm \u5e38\u7528\u57fa\u672c\u914d\u7f6e\u53c2\u6570\u6709\u54ea\u4e9b\uff1f"},{"location":"jvm/interview/#4","text":"\u5f3a\u8f6f\u5f31\u865a\u56db\u5927\u5f15\u7528 \u5f3a\u5f15\u7528\u4e0d\u7ba1\u5185\u5b58\u662f\u5426\u5145\u8db3\u90fd\u4e0d\u4f1a\u8fdb\u884c\u5783\u573e\u56de\u6536 \u8f6f\u5f15\u7528\u5185\u5b58\u5145\u8db3\u4e0d\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u5185\u5b58\u4e0d\u8db3\u4f1a\u8fdb\u884c\u5783\u573e\u56de\u6536 \u56fe\u7247\u7684\u7f13\u5b58\uff0c\u5185\u5b58\u4e0d\u8db3\u65f6\u5783\u573e\u56de\u6536\u4e0d\u4f1a OOM \u5f31\u5f15\u7528\u4e0d\u7ba1\u5185\u5b58\u90fd\u4f1a\u88ab\u5783\u573e\u56de\u6536 WeakHashMap,entry \u5bf9\u8c61\u7ee7\u627f\u4e86 WeakReference \uff0c\u5f53\u8fdb\u884c gc \u540e\u4f1a\u88ab\u6e05\u7a7a \u865a\u5f15\u7528 get \u8fd4\u56de null,\u5fc5\u987b\u914d\u5408\u5f15\u7528\u961f\u5217\uff0cReferenceQueue<>,\u88ab\u56de\u6536\u7684\u65f6\u5019\u653e\u5165\u5f15\u7528\u961f\u5217\u4fdd\u5b58\u4e00\u4e0b","title":"4. \u56db\u5927\u5f15\u7528\u5206\u522b\u662f\u4ec0\u4e48\uff1f"},{"location":"jvm/interview/#5-oom","text":"","title":"5. \u8c08\u8c08\u5bf9 oom \u7684\u8ba4\u8bc6\uff1f"},{"location":"jvm/interview/#6-gc","text":"\u56db\u79cd\u4e3b\u8981\u7684\u5783\u573e\u6536\u96c6\u5668\u4e3a\uff1a serial \u4e32\u884c\u5783\u573e\u6536\u96c6\u5668\uff0c\u53ea\u6709\u4e00\u4e2a\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\uff0cstw \u957f\uff0c\u4e0d\u4f7f\u7528 parallel \u5e76\u884c\u5783\u573e\u6536\u96c6\u5668\uff0c\u591a\u4e2a\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\u4e00\u8d77\u5de5\u4f5c\uff0c\u4e5f\u5b58\u5728 stw\uff0c\u9002\u7528\u4e8e\u8ba1\u7b97\u3001\u5927\u6570\u636e\u7b49\u5f31\u4ea4\u4e92 cms \u5e76\u53d1\u6807\u8bb0\u6e05\u9664\u6536\u96c6\u5668\uff0c\u7528\u6237\u7ebf\u7a0b\u548c\u5783\u573e\u6536\u96c6\u7ebf\u7a0b\u540c\u65f6\u6267\u884c G1 \u6536\u96c6\u5668 \u53ef\u914d\u7f6e\u7684 GC \u6709: UseSerialGC \u5f00\u542f\u4ee5\u540e\u65b0\u751f\u4ee3\u65f6\u5019 serial,\u8001\u5e74\u4ee3\u4f7f\u7528 serial old UseParallelGC \u9ed8\u8ba4 \u65b0\u751f\u4ee3\u4f7f\u7528 parallel scavenge \u541e\u5410\u91cf\uff0c \u8001\u5e74\u4ee3\u4f7f\u7528 parallel old\uff081.6 \u4e4b\u524d\u4f7f\u7528 serial old\uff09\uff0c\u53ef\u4ee5\u4e92\u76f8\u6fc0\u6d3b\u3002-XX:ParallelGCThreads=n cpu>8 n=5/8,cpu<8 n=\u6838\u5fc3\u6570 UseConcMarkSweepGC \u4f7f\u7528\u6765\u8001\u5e74\u4ee3\u3002\u5f00\u542f\u4e4b\u540e\uff0c\u65b0\u751f\u4ee3\u9ed8\u8ba4\u5f00\u542f UseParNewGC\uff0cserial old \u4f5c\u4e3a\u540e\u5907\u3002\u5e76\u53d1\u6267\u884c\u538b\u529b\u5927\uff0c\u5fc5\u987b\u8981\u5728\u8001\u5e74\u4ee3\u5806\u5185\u5b58\u7528\u5c3d\u524d\u5b8c\u6210\u56de\u6536\uff0c\u5426\u5219\u5783\u573e\u56de\u6536\u5931\u8d25\uff0c\u4f1a\u4ea7\u751f\u788e\u7247\uff0c\u914d\u7f6e\u8fdb\u884c\u591a\u5c11\u6b21 fullgc \u540e\u8fdb\u884c\u538b\u7f29\u3002\u9ed8\u8ba4 0 \u6bcf\u6b21\u90fd\u8fdb\u884c\u5185\u5b58\u6574\u7406 \u521d\u59cb\u6807\u8bb0 stw\uff0c\u6807\u8bb0 gc root \u5173\u8054\u5bf9\u8c61 \u5e76\u53d1\u6807\u8bb0 \u91cd\u65b0\u6807\u8bb0 stw\uff0c\u4fee\u6b63\u7528\u6237\u7ebf\u7a0b\u5bfc\u81f4\u6807\u8bb0\u53d8\u52a8\uff0c\u4e8c\u6b21\u786e\u8ba4 \u5e76\u53d1\u6e05\u9664 UseParNewGC \u65b0\u751f\u4ee3\u4f7f\u7528 parallel \u8001\u5e74\u4ee3\u4f7f\u7528 serial old UseParallelOldGC UseG1GC","title":"6. gc \u5783\u573e\u56de\u6536\u7b97\u6cd5\u548c\u5783\u573e\u6536\u96c6\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\u5206\u522b\u662f\u4ec0\u4e48\u8bf7\u4f60\u8c08\u8c08\uff1f"},{"location":"jvm/interview/#7","text":"\u4f7f\u7528 jinfo","title":"7. \u600e\u4e48\u67e5\u770b\u670d\u52a1\u5668\u9ed8\u8ba4\u7684\u5783\u573e\u6536\u96c6\u5668\u662f\u54ea\u4e00\u4e2a\uff1f\u751f\u4ea7\u4e0a\u5982\u4f55\u914d\u7f6e\u5783\u573e\u6536\u96c6\u5668\uff1f\u5bf9\u5783\u573e\u6536\u96c6\u5668\u7684\u7406\u89e3\uff1f"},{"location":"jvm/interview/#8-g1","text":"","title":"8. \u8c08\u8c08 g1 \u5783\u573e\u6536\u96c6\u5668\uff1f"},{"location":"jvm/interview/#9","text":"","title":"9. \u751f\u4ea7\u73af\u5883\u670d\u52a1\u5668\u53d8\u6162\uff0c\u8c08\u8c08\u8bca\u65ad\u601d\u8def\u548c\u6027\u80fd\u8bc4\u4f30\uff1f"},{"location":"jvm/interview/#10-cpu","text":"","title":"10. \u751f\u4ea7\u73af\u5883\u51fa\u73b0 cpu \u5360\u7528\u8fc7\u9ad8\uff0c\u8c08\u8c08\u5206\u6790\u601d\u8def\u548c\u5b9a\u4f4d\uff1f"},{"location":"mq/","text":"\u6d88\u606f\u961f\u5217 \u00b6 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6d88\u606f\u961f\u5217 \u00b6 \u5e94\u7528\u89e3\u8026\u3001\u6d41\u91cf\u6d88\u5cf0\u3001\u5f02\u6b65\u5904\u7406 \u6d88\u606f\u961f\u5217\u9009\u578b\u53ca\u4f9d\u636e \u00b6 activemq \u5982\u4f55\u4fdd\u8bc1\u4e0d\u88ab\u91cd\u590d\u6d88\u8d39 \u00b6 \u4ec0\u4e48\u662f\u91cd\u590d\u6d88\u8d39\uff1f \u00b6 \u4fdd\u6301\u5e42\u7b49\u6027\uff0c\u4e5f\u5c31\u662f\u540c\u4e00\u6761\u6d88\u606f\u6267\u884c\u591a\u6b21\u662f\u76f8\u540c\u7684 \u6700\u5e38\u89c1\u7684\u529e\u6cd5\u662f\u5728\u505a\u5904\u7406\u4e4b\u524d\uff0c\u60f3\u67e5\u8be2\u7136\u540e\u6267\u884c \u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u53d1\u9001\u4e0d\u4e22\u5931 \u00b6 rabbitmq confirm\u673a\u5236 rabbitmq\u672c\u7701\u8981\u6301\u4e45\u5316\uff0c\u961f\u5217\u6301\u4e45\u5316\u3001\u6d88\u606f\u5185\u5bb9\u6301\u4e45\u5316 \u4e5f\u6709\u8fd8\u6ca1\u6765\u5f97\u53ca\u6301\u4e45\u5316\uff0c\u5c31\u6302\u4e86 \u6d88\u8d39\u8005\u6765\u8bf4\uff0c\u5f00\u542fautoack\uff0c\u5982\u679c\u6d88\u8d39\u8fc7\u7a0b\u4e2d\u81ea\u52a8ack\u4e86\u8fd8\u6ca1\u5b8c\u6210\u6d88\u8d39\u8005\u6302\u4e86\uff0c\u90a3\u4e48\u5c31\u5c06autoack\u5173\u95ed\uff0c\u81ea\u5df1\u624b\u52a8ack \u5982\u4f55\u4fdd\u8bc1\u987a\u5e8f \u00b6 \u6d88\u606f\u767e\u4e07\u79ef\u538b \u00b6 \u5982\u4f55\u8bbe\u8ba1\u6d88\u606f\u4e2d\u95f4\u4ef6\u67b6\u6784 \u00b6 \u539f\u7406\u67b6\u6784\u7684\u7814\u7a76\uff0c\u516c\u53f8\u9879\u76ee\u7814\u7a76 \u53ef\u4f38\u7f29\u6027 \u6d88\u606f\u6301\u4e45\u5316 \u6545\u969c\u673a\u5236 \u6d88\u606f\u786e\u8ba4\u673a\u5236 rabbitmq \u5b89\u88c5\u4f7f\u7528 \u00b6 \u5b89\u88c5erlang\u8bed\u8a00\u7136\u540e\u5b89\u88c5\u8f6f\u4ef6\uff0c\u7136\u540e\u914d\u7f6e\u7ba1\u7406\u63d2\u4ef6 rabbitmq-plugins enable rabbitmq_management","title":"\u6d88\u606f\u961f\u5217"},{"location":"mq/#_1","text":"","title":"\u6d88\u606f\u961f\u5217"},{"location":"mq/#_2","text":"\u5e94\u7528\u89e3\u8026\u3001\u6d41\u91cf\u6d88\u5cf0\u3001\u5f02\u6b65\u5904\u7406","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6d88\u606f\u961f\u5217"},{"location":"mq/#_3","text":"activemq","title":"\u6d88\u606f\u961f\u5217\u9009\u578b\u53ca\u4f9d\u636e"},{"location":"mq/#_4","text":"","title":"\u5982\u4f55\u4fdd\u8bc1\u4e0d\u88ab\u91cd\u590d\u6d88\u8d39"},{"location":"mq/#_5","text":"\u4fdd\u6301\u5e42\u7b49\u6027\uff0c\u4e5f\u5c31\u662f\u540c\u4e00\u6761\u6d88\u606f\u6267\u884c\u591a\u6b21\u662f\u76f8\u540c\u7684 \u6700\u5e38\u89c1\u7684\u529e\u6cd5\u662f\u5728\u505a\u5904\u7406\u4e4b\u524d\uff0c\u60f3\u67e5\u8be2\u7136\u540e\u6267\u884c","title":"\u4ec0\u4e48\u662f\u91cd\u590d\u6d88\u8d39\uff1f"},{"location":"mq/#_6","text":"rabbitmq confirm\u673a\u5236 rabbitmq\u672c\u7701\u8981\u6301\u4e45\u5316\uff0c\u961f\u5217\u6301\u4e45\u5316\u3001\u6d88\u606f\u5185\u5bb9\u6301\u4e45\u5316 \u4e5f\u6709\u8fd8\u6ca1\u6765\u5f97\u53ca\u6301\u4e45\u5316\uff0c\u5c31\u6302\u4e86 \u6d88\u8d39\u8005\u6765\u8bf4\uff0c\u5f00\u542fautoack\uff0c\u5982\u679c\u6d88\u8d39\u8fc7\u7a0b\u4e2d\u81ea\u52a8ack\u4e86\u8fd8\u6ca1\u5b8c\u6210\u6d88\u8d39\u8005\u6302\u4e86\uff0c\u90a3\u4e48\u5c31\u5c06autoack\u5173\u95ed\uff0c\u81ea\u5df1\u624b\u52a8ack","title":"\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u53d1\u9001\u4e0d\u4e22\u5931"},{"location":"mq/#_7","text":"","title":"\u5982\u4f55\u4fdd\u8bc1\u987a\u5e8f"},{"location":"mq/#_8","text":"","title":"\u6d88\u606f\u767e\u4e07\u79ef\u538b"},{"location":"mq/#_9","text":"\u539f\u7406\u67b6\u6784\u7684\u7814\u7a76\uff0c\u516c\u53f8\u9879\u76ee\u7814\u7a76 \u53ef\u4f38\u7f29\u6027 \u6d88\u606f\u6301\u4e45\u5316 \u6545\u969c\u673a\u5236 \u6d88\u606f\u786e\u8ba4\u673a\u5236","title":"\u5982\u4f55\u8bbe\u8ba1\u6d88\u606f\u4e2d\u95f4\u4ef6\u67b6\u6784"},{"location":"mq/#rabbitmq","text":"\u5b89\u88c5erlang\u8bed\u8a00\u7136\u540e\u5b89\u88c5\u8f6f\u4ef6\uff0c\u7136\u540e\u914d\u7f6e\u7ba1\u7406\u63d2\u4ef6 rabbitmq-plugins enable rabbitmq_management","title":"rabbitmq \u5b89\u88c5\u4f7f\u7528"},{"location":"mybatis/","text":"mybatis \u00b6 \u534a\u81ea\u52a8 orm \u6846\u67b6\uff0c\u4e00\u7ea7\u7f13\u5b58\u9ed8\u8ba4\u5f00\u542f\u65f6 sqlsession \u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u5f53 sqlsession \u6ca1\u6709 close \u7684\u8bdd\uff0c\u7f13\u5b58\u4e0d\u4f1a\u6e05\u7a7a\u3002 mybatis \u7684\u4e00\u7ea7\u7f13\u5b58\u7684\u95ee\u9898 \u00b6 spring \u4e2d\u4e3a\u4ec0\u4e48\u5931\u6548 \u00b6 mybatis-spring \u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0csqlsession \u4e0d\u6574\u5408 spring \u4f7f\u7528\u7684\u662f defaultsqlsession,\u6574\u5408 spring \u65f6\u4f7f\u7528\u7684\u662f sqlsessiontemplate \u5728\u6a21\u677f\u5185\u4f7f\u7528\u7684\u5374\u662f sqlsessionproxy,\u6700\u540e\u5728\u6267\u884c invoke \u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6267\u884c\u5b8c\u4e86\u5728 finally \u4ee3\u7801\u5757\u4e2d\u4f1a\u8c03\u7528 closesqlsession \u65b9\u6cd5\u5173\u95ed session\u3002\u76f4\u63a5\u4f7f\u7528 mybatis\uff0csession \u76f4\u63a5\u53ef\u4ee5\u64cd\u4f5c\uff0c\u6240\u4ee5\u76f8\u5173\u5c31\u5173\uff0cspring \u65e0\u6cd5\u83b7\u53d6 mybatis \u7684 sqlsession. \u56e0\u4e3a mybatis-sring \u6574\u5408\u5305\u4e2d\u6269\u5c55\u4e86 sqlsessiontemplate \u7c7b\uff0c\u5728 spring \u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\u6ce8\u5165\u7ed9\u4e86 mapper \u66ff\u4ee3\u4e86 defaultsqssionfactory,sst \u4e2d\u7684\u65b9\u6cd5\u4e0d\u662f\u76f4\u63a5\u67e5\u8be2\u800c\u662f\u88ab\u4ee3\u7406\u4e86\uff0c\u5728 invoke \u65b9\u6cd5\u4e2d finally \u4e2d\u8c03\u7528\u4e86 closesqlsession. mybatis \u4e00\u7ea7\u7f13\u5b58\u7684\u5b9e\u73b0\u539f\u7406 \u00b6","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"mybatis/#mybatis","text":"\u534a\u81ea\u52a8 orm \u6846\u67b6\uff0c\u4e00\u7ea7\u7f13\u5b58\u9ed8\u8ba4\u5f00\u542f\u65f6 sqlsession \u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u5f53 sqlsession \u6ca1\u6709 close \u7684\u8bdd\uff0c\u7f13\u5b58\u4e0d\u4f1a\u6e05\u7a7a\u3002","title":"mybatis"},{"location":"mybatis/#mybatis_1","text":"","title":"mybatis \u7684\u4e00\u7ea7\u7f13\u5b58\u7684\u95ee\u9898"},{"location":"mybatis/#spring","text":"mybatis-spring \u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0csqlsession \u4e0d\u6574\u5408 spring \u4f7f\u7528\u7684\u662f defaultsqlsession,\u6574\u5408 spring \u65f6\u4f7f\u7528\u7684\u662f sqlsessiontemplate \u5728\u6a21\u677f\u5185\u4f7f\u7528\u7684\u5374\u662f sqlsessionproxy,\u6700\u540e\u5728\u6267\u884c invoke \u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6267\u884c\u5b8c\u4e86\u5728 finally \u4ee3\u7801\u5757\u4e2d\u4f1a\u8c03\u7528 closesqlsession \u65b9\u6cd5\u5173\u95ed session\u3002\u76f4\u63a5\u4f7f\u7528 mybatis\uff0csession \u76f4\u63a5\u53ef\u4ee5\u64cd\u4f5c\uff0c\u6240\u4ee5\u76f8\u5173\u5c31\u5173\uff0cspring \u65e0\u6cd5\u83b7\u53d6 mybatis \u7684 sqlsession. \u56e0\u4e3a mybatis-sring \u6574\u5408\u5305\u4e2d\u6269\u5c55\u4e86 sqlsessiontemplate \u7c7b\uff0c\u5728 spring \u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\u6ce8\u5165\u7ed9\u4e86 mapper \u66ff\u4ee3\u4e86 defaultsqssionfactory,sst \u4e2d\u7684\u65b9\u6cd5\u4e0d\u662f\u76f4\u63a5\u67e5\u8be2\u800c\u662f\u88ab\u4ee3\u7406\u4e86\uff0c\u5728 invoke \u65b9\u6cd5\u4e2d finally \u4e2d\u8c03\u7528\u4e86 closesqlsession.","title":"spring \u4e2d\u4e3a\u4ec0\u4e48\u5931\u6548"},{"location":"mybatis/#mybatis_2","text":"","title":"mybatis \u4e00\u7ea7\u7f13\u5b58\u7684\u5b9e\u73b0\u539f\u7406"},{"location":"mybatis/interview/","text":"","title":"\u9762\u8bd5\u9898"},{"location":"mysql/","text":"\u5173\u7cfb\u578b\u6570\u636e\u5e93 MySQL \u00b6 \u6570\u636e\u5e93\u8bbe\u8ba1\u4e09\u8303\u5f0f \u00b6 \u6709\u4e3b\u952e \u5217\u6700\u5c0f\u4e0d\u53ef\u5206 \u6d88\u9664\u4f9d\u8d56\u4f20\u9012 \u5b58\u50a8\u5f15\u64ce\u9009\u62e9 \u00b6 \u5f15\u64ce\u7c7b\u578b \u7279\u70b9 innodb \u652f\u6301\u4e8b\u52a1\uff0c\u652f\u6301\u884c\u9501\uff0cinnodb \u4e2d\u7684\u9875\u5927\u5c0f\u4e3a 16K \u5927\u6982\u80fd\u5b58 80 \u4ebf myisam \u4e0d\u652f\u6301\u4e8b\u52a1 \u7d22\u5f15 \u00b6 \u7d22\u5f15\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u3002 \u7d22\u5f15\u6709\u591a\u79cd\uff0c\u6709 hash \u7d22\u5f15\u6ca1\u529e\u6cd5\u8303\u56f4\u67e5\u627e\u3002\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u6570\u636e\u7279\u6b8a\u6811\u4f1a\u5448\u7ebf\u6027\u3002\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u90a3\u4e48\u6811\u7684\u9ad8\u5ea6\u4f1a\u5f88\u9ad8\uff0c\u78c1\u76d8 io \u6b21\u6570\u4f1a\u7279\u522b\u591a\u3002b \u6811\u4e0d\u53ea\u6709\u4e00\u4e2a\u53c9\uff0c\u4f46\u662f\u626b\u5e93\u626b\u8868\u80fd\u529b\u4e0d\u5f3a\u3002b+\u6811\u6570\u636e\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u8303\u56f4\u67e5\u8be2\u80fd\u529b\u5f3a\uff0cio \u6b21\u6570\u5c11\uff0c\u67e5\u8be2\u6548\u7387\u7a33\u5b9a io \u6b21\u6570\u7a33\u5b9a 1. \u521b\u5efa\u7d22\u5f15\u539f\u5219 \u00b6 \u5217\u7684\u79bb\u6563\u5ea6\u8d8a\u9ad8\u8d8a\u597d MySQL \u5b9e\u9645\u8c03\u4f18 \u00b6","title":"mysql"},{"location":"mysql/#mysql","text":"","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93 MySQL"},{"location":"mysql/#_1","text":"\u6709\u4e3b\u952e \u5217\u6700\u5c0f\u4e0d\u53ef\u5206 \u6d88\u9664\u4f9d\u8d56\u4f20\u9012","title":"\u6570\u636e\u5e93\u8bbe\u8ba1\u4e09\u8303\u5f0f"},{"location":"mysql/#_2","text":"\u5f15\u64ce\u7c7b\u578b \u7279\u70b9 innodb \u652f\u6301\u4e8b\u52a1\uff0c\u652f\u6301\u884c\u9501\uff0cinnodb \u4e2d\u7684\u9875\u5927\u5c0f\u4e3a 16K \u5927\u6982\u80fd\u5b58 80 \u4ebf myisam \u4e0d\u652f\u6301\u4e8b\u52a1","title":"\u5b58\u50a8\u5f15\u64ce\u9009\u62e9"},{"location":"mysql/#_3","text":"\u7d22\u5f15\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u3002 \u7d22\u5f15\u6709\u591a\u79cd\uff0c\u6709 hash \u7d22\u5f15\u6ca1\u529e\u6cd5\u8303\u56f4\u67e5\u627e\u3002\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u6570\u636e\u7279\u6b8a\u6811\u4f1a\u5448\u7ebf\u6027\u3002\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u90a3\u4e48\u6811\u7684\u9ad8\u5ea6\u4f1a\u5f88\u9ad8\uff0c\u78c1\u76d8 io \u6b21\u6570\u4f1a\u7279\u522b\u591a\u3002b \u6811\u4e0d\u53ea\u6709\u4e00\u4e2a\u53c9\uff0c\u4f46\u662f\u626b\u5e93\u626b\u8868\u80fd\u529b\u4e0d\u5f3a\u3002b+\u6811\u6570\u636e\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u8303\u56f4\u67e5\u8be2\u80fd\u529b\u5f3a\uff0cio \u6b21\u6570\u5c11\uff0c\u67e5\u8be2\u6548\u7387\u7a33\u5b9a io \u6b21\u6570\u7a33\u5b9a","title":"\u7d22\u5f15"},{"location":"mysql/#1","text":"\u5217\u7684\u79bb\u6563\u5ea6\u8d8a\u9ad8\u8d8a\u597d","title":"1. \u521b\u5efa\u7d22\u5f15\u539f\u5219"},{"location":"mysql/#mysql_1","text":"","title":"MySQL \u5b9e\u9645\u8c03\u4f18"},{"location":"nosql/redis/","text":"redis \u00b6 16384 \u4e2a\u69fd\u4f4d \u00b6 crc \u7b97\u6cd5\u540e\u53d6\u6a21 16384 \u5f97\u5230\u6700\u540e\u7684\u96c6\u7fa4\u4e2d redis \u5de5\u4f5c\u539f\u7406 \u00b6 redis \u7684\u5355\u7ebf\u7a0b\u6a21\u578b\uff0c\u4e3a\u4ec0\u4e48 redis \u5355\u7ebf\u7a0b\u901f\u5ea6\u8fd8\u90a3\u4e48\u5feb\uff1f \u00b6 \u6587\u4ef6\u4e8b\u4ef6\u5904\u7406\u5668\u662f\u5355\u7ebf\u7a0b\u7684\uff0c \u5355\u7ebf\u7a0b\u52a0\u591a\u8def io \u590d\u7528\u6280\u672f \u5355\u7ebf\u7a0b\u591a\u8def io \u590d\u7528\uff0c\u5728\u5355\u7ebf\u7a0b\u4e2d\u662f\u6ca1\u6709\u963b\u585e\u7684 io \u590d\u7528\u53c8 select\u3001poll\\epoll \u4e09\u79cd\u6a21\u5f0f \u5229\u7528\u4e00\u4e2a\u7ebf\u7a0b\u68c0\u6d4b socket \u7684\u5c31\u7eea\u72b6\u6001 \u547d\u4ee4 \u00b6 set a 1 get a keys * exists a del a expire a 10 ttl a dbsize flushdb flushall list \u00b6 \u53cc\u5411\u94fe\u8868\uff0c\u5934\u63d2 lpush/\u5c3e\u63d2/rpush \u6027\u80fd\u9ad8 \u5f39\u51fa\u83b7\u53d6\u64cd\u4f5c\uff0clpop/rpop key \u6dd8\u6c70\u7b56\u7565 \u00b6 lru \u7b97\u6cd5\u548c ttl \u7b97\u6cd5 \u00b6 lru \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7b97\u6cd5 \u4e24\u79cd\u7b97\u6cd5\u90fd\u662f\u4e0d\u7cbe\u786e\u7684\uff0c\u662f\u4f30\u7b97\u7684 \u4e8b\u52a1 \u00b6 redis \u7684\u4e8b\u52a1\u66f4\u50cf\u4e00\u7ec4\u6307\u4ee4\u9700\u8981\u4e00\u8d77\u5b8c\u6210\uff0c\u4e2d\u95f4\u4e0d\u5141\u8bb8\u5176\u4ed6\u7684\u6307\u4ee4\u6267\u884c \u5982\u679c\u62a5\u544a\u9519\u8bef\uff0c\u6bd4\u5982\u547d\u4ee4\u7528\u9519\u4e86\u5355\u8bcd\u5199\u9519\u4e86\uff0c\u4f1a\u53d6\u6d88\u4e8b\u52a1 \u5982\u679c\u6267\u884c\u9636\u6bb5\u9519\u8bef\uff08\u6bd4\u5982\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c incr \u52a0\u6cd5\uff09\uff0c\u5176\u4ed6\u547d\u4ee4\u8fd8\u662f\u4f1a\u6267\u884c\uff0c\u4e0d\u4f1a\u56de\u6eda \u6301\u4e45\u5316 \u00b6 rdb \u6301\u4e45\u5316\u5b58\u50a8\u6570\u636e\uff0c\u6062\u590d\u6570\u636e\u5757 fork \u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5148\u5c06\u6570\u636e\u5199\u5165\u96f6\u65f6\u6587\u4ef6\uff0c\u5f85\u6301\u4e45\u5316\u8fc7\u7a0b\u7ed3\u675f\u4ee5\u540e\u7528\u96f6\u65f6\u6587\u4ef6\u66ff\u6362\u4e0a\u6b21\u6301\u4e45\u5316\u6587\u4ef6 \u4e00\u822c\u60c5\u51b5\u4e0b\u7236\u5b50\u8fdb\u7a0b\u516c\u7528\u5185\u5b58\uff0c\u9700\u8981\u6301\u4e45\u5316\u65f6\u4ece\u7236\u8fdb\u7a0b\u590d\u5236\u5185\u5bb9\u7ed9\u5b50\u8fdb\u7a0b \u5199\u65f6\u590d\u5236 \u5982\u679c\u4e0d\u6ee1\u8db3\u4fdd\u5b58\u7b56\u7565\u90a3\u4e48\u6700\u540e\u4e00\u6b21\u5feb\u7167\u6570\u636e\u5f02\u5e38\u5173\u95ed\u6570\u636e\u4f1a\u4e22\u5931 \u6062\u590d\u6570\u636e\u7684\u8bdd\u76f4\u63a5\u62f7\u8d1d\u5230\u76ee\u5f55\u4e0b\u542f\u52a8\u5c31\u53ef\u884c rdb \u8282\u7701\u7a7a\u95f4 aof \u6301\u4e45\u5316 \u4ee5\u65e5\u5fd7\u7684\u5f62\u5f0f\u8bb0\u5f55\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u8ffd\u52a0\u6587\u4ef6\uff0credis \u542f\u52a8\u540e\u4f1a\u8bfb\u53d6\u6587\u4ef6\u91cd\u65b0\u6784\u5efa\u6570\u636e \u53ef\u4ee5\u901a\u8fc7 rewrite \u53ea\u4fdd\u5b58\u6700\u5c0f\u6307\u4ee4 \u9ed8\u8ba4\u4e0d\u5f00\u542f\uff0c \u5360\u7528\u7a7a\u95f4\u5927 \u5982\u679c\u540c\u65f6\u5f00\u542f\uff0caof \u4f18\u5148\u7ea7\u6700\u9ad8 \u5b98\u65b9\u63a8\u8350\u4e24\u4e2a\u540c\u65f6\u7528\uff0c\u5982\u679c\u5355\u5355\u7f13\u5b58\u76f4\u63a5\u4e0d\u7528\u6301\u4e45\u5316 sentinel \u54e8\u5175\u6a21\u5f0f \u00b6 \u81ea\u52a8\u9009\u62e9\u4e00\u53f0\u4e3b\u670d\u52a1\u5668 \u5fc5\u987b\u8981\u5728\u4e3b\u4ece\u590d\u5236\u6a21\u5f0f \u9009\u4e3b\u6761\u4ef6\uff1a1.\u4f18\u5148\u7ea7\u9760\u524d\u7684 2.\u83b7\u53d6\u539f\u4e3b\u6570\u636e\u6700\u591a\u7684 3.\u6bcf\u4e2a redis \u542f\u52a8\u540e\u4f1a\u751f\u6210 40 \u4e3a uuid,uuid \u6700\u5c0f\u7684","title":"redis"},{"location":"nosql/redis/#redis","text":"","title":"redis"},{"location":"nosql/redis/#16384","text":"crc \u7b97\u6cd5\u540e\u53d6\u6a21 16384 \u5f97\u5230\u6700\u540e\u7684\u96c6\u7fa4\u4e2d","title":"16384 \u4e2a\u69fd\u4f4d"},{"location":"nosql/redis/#redis_1","text":"","title":"redis \u5de5\u4f5c\u539f\u7406"},{"location":"nosql/redis/#redis-redis","text":"\u6587\u4ef6\u4e8b\u4ef6\u5904\u7406\u5668\u662f\u5355\u7ebf\u7a0b\u7684\uff0c \u5355\u7ebf\u7a0b\u52a0\u591a\u8def io \u590d\u7528\u6280\u672f \u5355\u7ebf\u7a0b\u591a\u8def io \u590d\u7528\uff0c\u5728\u5355\u7ebf\u7a0b\u4e2d\u662f\u6ca1\u6709\u963b\u585e\u7684 io \u590d\u7528\u53c8 select\u3001poll\\epoll \u4e09\u79cd\u6a21\u5f0f \u5229\u7528\u4e00\u4e2a\u7ebf\u7a0b\u68c0\u6d4b socket \u7684\u5c31\u7eea\u72b6\u6001","title":"redis \u7684\u5355\u7ebf\u7a0b\u6a21\u578b\uff0c\u4e3a\u4ec0\u4e48 redis \u5355\u7ebf\u7a0b\u901f\u5ea6\u8fd8\u90a3\u4e48\u5feb\uff1f"},{"location":"nosql/redis/#_1","text":"set a 1 get a keys * exists a del a expire a 10 ttl a dbsize flushdb flushall","title":"\u547d\u4ee4"},{"location":"nosql/redis/#list","text":"\u53cc\u5411\u94fe\u8868\uff0c\u5934\u63d2 lpush/\u5c3e\u63d2/rpush \u6027\u80fd\u9ad8 \u5f39\u51fa\u83b7\u53d6\u64cd\u4f5c\uff0clpop/rpop key","title":"list"},{"location":"nosql/redis/#_2","text":"","title":"\u6dd8\u6c70\u7b56\u7565"},{"location":"nosql/redis/#lru-ttl","text":"lru \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7b97\u6cd5 \u4e24\u79cd\u7b97\u6cd5\u90fd\u662f\u4e0d\u7cbe\u786e\u7684\uff0c\u662f\u4f30\u7b97\u7684","title":"lru \u7b97\u6cd5\u548c ttl \u7b97\u6cd5"},{"location":"nosql/redis/#_3","text":"redis \u7684\u4e8b\u52a1\u66f4\u50cf\u4e00\u7ec4\u6307\u4ee4\u9700\u8981\u4e00\u8d77\u5b8c\u6210\uff0c\u4e2d\u95f4\u4e0d\u5141\u8bb8\u5176\u4ed6\u7684\u6307\u4ee4\u6267\u884c \u5982\u679c\u62a5\u544a\u9519\u8bef\uff0c\u6bd4\u5982\u547d\u4ee4\u7528\u9519\u4e86\u5355\u8bcd\u5199\u9519\u4e86\uff0c\u4f1a\u53d6\u6d88\u4e8b\u52a1 \u5982\u679c\u6267\u884c\u9636\u6bb5\u9519\u8bef\uff08\u6bd4\u5982\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c incr \u52a0\u6cd5\uff09\uff0c\u5176\u4ed6\u547d\u4ee4\u8fd8\u662f\u4f1a\u6267\u884c\uff0c\u4e0d\u4f1a\u56de\u6eda","title":"\u4e8b\u52a1"},{"location":"nosql/redis/#_4","text":"rdb \u6301\u4e45\u5316\u5b58\u50a8\u6570\u636e\uff0c\u6062\u590d\u6570\u636e\u5757 fork \u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5148\u5c06\u6570\u636e\u5199\u5165\u96f6\u65f6\u6587\u4ef6\uff0c\u5f85\u6301\u4e45\u5316\u8fc7\u7a0b\u7ed3\u675f\u4ee5\u540e\u7528\u96f6\u65f6\u6587\u4ef6\u66ff\u6362\u4e0a\u6b21\u6301\u4e45\u5316\u6587\u4ef6 \u4e00\u822c\u60c5\u51b5\u4e0b\u7236\u5b50\u8fdb\u7a0b\u516c\u7528\u5185\u5b58\uff0c\u9700\u8981\u6301\u4e45\u5316\u65f6\u4ece\u7236\u8fdb\u7a0b\u590d\u5236\u5185\u5bb9\u7ed9\u5b50\u8fdb\u7a0b \u5199\u65f6\u590d\u5236 \u5982\u679c\u4e0d\u6ee1\u8db3\u4fdd\u5b58\u7b56\u7565\u90a3\u4e48\u6700\u540e\u4e00\u6b21\u5feb\u7167\u6570\u636e\u5f02\u5e38\u5173\u95ed\u6570\u636e\u4f1a\u4e22\u5931 \u6062\u590d\u6570\u636e\u7684\u8bdd\u76f4\u63a5\u62f7\u8d1d\u5230\u76ee\u5f55\u4e0b\u542f\u52a8\u5c31\u53ef\u884c rdb \u8282\u7701\u7a7a\u95f4 aof \u6301\u4e45\u5316 \u4ee5\u65e5\u5fd7\u7684\u5f62\u5f0f\u8bb0\u5f55\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u8ffd\u52a0\u6587\u4ef6\uff0credis \u542f\u52a8\u540e\u4f1a\u8bfb\u53d6\u6587\u4ef6\u91cd\u65b0\u6784\u5efa\u6570\u636e \u53ef\u4ee5\u901a\u8fc7 rewrite \u53ea\u4fdd\u5b58\u6700\u5c0f\u6307\u4ee4 \u9ed8\u8ba4\u4e0d\u5f00\u542f\uff0c \u5360\u7528\u7a7a\u95f4\u5927 \u5982\u679c\u540c\u65f6\u5f00\u542f\uff0caof \u4f18\u5148\u7ea7\u6700\u9ad8 \u5b98\u65b9\u63a8\u8350\u4e24\u4e2a\u540c\u65f6\u7528\uff0c\u5982\u679c\u5355\u5355\u7f13\u5b58\u76f4\u63a5\u4e0d\u7528\u6301\u4e45\u5316","title":"\u6301\u4e45\u5316"},{"location":"nosql/redis/#sentinel","text":"\u81ea\u52a8\u9009\u62e9\u4e00\u53f0\u4e3b\u670d\u52a1\u5668 \u5fc5\u987b\u8981\u5728\u4e3b\u4ece\u590d\u5236\u6a21\u5f0f \u9009\u4e3b\u6761\u4ef6\uff1a1.\u4f18\u5148\u7ea7\u9760\u524d\u7684 2.\u83b7\u53d6\u539f\u4e3b\u6570\u636e\u6700\u591a\u7684 3.\u6bcf\u4e2a redis \u542f\u52a8\u540e\u4f1a\u751f\u6210 40 \u4e3a uuid,uuid \u6700\u5c0f\u7684","title":"sentinel \u54e8\u5175\u6a21\u5f0f"},{"location":"oauth20/authserver/","text":"auth-server \u642d\u5efa \u00b6 \u6211\u8ba4\u4e3a\u7528\u6237\u7684\u767b\u5f55\u6ce8\u518c\u5e94\u8be5\u653e\u5728 auth \u8fd9\u4e2a\u670d\u52a1\u4e2d\u3002\u56e0\u4e3a\u5982\u679c\u4f60\u7684\u9879\u76ee\u4ee5\u540e\u6210\u4e86\uff0c\u5176\u4ed6\u7f51\u7ad9\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\u8fdb\u884c\u7b2c\u4e09\u65b9\u767b\u5f55\u3002 1. pom \u4f9d\u8d56 \u00b6 <!--security oauth2\u5df2\u7ecf\u5305\u542b\u4e86security\uff0c\u6240\u4ee5\u522b\u5728\u5f15\u5165sercurity--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-oauth2</artifactId> </dependency> 2. \u96c6\u4e2d\u914d\u7f6e\u8ba4\u8bc1\u670d\u52a1\u5668\u548c spring security \u00b6 2.1 spring-security \u914d\u7f6e \u00b6 2.2 oauth2.0 \u8ba4\u8bc1\u670d\u52a1\u4e3b\u8981\u914d\u7f6e \u00b6 \u51fa\u73b0postman 401\u7684\u60c5\u51b5\u6211\u7684\u60c5\u51b5\u662foauth2\u672c\u8eab\u7684\u5b89\u5168\u7b56\u7565\u6ca1\u914d\u7f6e\u597d\uff0c\u5bfc\u81f4\u83b7\u53d6token\u7684\u65f6\u5019401","title":"spring cloud\u6784\u5efa\u8ba4\u8bc1\u670d\u52a1"},{"location":"oauth20/authserver/#auth-server","text":"\u6211\u8ba4\u4e3a\u7528\u6237\u7684\u767b\u5f55\u6ce8\u518c\u5e94\u8be5\u653e\u5728 auth \u8fd9\u4e2a\u670d\u52a1\u4e2d\u3002\u56e0\u4e3a\u5982\u679c\u4f60\u7684\u9879\u76ee\u4ee5\u540e\u6210\u4e86\uff0c\u5176\u4ed6\u7f51\u7ad9\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\u8fdb\u884c\u7b2c\u4e09\u65b9\u767b\u5f55\u3002","title":"auth-server \u642d\u5efa"},{"location":"oauth20/authserver/#1-pom","text":"<!--security oauth2\u5df2\u7ecf\u5305\u542b\u4e86security\uff0c\u6240\u4ee5\u522b\u5728\u5f15\u5165sercurity--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-oauth2</artifactId> </dependency>","title":"1. pom \u4f9d\u8d56"},{"location":"oauth20/authserver/#2-spring-security","text":"","title":"2. \u96c6\u4e2d\u914d\u7f6e\u8ba4\u8bc1\u670d\u52a1\u5668\u548c spring security"},{"location":"oauth20/authserver/#21-spring-security","text":"","title":"2.1 spring-security \u914d\u7f6e"},{"location":"oauth20/authserver/#22-oauth20","text":"\u51fa\u73b0postman 401\u7684\u60c5\u51b5\u6211\u7684\u60c5\u51b5\u662foauth2\u672c\u8eab\u7684\u5b89\u5168\u7b56\u7565\u6ca1\u914d\u7f6e\u597d\uff0c\u5bfc\u81f4\u83b7\u53d6token\u7684\u65f6\u5019401","title":"2.2 oauth2.0 \u8ba4\u8bc1\u670d\u52a1\u4e3b\u8981\u914d\u7f6e"},{"location":"spring/","text":"Spring \u6846\u67b6 \u00b6 1. Spring \u6846\u67b6\u7684\u914d\u7f6e\u65b9\u5f0f \u00b6 1.1 xml \u65b9\u5f0f \u00b6 1.2 \u6ce8\u89e3\u65b9\u5f0f \u00b6 \uff08\u4e3b\u8981\u770b\u4f7f\u7528\u54ea\u4e00\u4e2a\u542f\u52a8\u7c7b\uff0c\u5982\u679c xml \u8fd8\u662f\u9700\u8981\u4e3b xml \u5f00\u542f\u6ce8\u89e3\uff0c\u4f7f\u7528 annotation \u7684\u8bdd\u5df2\u7ecf\u9ed8\u8ba4\u5f00\u542f\u6ce8\u89e3\u4e86\uff09 1.3 java \u914d\u7f6e\u65b9\u5f0f \u00b6 2. @autowried \u548c@resource \u00b6 autowire \u6ce8\u89e3\u9ed8\u8ba4 bytype \u4f9d\u636e\u7c7b\u578b\u6ce8\u5165\uff0c\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u76f8\u5e94\u7684\u7c7b\u578b\uff0c\u4f1a\u6839\u636e\u5c5e\u6027\u540d\u6ce8\u5165\u3002resource \u4f1a\u6839\u636e\u5c5e\u6027\u7684\u540d\u8fdb\u884c\u6ce8\u5165\u5f53\u7136\u4e5f\u53ef\u4ee5\u6307\u5b9a type \u6ce8\u5165\uff0c\u4e0d\u662f\u901a\u8fc7 set \u65b9\u6cd5\u6ce8\u5165 3. \u4fee\u6539 beanNameGenerater \u4fee\u6539\u6ce8\u5165\u89c4\u5219 \u00b6 1. IOC \u00b6 \u5c06\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5bf9\u8c61\u7684\u8c03\u7528\u6743\u529b\u4ea4\u7ed9 spring \u7ba1\u7406\u3002\u76ee\u7684\u662f\u964d\u4f4e\u8026\u5408\u5ea6\uff0c\u5b9e\u9645\u4e0a\u5b8c\u5168\u6ca1\u6709\u8026\u5408\u5ea6\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f7f\u7528 ioc \u77e5\u8bc6\u5c3d\u53ef\u80fd\u7b2c\u7684\u964d\u4f4e\u8026\u5408\u5ea6\u3002ioc \u5bb9\u5668\u5b9e\u8d28\u4e0a\u5c31\u662f bean \u5de5\u5382\u3002 ioc \u5bb9\u5668\u5b9e\u9645\u4e0a\u662f\u7531\u4e00\u5806\u7ec4\u4ef6\u6784\u6210\u7684\uff0c\u5305\u62ec singletonOnjects \u5355\u4f8b\u7f13\u5b58\u6c60\u3001bean \u5b9a\u4e49 beanDifinationMap\u3001beanPostProcessers bean \u540e\u7f6e\u5904\u7406\u5668 1.1 \u5b9e\u73b0\u539f\u7406 \u00b6 \u914d\u7f6e\u89e3\u6790\uff08\u53ef\u4ee5\u662f xml \u89e3\u6790\uff09 \u5de5\u5382\u6a21\u5f0f \u53cd\u5c04\uff1a\u53cd\u5c04\u7684\u539f\u7406\u5c31\u662f\u901a\u8fc7\u52a0\u8f7d\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u83b7\u53d6\u5bf9\u8c61\u5b9e\u4f8b bean \u5b9e\u4f8b\u5316 \u00b6 \u9ed8\u8ba4\u8c03\u7528\u65e0\u53c2\u6784\u9020 \u6784\u9020\u5668\u6ce8\u5165\u3001set \u65b9\u6cd5\u6ce8\u5165 DI \u662f\u4f9d\u8d56\u6ce8\u5165\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6ce8\u5165\u5c5e\u6027\uff0c\u5f53\u7136\u524d\u63d0\u662f\u8981\u521b\u5efa\u5bf9\u8c61 2. AOP \u00b6 \u76f8\u8f83\u4e8eoop\u9762\u5411\u5bf9\u8c61\u6765\u7684\uff0caop\u4e3b\u8981\u89e3\u51b3oop\u6a2a\u5207\u6027\u95ee\u9898\u3002\u4e3b\u8981\u7528\u5728\u65e5\u5fd7\u3001\u4e8b\u52a1\u3001\u5f02\u5e38\u5904\u7406\u7b49\u3002 de \u8fde\u63a5\u70b9\u7684\u96c6\u5408\u662f\u5207\u70b9\u3002 aspectj\u662f\u5207\u9762\uff0c\u662f\u4e00\u79cd\u6982\u5ff5\u3002 3. bean \u7ba1\u7406 \u00b6 spring \u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684 bean,\u4e00\u79cd\u662f\u6211\u4eec\u81ea\u5df1\u5199\u7684\u666e\u901a bean\uff0c\u4e00\u79cd\u662f FactoryBean \u666e\u901a bean\uff0c\u5b9a\u4e49\u4ec0\u4e48\u7c7b\u578b\u5c31\u8fd4\u56de\u4ec0\u4e48\u7c7b\u578b \u5de5\u5382 bean\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b\u548c\u8fd4\u56de\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c \u521b\u5efa\u7c7b\uff0c\u5b9e\u73b0\u63a5\u53e3 FactoryBean bean \u4f5c\u7528\u57df\uff1a bean \u9ed8\u8ba4\u662f\u5355\u4f8b\uff0c\u901a\u8fc7 socpe \u5c5e\u6027\u8bbe\u7f6e singleton\u3001prototype bean \u7684\u751f\u547d\u5468\u671f 4.1 \u901a\u8fc7\u6784\u9020\u5668\u521b\u5efa bean \u5b9e\u4f8b 4.2 \u4e3a bean \u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0c\u548c\u5bf9\u5176\u4ed6 bean \u7684\u5f15\u7528\uff08set \u65b9\u6cd5\uff09 4.3 \u8c03\u7528 bean \u7684\u521d\u59cb\u5316\u65b9\u6cd5 4.4 bean \u4f7f\u7528 4.5 bean \u7684\u9500\u6bc1\uff0c\u8c03\u7528 bean \u7684\u9500\u6bc1\u65b9\u6cd5\u3002\u9700\u8981\u624b\u52a8\u8c03\u7528 context.close() \u5c5e\u6027\u81ea\u52a8\u6ce8\u5165 \u4f7f\u7528 ref \u5c5e\u6027","title":"spring\u6846\u67b6\u57fa\u7840\u77e5\u8bc6"},{"location":"spring/#spring","text":"","title":"Spring \u6846\u67b6"},{"location":"spring/#1-spring","text":"","title":"1. Spring \u6846\u67b6\u7684\u914d\u7f6e\u65b9\u5f0f"},{"location":"spring/#11-xml","text":"","title":"1.1 xml \u65b9\u5f0f"},{"location":"spring/#12","text":"\uff08\u4e3b\u8981\u770b\u4f7f\u7528\u54ea\u4e00\u4e2a\u542f\u52a8\u7c7b\uff0c\u5982\u679c xml \u8fd8\u662f\u9700\u8981\u4e3b xml \u5f00\u542f\u6ce8\u89e3\uff0c\u4f7f\u7528 annotation \u7684\u8bdd\u5df2\u7ecf\u9ed8\u8ba4\u5f00\u542f\u6ce8\u89e3\u4e86\uff09","title":"1.2 \u6ce8\u89e3\u65b9\u5f0f"},{"location":"spring/#13-java","text":"","title":"1.3 java \u914d\u7f6e\u65b9\u5f0f"},{"location":"spring/#2-autowried-resource","text":"autowire \u6ce8\u89e3\u9ed8\u8ba4 bytype \u4f9d\u636e\u7c7b\u578b\u6ce8\u5165\uff0c\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u76f8\u5e94\u7684\u7c7b\u578b\uff0c\u4f1a\u6839\u636e\u5c5e\u6027\u540d\u6ce8\u5165\u3002resource \u4f1a\u6839\u636e\u5c5e\u6027\u7684\u540d\u8fdb\u884c\u6ce8\u5165\u5f53\u7136\u4e5f\u53ef\u4ee5\u6307\u5b9a type \u6ce8\u5165\uff0c\u4e0d\u662f\u901a\u8fc7 set \u65b9\u6cd5\u6ce8\u5165","title":"2. @autowried \u548c@resource"},{"location":"spring/#3-beannamegenerater","text":"","title":"3. \u4fee\u6539 beanNameGenerater \u4fee\u6539\u6ce8\u5165\u89c4\u5219"},{"location":"spring/#1-ioc","text":"\u5c06\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5bf9\u8c61\u7684\u8c03\u7528\u6743\u529b\u4ea4\u7ed9 spring \u7ba1\u7406\u3002\u76ee\u7684\u662f\u964d\u4f4e\u8026\u5408\u5ea6\uff0c\u5b9e\u9645\u4e0a\u5b8c\u5168\u6ca1\u6709\u8026\u5408\u5ea6\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f7f\u7528 ioc \u77e5\u8bc6\u5c3d\u53ef\u80fd\u7b2c\u7684\u964d\u4f4e\u8026\u5408\u5ea6\u3002ioc \u5bb9\u5668\u5b9e\u8d28\u4e0a\u5c31\u662f bean \u5de5\u5382\u3002 ioc \u5bb9\u5668\u5b9e\u9645\u4e0a\u662f\u7531\u4e00\u5806\u7ec4\u4ef6\u6784\u6210\u7684\uff0c\u5305\u62ec singletonOnjects \u5355\u4f8b\u7f13\u5b58\u6c60\u3001bean \u5b9a\u4e49 beanDifinationMap\u3001beanPostProcessers bean \u540e\u7f6e\u5904\u7406\u5668","title":"1. IOC"},{"location":"spring/#11","text":"\u914d\u7f6e\u89e3\u6790\uff08\u53ef\u4ee5\u662f xml \u89e3\u6790\uff09 \u5de5\u5382\u6a21\u5f0f \u53cd\u5c04\uff1a\u53cd\u5c04\u7684\u539f\u7406\u5c31\u662f\u901a\u8fc7\u52a0\u8f7d\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u83b7\u53d6\u5bf9\u8c61\u5b9e\u4f8b","title":"1.1 \u5b9e\u73b0\u539f\u7406"},{"location":"spring/#bean","text":"\u9ed8\u8ba4\u8c03\u7528\u65e0\u53c2\u6784\u9020 \u6784\u9020\u5668\u6ce8\u5165\u3001set \u65b9\u6cd5\u6ce8\u5165 DI \u662f\u4f9d\u8d56\u6ce8\u5165\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6ce8\u5165\u5c5e\u6027\uff0c\u5f53\u7136\u524d\u63d0\u662f\u8981\u521b\u5efa\u5bf9\u8c61","title":"bean \u5b9e\u4f8b\u5316"},{"location":"spring/#2-aop","text":"\u76f8\u8f83\u4e8eoop\u9762\u5411\u5bf9\u8c61\u6765\u7684\uff0caop\u4e3b\u8981\u89e3\u51b3oop\u6a2a\u5207\u6027\u95ee\u9898\u3002\u4e3b\u8981\u7528\u5728\u65e5\u5fd7\u3001\u4e8b\u52a1\u3001\u5f02\u5e38\u5904\u7406\u7b49\u3002 de \u8fde\u63a5\u70b9\u7684\u96c6\u5408\u662f\u5207\u70b9\u3002 aspectj\u662f\u5207\u9762\uff0c\u662f\u4e00\u79cd\u6982\u5ff5\u3002","title":"2. AOP"},{"location":"spring/#3-bean","text":"spring \u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684 bean,\u4e00\u79cd\u662f\u6211\u4eec\u81ea\u5df1\u5199\u7684\u666e\u901a bean\uff0c\u4e00\u79cd\u662f FactoryBean \u666e\u901a bean\uff0c\u5b9a\u4e49\u4ec0\u4e48\u7c7b\u578b\u5c31\u8fd4\u56de\u4ec0\u4e48\u7c7b\u578b \u5de5\u5382 bean\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b\u548c\u8fd4\u56de\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c \u521b\u5efa\u7c7b\uff0c\u5b9e\u73b0\u63a5\u53e3 FactoryBean bean \u4f5c\u7528\u57df\uff1a bean \u9ed8\u8ba4\u662f\u5355\u4f8b\uff0c\u901a\u8fc7 socpe \u5c5e\u6027\u8bbe\u7f6e singleton\u3001prototype bean \u7684\u751f\u547d\u5468\u671f 4.1 \u901a\u8fc7\u6784\u9020\u5668\u521b\u5efa bean \u5b9e\u4f8b 4.2 \u4e3a bean \u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0c\u548c\u5bf9\u5176\u4ed6 bean \u7684\u5f15\u7528\uff08set \u65b9\u6cd5\uff09 4.3 \u8c03\u7528 bean \u7684\u521d\u59cb\u5316\u65b9\u6cd5 4.4 bean \u4f7f\u7528 4.5 bean \u7684\u9500\u6bc1\uff0c\u8c03\u7528 bean \u7684\u9500\u6bc1\u65b9\u6cd5\u3002\u9700\u8981\u624b\u52a8\u8c03\u7528 context.close() \u5c5e\u6027\u81ea\u52a8\u6ce8\u5165 \u4f7f\u7528 ref \u5c5e\u6027","title":"3. bean \u7ba1\u7406"},{"location":"spring/interview/","text":"spring \u9762\u8bd5\u9898\u96c6\u5408 \u00b6 1. \u4ec0\u4e48\u662f IOC\uff1f \u00b6 2. ioc \u548c di \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u00b6 3. bean \u751f\u547d\u5468\u671f\u56de\u8c03 \u00b6 \u4e00\u5171\u6709 3 \u4e2d\uff0cxml \u914d\u7f6e\u3001\u5b9e\u73b0\u63a5\u53e3\u3001\u4f7f\u7528\u6ce8\u89e3@postConstruct 2. \u4ec0\u4e48\u662f AOP\uff1f \u00b6 3. sping \u5982\u4f55\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56 \u00b6 4. spring \u7684\u7f13\u5b58 \u00b6 spring \u521b\u5efa bean \u7684\u5927\u81f4\u6d41\u7a0b\u662f\uff0cgetBean \u5230 doGetBean \u5230 createBean \u5230 doCreateBean \u65b9\u6cd5\uff0c\u7136\u540e\u8fd4\u56de bean.\u5728 doCreateBean \u7684\u65f6\u5019\u5927\u6982\u5206\u4e3a\u4e09\u4e0d\uff0ccreateBeanInstance \u521b\u5efa bean \u7684\u5bf9\u8c61\uff0c\u7136\u540e populateBean \u8fdb\u884c\u5c5e\u6027\u5c01\u88c5\uff0c\u7136\u540e\u8c03\u7528 initialBean \u521d\u59cb\u5316 bean. \u5faa\u73af\u4f9d\u8d56\u4e3b\u8981\u53d1\u751f\u5728 populateBean \u65b9\u6cd5\u4e2d\uff0cspring \u91c7\u7528\u4e09\u7ea7\u7f13\u5b58\u89e3\u51b3\u3002\u4e00\u7ea7 singletonObjects \u5355\u4f8b\u7f13\u5b58\u6c60 concurrenthashmap\uff0c\u4e8c\u7ea7\u662f earlySingletonObjects \u662f hashmap\uff0c\u4e09\u7ea7\u662f singletonFactories \u4e5f\u662f hahsmap singletonObjects\uff1a\u7528\u4e8e\u5b58\u653e\u5b8c\u5168\u521d\u59cb\u5316\u597d\u7684 bean\uff0c\u4ece\u8be5\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684 bean \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 earlySingletonObjects\uff1a\u63d0\u524d\u66dd\u5149\u7684\u5355\u4f8b\u5bf9\u8c61\u7684 cache\uff0c\u5b58\u653e\u539f\u59cb\u7684 bean \u5bf9\u8c61\uff08\u5c1a\u672a\u586b\u5145\u5c5e\u6027\uff09\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56 singletonFactories\uff1a\u5355\u4f8b\u5bf9\u8c61\u5de5\u5382\u7684 cache\uff0c\u5b58\u653e bean \u5de5\u5382\u5bf9\u8c61\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56 5. bean \u7684\u4f5c\u7528\u57df? \u00b6 singleton \u9ed8\u8ba4\u5355\u4f8b\uff0cprototype \u6ce8\u610f\uff1a \u5355\u4f8b bean \u5f15\u7528 prototype bean \u7684\u65f6\u5019\uff0cprototype \u5c06\u4f1a\u5931\u53bb\u610f\u4e49\u3001\u5c06\u4f1a\u5931\u6548\u3002\u5355\u4f8b bean \u5bb9\u5668\u53ea\u4f1a\u8bbe\u7f6e\u4e00\u6b21 bean \u7684\u5c5e\u6027\uff0c\u53ea\u4f1a\u8bbe\u7f6e\u4e00\u6b21\uff0c\u56e0\u6b64 prototype \u7684 bean \u5c31\u4f1a\u5931\u6548 \u89e3\u51b3\u65b9\u6cd5\uff1a \u5b9e\u73b0 applicationcontextaware\uff0c\u91cd\u5199 setApplicationContext \u65b9\u6cd5\uff0c\u91cd\u65b0\u83b7\u53d6 bean,.getbean \u6bcf\u6b21\u91cd\u65b0\u83b7\u53d6 bean \u5728\u5355\u4f8b bean \u4e2d\u4f7f\u7528@LookUp \u6ce8\u89e3\uff0c\u5c06 get \u65b9\u6cd5\u4fee\u6539 @LookUp public abstract Dao getDao(); //\u8c03\u7528\u7684\u753b\u8981\u5fc5\u987b\u4f7f\u7528getDao()\u89e6\u53d1 6. spring \u4e2d\u7528\u4e86\u54ea\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\uff1f \u00b6 7. spring \u4e2d\u7684\u5faa\u73af\u4f9d\u8d56\uff1f\u4e3a\u4ec0\u4e48\u7528\u4e09\u7ea7\u7f13\u5b58\uff1f \u00b6 \u6784\u9020\u6ce8\u5165\u3001prototype \u4e24\u8005\u5faa\u73af\u4f9d\u8d56\u65e0\u6cd5\u89e3\u51b3\uff01 springboot \u81ea\u52a8\u914d\u7f6e\u539f\u7406 \u00b6 springboootApplication \u6ce8\u89e3\u662f\u7ec4\u5408\u6ce8\u89e3\uff0c\u91cc\u9762\u5305\u542b\u4e86@enableAutoConfiguration \u6ce8\u89e3\uff0c\u8fd9\u4e2a@EnableAutoConfiguration \u6ce8\u89e3\u4e5f\u662f\u4e00\u4e2a\u7ec4\u5408\u6ce8\u89e3\u3002\u91cc\u9762\u4f7f\u7528@import \u6ce8\u89e3\u5bfc\u5165\u4e86 autoconfigurationimportselector.clss \u8fd9\u4e2a\u7c7b\uff0c\u4e3b\u8981\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u52a0\u8f7d\u4e3b\u8981\u662f\u5728\u8fd9\u91cc\u52a0\u8f7d\u7684\u3002\u5b9e\u73b0\u4e86 DeferredImportSelector \u63a5\u53e3\uff0c\u91cd\u5199\u4e86 selectImports\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8d77\u59cb\u5c31\u662f\u53bb\u626b\u63cf boot-autoconfigura \u5305\u7684 meta-inf \u76ee\u5f55\u4e0b\u7684 spring.factories \u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0ckey \u4ee5 EnableAutoConfiguration \u5305\u540d\uff0cvalue \u662f\u6240\u6709\u7684 xxxxautoconfigura \u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684\u914d\u7f6e\u7c7b\u5305\u540d\uff0c\u52a0\u8f7d\u6240\u6709\u7684\u914d\u7f6e\u7c7b\uff0c\u6839\u636e\u914d\u7f6e\u7c7b\u4e0a conditiononXXX \u8fd9\u7c7b\u6ce8\u89e3\u51b3\u5b9a\u8981\u4e0d\u8981\u5c06\u914d\u7f6e\u7c7b\u52a0\u8f7d\u5230 spring \u5bb9\u5668\u4e2d\u3002\u8fd9\u5c31\u5b9e\u73b0\u4e86\u81ea\u52a8\u914d\u7f6e //1. springboot\u4e2d\u7684apringbootapplication\u6ce8\u89e3\u662f\u7ec4\u5408\u6ce8\u89e3 @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan(excludeFilters = { @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class), @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) }) public @interface SpringBootApplication { //2. AutoConfigurationPackage\u9ed8\u8ba4\u626b\u63cf\u5f53\u524d\u5305\u53ca\u5b50\u5305 @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @AutoConfigurationPackage @Import(AutoConfigurationImportSelector.class) public @interface EnableAutoConfiguration { springmvc javaconfig \u5982\u4f55\u914d\u7f6e \u00b6 \u5b9e\u73b0 webapplicationinnitializer \u63a5\u53e3\u91cd\u5199 onstart \u65b9\u6cd5\uff0c\u8fd9\u662f servlet3.0 \u65b0\u89c4\u8303","title":"\u9762\u5b9e\u9898\u96c6\u5408"},{"location":"spring/interview/#spring","text":"","title":"spring \u9762\u8bd5\u9898\u96c6\u5408"},{"location":"spring/interview/#1-ioc","text":"","title":"1. \u4ec0\u4e48\u662f IOC\uff1f"},{"location":"spring/interview/#2-ioc-di","text":"","title":"2. ioc \u548c di \u6709\u4ec0\u4e48\u533a\u522b\uff1f"},{"location":"spring/interview/#3-bean","text":"\u4e00\u5171\u6709 3 \u4e2d\uff0cxml \u914d\u7f6e\u3001\u5b9e\u73b0\u63a5\u53e3\u3001\u4f7f\u7528\u6ce8\u89e3@postConstruct","title":"3. bean \u751f\u547d\u5468\u671f\u56de\u8c03"},{"location":"spring/interview/#2-aop","text":"","title":"2. \u4ec0\u4e48\u662f AOP\uff1f"},{"location":"spring/interview/#3-sping","text":"","title":"3. sping \u5982\u4f55\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56"},{"location":"spring/interview/#4-spring","text":"spring \u521b\u5efa bean \u7684\u5927\u81f4\u6d41\u7a0b\u662f\uff0cgetBean \u5230 doGetBean \u5230 createBean \u5230 doCreateBean \u65b9\u6cd5\uff0c\u7136\u540e\u8fd4\u56de bean.\u5728 doCreateBean \u7684\u65f6\u5019\u5927\u6982\u5206\u4e3a\u4e09\u4e0d\uff0ccreateBeanInstance \u521b\u5efa bean \u7684\u5bf9\u8c61\uff0c\u7136\u540e populateBean \u8fdb\u884c\u5c5e\u6027\u5c01\u88c5\uff0c\u7136\u540e\u8c03\u7528 initialBean \u521d\u59cb\u5316 bean. \u5faa\u73af\u4f9d\u8d56\u4e3b\u8981\u53d1\u751f\u5728 populateBean \u65b9\u6cd5\u4e2d\uff0cspring \u91c7\u7528\u4e09\u7ea7\u7f13\u5b58\u89e3\u51b3\u3002\u4e00\u7ea7 singletonObjects \u5355\u4f8b\u7f13\u5b58\u6c60 concurrenthashmap\uff0c\u4e8c\u7ea7\u662f earlySingletonObjects \u662f hashmap\uff0c\u4e09\u7ea7\u662f singletonFactories \u4e5f\u662f hahsmap singletonObjects\uff1a\u7528\u4e8e\u5b58\u653e\u5b8c\u5168\u521d\u59cb\u5316\u597d\u7684 bean\uff0c\u4ece\u8be5\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684 bean \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 earlySingletonObjects\uff1a\u63d0\u524d\u66dd\u5149\u7684\u5355\u4f8b\u5bf9\u8c61\u7684 cache\uff0c\u5b58\u653e\u539f\u59cb\u7684 bean \u5bf9\u8c61\uff08\u5c1a\u672a\u586b\u5145\u5c5e\u6027\uff09\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56 singletonFactories\uff1a\u5355\u4f8b\u5bf9\u8c61\u5de5\u5382\u7684 cache\uff0c\u5b58\u653e bean \u5de5\u5382\u5bf9\u8c61\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56","title":"4. spring \u7684\u7f13\u5b58"},{"location":"spring/interview/#5-bean","text":"singleton \u9ed8\u8ba4\u5355\u4f8b\uff0cprototype \u6ce8\u610f\uff1a \u5355\u4f8b bean \u5f15\u7528 prototype bean \u7684\u65f6\u5019\uff0cprototype \u5c06\u4f1a\u5931\u53bb\u610f\u4e49\u3001\u5c06\u4f1a\u5931\u6548\u3002\u5355\u4f8b bean \u5bb9\u5668\u53ea\u4f1a\u8bbe\u7f6e\u4e00\u6b21 bean \u7684\u5c5e\u6027\uff0c\u53ea\u4f1a\u8bbe\u7f6e\u4e00\u6b21\uff0c\u56e0\u6b64 prototype \u7684 bean \u5c31\u4f1a\u5931\u6548 \u89e3\u51b3\u65b9\u6cd5\uff1a \u5b9e\u73b0 applicationcontextaware\uff0c\u91cd\u5199 setApplicationContext \u65b9\u6cd5\uff0c\u91cd\u65b0\u83b7\u53d6 bean,.getbean \u6bcf\u6b21\u91cd\u65b0\u83b7\u53d6 bean \u5728\u5355\u4f8b bean \u4e2d\u4f7f\u7528@LookUp \u6ce8\u89e3\uff0c\u5c06 get \u65b9\u6cd5\u4fee\u6539 @LookUp public abstract Dao getDao(); //\u8c03\u7528\u7684\u753b\u8981\u5fc5\u987b\u4f7f\u7528getDao()\u89e6\u53d1","title":"5. bean \u7684\u4f5c\u7528\u57df?"},{"location":"spring/interview/#6-spring","text":"","title":"6. spring \u4e2d\u7528\u4e86\u54ea\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\uff1f"},{"location":"spring/interview/#7-spring","text":"\u6784\u9020\u6ce8\u5165\u3001prototype \u4e24\u8005\u5faa\u73af\u4f9d\u8d56\u65e0\u6cd5\u89e3\u51b3\uff01","title":"7. spring \u4e2d\u7684\u5faa\u73af\u4f9d\u8d56\uff1f\u4e3a\u4ec0\u4e48\u7528\u4e09\u7ea7\u7f13\u5b58\uff1f"},{"location":"spring/interview/#springboot","text":"springboootApplication \u6ce8\u89e3\u662f\u7ec4\u5408\u6ce8\u89e3\uff0c\u91cc\u9762\u5305\u542b\u4e86@enableAutoConfiguration \u6ce8\u89e3\uff0c\u8fd9\u4e2a@EnableAutoConfiguration \u6ce8\u89e3\u4e5f\u662f\u4e00\u4e2a\u7ec4\u5408\u6ce8\u89e3\u3002\u91cc\u9762\u4f7f\u7528@import \u6ce8\u89e3\u5bfc\u5165\u4e86 autoconfigurationimportselector.clss \u8fd9\u4e2a\u7c7b\uff0c\u4e3b\u8981\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u52a0\u8f7d\u4e3b\u8981\u662f\u5728\u8fd9\u91cc\u52a0\u8f7d\u7684\u3002\u5b9e\u73b0\u4e86 DeferredImportSelector \u63a5\u53e3\uff0c\u91cd\u5199\u4e86 selectImports\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8d77\u59cb\u5c31\u662f\u53bb\u626b\u63cf boot-autoconfigura \u5305\u7684 meta-inf \u76ee\u5f55\u4e0b\u7684 spring.factories \u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0ckey \u4ee5 EnableAutoConfiguration \u5305\u540d\uff0cvalue \u662f\u6240\u6709\u7684 xxxxautoconfigura \u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684\u914d\u7f6e\u7c7b\u5305\u540d\uff0c\u52a0\u8f7d\u6240\u6709\u7684\u914d\u7f6e\u7c7b\uff0c\u6839\u636e\u914d\u7f6e\u7c7b\u4e0a conditiononXXX \u8fd9\u7c7b\u6ce8\u89e3\u51b3\u5b9a\u8981\u4e0d\u8981\u5c06\u914d\u7f6e\u7c7b\u52a0\u8f7d\u5230 spring \u5bb9\u5668\u4e2d\u3002\u8fd9\u5c31\u5b9e\u73b0\u4e86\u81ea\u52a8\u914d\u7f6e //1. springboot\u4e2d\u7684apringbootapplication\u6ce8\u89e3\u662f\u7ec4\u5408\u6ce8\u89e3 @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan(excludeFilters = { @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class), @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) }) public @interface SpringBootApplication { //2. AutoConfigurationPackage\u9ed8\u8ba4\u626b\u63cf\u5f53\u524d\u5305\u53ca\u5b50\u5305 @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Inherited @AutoConfigurationPackage @Import(AutoConfigurationImportSelector.class) public @interface EnableAutoConfiguration {","title":"springboot \u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"spring/interview/#springmvc-javaconfig","text":"\u5b9e\u73b0 webapplicationinnitializer \u63a5\u53e3\u91cd\u5199 onstart \u65b9\u6cd5\uff0c\u8fd9\u662f servlet3.0 \u65b0\u89c4\u8303","title":"springmvc javaconfig \u5982\u4f55\u914d\u7f6e"},{"location":"zookeeper/","text":"zookeeper \u00b6 \u53ef\u4ee5\u7406\u89e3\u6210\u6570\u636e\u5e93\u3001\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u6587\u4ef6\u7cfb\u7edf\u3002\u53ef\u4ee5\u7edf\u4e00\u547d\u540d\u670d\u52a1 \u96c6\u7fa4\u542f\u52a8\u65f6\u4f1a\u540c\u6b65\u6570\u636e \u548c leader \u540c\u6b65\uff0c\u5c11\u7684\u540c\u6b65\uff0c\u591a\u7684\u56de\u6eda datatree \u5185\u5b58\u6811 \u00b6 zk \u5c06\u6240\u6709\u6570\u636e\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u7684\u65f6\u5019\u9996\u5148\u53bb\u751f\u6210\u4e8b\u52a1\u65e5\u5fd7\uff0c\u7136\u540e\u66f4\u65b0\u5185\u5b58\u3002 \u975e\u4e8b\u52a1\u8bf7\u6c42\u662f\u76f4\u63a5\u83b7\u53d6 datatree \u4e2d\u6570\u636e \u8bf7\u6c42\u7c7b\u578b \u00b6 \u4e8b\u52a1\u6027\u8bf7\u6c42 create\u3001set\u3001delete\u3002\u5148\u751f\u6210\u4e8b\u52a1 id:zxid,\u5224\u65ad\u6570\u636e\u65b0\u65e7\u7a0b\u5ea6\u5c31\u662f\u6bd4\u8f83\u6700\u5927\u4e8b\u52a1 id\u3002 \u5982\u679c\u4e00\u5f00\u59cb\u542f\u52a8\uff0c\u6ca1\u6709 zxid\uff0cname \u53bb\u5224\u65ad myid. \u6240\u6709\u7684\u5199\u8bf7\u6c42\u5148\u7531 leader \u5904\u7406\uff0c \u975e\u4e8b\u52a1\u6027\u8bf7\u6c42 cap,zk\u53ea\u4fdd\u8bc1cp \u00b6 \u5f3a\u4e00\u81f4\u6027\u3001\u53ef\u7528\u6027\u3001\u5206\u533a\u5bb9\u9519\u6027 2cp \u9636\u6bb5\u63d0\u4ea4 \u00b6 \u9884\u63d0\u4ea4\u3001\u6536\u5230 ack\u3001\u63d0\u4ea4 \u9884\u63d0\u4ea4 leader \u751f\u6210\u4e8b\u52a1\u65e5\u5fd7 follower \u4e5f\u751f\u6210\u4e8b\u52a1\u65e5\u5fd7 ack follower \u751f\u6210\u4e8b\u52a1\u65e5\u5fd7\u6210\u529f\u540e\uff0c\u54cd\u5e94\u7ed9 leader \u4e00\u4e2a ack\u3002\u7b49\u5f85\u63d0\u4ea4\u66f4\u65b0 datatree \u63d0\u4ea4 leader \u63d0\u4ea4\uff0cfollower \u5c06\u6570\u636e\u66f4\u65b0\u5230 datatree\u3002leader \u63d0\u4ea4\u662f\u5f02\u6b65\u7684\uff0c\u63d0\u4ea4\u4ee5\u540e\u76f4\u63a5\u5c31\u8fd4\u56de\u4e86\uff0c\u4e0d\u7528\u7b49 follower \u5ba2\u6237\u7aef\u8fde\u63a5 follower \u64cd\u4f5c\u65f6\uff0cfollower \u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 leader \u9886\u5bfc\u9009\u4e3e\u673a\u5236 \u00b6 \u96c6\u7fa4\u542f\u52a8\u65f6\u9700\u8981\u9009\u4e3e leader \u6302\u4e86\u8981\u9009\u4e3e follower \u6302\u6389\u4e86 ZAB \u534f\u8bae \u00b6 \u89c4\u5b9a\u9886\u5bfc\u9009\u4e3e\u3001\u8fc7\u534a\u673a\u5236\u30012cp \u63d0\u4ea4\u3001\u6570\u636e\u540c\u6b65","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"zookeeper/#zookeeper","text":"\u53ef\u4ee5\u7406\u89e3\u6210\u6570\u636e\u5e93\u3001\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u6587\u4ef6\u7cfb\u7edf\u3002\u53ef\u4ee5\u7edf\u4e00\u547d\u540d\u670d\u52a1 \u96c6\u7fa4\u542f\u52a8\u65f6\u4f1a\u540c\u6b65\u6570\u636e \u548c leader \u540c\u6b65\uff0c\u5c11\u7684\u540c\u6b65\uff0c\u591a\u7684\u56de\u6eda","title":"zookeeper"},{"location":"zookeeper/#datatree","text":"zk \u5c06\u6240\u6709\u6570\u636e\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u7684\u65f6\u5019\u9996\u5148\u53bb\u751f\u6210\u4e8b\u52a1\u65e5\u5fd7\uff0c\u7136\u540e\u66f4\u65b0\u5185\u5b58\u3002 \u975e\u4e8b\u52a1\u8bf7\u6c42\u662f\u76f4\u63a5\u83b7\u53d6 datatree \u4e2d\u6570\u636e","title":"datatree \u5185\u5b58\u6811"},{"location":"zookeeper/#_1","text":"\u4e8b\u52a1\u6027\u8bf7\u6c42 create\u3001set\u3001delete\u3002\u5148\u751f\u6210\u4e8b\u52a1 id:zxid,\u5224\u65ad\u6570\u636e\u65b0\u65e7\u7a0b\u5ea6\u5c31\u662f\u6bd4\u8f83\u6700\u5927\u4e8b\u52a1 id\u3002 \u5982\u679c\u4e00\u5f00\u59cb\u542f\u52a8\uff0c\u6ca1\u6709 zxid\uff0cname \u53bb\u5224\u65ad myid. \u6240\u6709\u7684\u5199\u8bf7\u6c42\u5148\u7531 leader \u5904\u7406\uff0c \u975e\u4e8b\u52a1\u6027\u8bf7\u6c42","title":"\u8bf7\u6c42\u7c7b\u578b"},{"location":"zookeeper/#capzkcp","text":"\u5f3a\u4e00\u81f4\u6027\u3001\u53ef\u7528\u6027\u3001\u5206\u533a\u5bb9\u9519\u6027","title":"cap,zk\u53ea\u4fdd\u8bc1cp"},{"location":"zookeeper/#2cp","text":"\u9884\u63d0\u4ea4\u3001\u6536\u5230 ack\u3001\u63d0\u4ea4 \u9884\u63d0\u4ea4 leader \u751f\u6210\u4e8b\u52a1\u65e5\u5fd7 follower \u4e5f\u751f\u6210\u4e8b\u52a1\u65e5\u5fd7 ack follower \u751f\u6210\u4e8b\u52a1\u65e5\u5fd7\u6210\u529f\u540e\uff0c\u54cd\u5e94\u7ed9 leader \u4e00\u4e2a ack\u3002\u7b49\u5f85\u63d0\u4ea4\u66f4\u65b0 datatree \u63d0\u4ea4 leader \u63d0\u4ea4\uff0cfollower \u5c06\u6570\u636e\u66f4\u65b0\u5230 datatree\u3002leader \u63d0\u4ea4\u662f\u5f02\u6b65\u7684\uff0c\u63d0\u4ea4\u4ee5\u540e\u76f4\u63a5\u5c31\u8fd4\u56de\u4e86\uff0c\u4e0d\u7528\u7b49 follower \u5ba2\u6237\u7aef\u8fde\u63a5 follower \u64cd\u4f5c\u65f6\uff0cfollower \u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 leader","title":"2cp \u9636\u6bb5\u63d0\u4ea4"},{"location":"zookeeper/#_2","text":"\u96c6\u7fa4\u542f\u52a8\u65f6\u9700\u8981\u9009\u4e3e leader \u6302\u4e86\u8981\u9009\u4e3e follower \u6302\u6389\u4e86","title":"\u9886\u5bfc\u9009\u4e3e\u673a\u5236"},{"location":"zookeeper/#zab","text":"\u89c4\u5b9a\u9886\u5bfc\u9009\u4e3e\u3001\u8fc7\u534a\u673a\u5236\u30012cp \u63d0\u4ea4\u3001\u6570\u636e\u540c\u6b65","title":"ZAB \u534f\u8bae"},{"location":"zookeeper/interview/","text":"\u96c6\u7fa4\u4e00\u5b9a\u8981\u5947\u6570\u8282\u70b9\uff1f \u00b6 zk\u4f5c\u7528\uff0c\u7279\u6027\uff0c\u6570\u636e \u4e00\u81f4\u6027\u5982\u4f55\u4fdd\u8bc1\uff0c\u9886\u5bfc\u9009\u4e3e\u539f\u7406 \u00b6","title":"\u9762\u8bd5\u9898"},{"location":"zookeeper/interview/#_1","text":"","title":"\u96c6\u7fa4\u4e00\u5b9a\u8981\u5947\u6570\u8282\u70b9\uff1f"},{"location":"zookeeper/interview/#zk","text":"","title":"zk\u4f5c\u7528\uff0c\u7279\u6027\uff0c\u6570\u636e \u4e00\u81f4\u6027\u5982\u4f55\u4fdd\u8bc1\uff0c\u9886\u5bfc\u9009\u4e3e\u539f\u7406"}]}